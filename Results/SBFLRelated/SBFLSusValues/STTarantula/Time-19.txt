org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  0.9031505250875146
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  0.9687108886107635
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  0.9039943938332166
org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V  0.9039943938332166
org.joda.time.format.DateTimeFormatter.printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V  0.9023082303567266
org.joda.time.format.DateTimeFormatter.print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;  0.902518656716418
org.joda.time.format.DateTimeFormatter.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V  0.9008379888268156
org.joda.time.format.DateTimeFormatter.requirePrinter()Lorg/joda/time/format/DateTimePrinter;  0.8771532184950135
org.joda.time.format.DateTimeFormatter.selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;  0.8460865763008307
org.joda.time.format.DateTimeFormatterBuilder$Composite.estimatePrintedLength()I  0.8849759890235536
org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  0.9071729957805907
org.joda.time.format.ISODateTimeFormat.dateTime()Lorg/joda/time/format/DateTimeFormatter;  0.9251733205833134
org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  0.9212092358962152
org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V  0.9422936449963477
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;  0.9961389961389961
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V  0.9953703703703702
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I  0.9762865792129163
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J  0.9762865792129163
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(Ljava/lang/Object;)Z  0.984482320020351
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.9753024193548386
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;  0.9961389961389961
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V  0.994091959928076
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I  0.9762865792129163
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J  0.9762865792129163
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(Ljava/lang/Object;)Z  0.982233502538071
org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9951144253021343
org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;  0.9951144253021343
org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9951144253021343
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.9961389961389961
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V  0.9951144253021343
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J  0.9748110831234258
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I  0.8739837398373984
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(Ljava/lang/Object;)Z  0.984482320020351
org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;  0.9943473792394656
org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V  0.9943473792394656
org.joda.time.tz.CachedDateTimeZone.getOffset(J)I  0.7521865889212829
org.joda.time.tz.CachedDateTimeZone.hashCode()I  0.8939708939708939
org.joda.time.tz.CachedDateTimeZone.equals(Ljava/lang/Object;)Z  0.9824828636709824
org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.9629261010201542
org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.984231943031536
org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V  0.9629261010201542
org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I  0.9721175584024114
org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;  0.9961389961389961
org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V  0.9951144253021343
org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J  0.9767794043412417
org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(Ljava/lang/Object;)Z  0.984482320020351
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J  0.9748110831234258
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J  0.8755656108597284
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J  0.8755656108597284
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.994602929838088
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9951144253021343
org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J  0.9953703703703702
org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;  0.7880268784361637
org.joda.time.chrono.ISOChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;  0.97162942505649
org.joda.time.chrono.ISOChronology.withUTC()Lorg/joda/time/Chronology;  0.723229302934031
org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I  0.7517482517482518
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I  0.7977736549165121
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I  0.8255119453924915
org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(J)I  0.8099623273336124
org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J  0.8624916425228438
org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J  0.822529224229543
org.joda.time.chrono.AssembledChronology.getZone()Lorg/joda/time/DateTimeZone;  0.6137985725614592
org.joda.time.chrono.AssembledChronology.getDateTimeMillis(IIIIIII)J  0.8089464882943144
org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;  0.8173178458289334
org.joda.time.chrono.AssembledChronology.secondOfMinute()Lorg/joda/time/DateTimeField;  0.7686196623634558
org.joda.time.chrono.AssembledChronology.secondOfDay()Lorg/joda/time/DateTimeField;  0.8843692870201096
org.joda.time.chrono.AssembledChronology.minuteOfHour()Lorg/joda/time/DateTimeField;  0.7622611778609416
org.joda.time.chrono.AssembledChronology.hourOfDay()Lorg/joda/time/DateTimeField;  0.7563025210084033
org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;  0.8394793926247288
org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;  0.7104828345878466
org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;  0.7073661122281119
org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;  0.7153419593345656
org.joda.time.chrono.AssembledChronology.getBase()Lorg/joda/time/Chronology;  0.7119205298013245
org.joda.time.chrono.AssembledChronology.getParam()Ljava/lang/Object;  0.6394580304031725
org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I  0.749419054996127
org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I  0.8541160891635401
org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I  0.8276304533789564
org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J  0.8586642999778122
org.joda.time.chrono.BasicGJChronology.setYear(JI)J  0.9614906832298137
org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z  0.7233644859813083
org.joda.time.chrono.GregorianChronology.getMinYear()I  0.7428023032629559
org.joda.time.chrono.GregorianChronology.getMaxYear()I  0.7426597582037997
org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J  0.7429449030524092
org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J  0.7429449030524092
org.joda.time.chrono.BasicYearDateTimeField.get(J)I  0.7486941381311666
org.joda.time.chrono.BasicYearDateTimeField.add(JI)J  0.8671297333632085
org.joda.time.chrono.BasicYearDateTimeField.set(JI)J  0.8193944526783825
org.joda.time.chrono.BasicChronology.getDateTimeMillis(IIIIIII)J  0.8049084858569051
org.joda.time.chrono.BasicChronology.getYearMillis(I)J  0.7201339784145888
org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J  0.7476816074188563
org.joda.time.chrono.BasicChronology.getYear(J)I  0.7336492890995261
org.joda.time.chrono.BasicChronology.getMonthOfYear(J)I  0.8213073005093379
org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I  0.7598664834086001
org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I  0.822529224229543
org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I  0.7510188239860276
org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I  0.803905276277524
org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I  0.8546819787985865
org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I  0.8097928436911488
org.joda.time.chrono.BasicChronology.getDateMidnightMillis(III)J  0.7704559028469042
org.joda.time.chrono.BasicChronology.getMaxMonth(I)I  0.7706093189964158
org.joda.time.chrono.BasicChronology.getMaxMonth()I  0.7807141416179141
org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;  0.7201339784145888
org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I  0.8584738243123335
org.joda.time.chrono.ZonedChronology.getZone()Lorg/joda/time/DateTimeZone;  0.6395637084779376
org.joda.time.chrono.ZonedChronology.getDateTimeMillis(IIIIIII)J  0.8535509483899427
org.joda.time.chrono.ZonedChronology.localToUTC(J)J  0.8548707753479126
org.joda.time.base.AbstractDateTime.<init>()V  0.7419478527607362
org.joda.time.base.AbstractInstant.<init>()V  0.7297755987177069
org.joda.time.base.AbstractInstant.toString()Ljava/lang/String;  0.9452857840742549
org.joda.time.base.BaseDateTime.<init>(IIIIIIILorg/joda/time/DateTimeZone;)V  0.929171668667467
org.joda.time.base.BaseDateTime.<init>(IIIIIIILorg/joda/time/Chronology;)V  0.8147368421052631
org.joda.time.base.BaseDateTime.checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;  0.7449470644850819
org.joda.time.base.BaseDateTime.checkInstant(JLorg/joda/time/Chronology;)J  0.7649733148843645
org.joda.time.base.BaseDateTime.getMillis()J  0.7360213008748574
org.joda.time.base.BaseDateTime.getChronology()Lorg/joda/time/Chronology;  0.7715311004784688
org.joda.time.DateTimeFieldType.millisOfSecond()Lorg/joda/time/DateTimeFieldType;  0.7771084337349398
org.joda.time.DateTimeFieldType.secondOfMinute()Lorg/joda/time/DateTimeFieldType;  0.7567461869378177
org.joda.time.DateTimeFieldType.minuteOfHour()Lorg/joda/time/DateTimeFieldType;  0.7743097238895559
org.joda.time.DateTimeFieldType.hourOfDay()Lorg/joda/time/DateTimeFieldType;  0.771223595057792
org.joda.time.DateTimeFieldType.dayOfMonth()Lorg/joda/time/DateTimeFieldType;  0.7440876754470294
org.joda.time.DateTimeFieldType.monthOfYear()Lorg/joda/time/DateTimeFieldType;  0.7278540530374271
org.joda.time.DateTimeFieldType.year()Lorg/joda/time/DateTimeFieldType;  0.7266241081487045
org.joda.time.field.FieldUtils.safeAdd(II)I  0.8514851485148515
org.joda.time.field.FieldUtils.safeAdd(JJ)J  0.8072590738423029
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V  0.7557117750439368
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V  0.7704559028469042
org.joda.time.field.PreciseDateTimeField.get(J)I  0.7513104251601631
org.joda.time.field.PreciseDateTimeField.set(JI)J  0.803905276277524
org.joda.time.field.PreciseDateTimeField.getMaximumValue()I  0.7589723475191213
org.joda.time.field.PreciseDurationField.add(JI)J  0.8338720103425985
org.joda.time.field.PreciseDurationDateTimeField.set(JI)J  0.8193944526783825
org.joda.time.field.PreciseDurationDateTimeField.remainder(J)J  0.9144612476370511
org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;  0.81922099915326
org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I  0.7594191522762951
org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J  0.7321225879682179
org.joda.time.field.MillisDurationField.add(JI)J  0.8516725352112675
org.joda.time.field.BaseDateTimeField.add(JI)J  0.867713004484305
org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.967016491754123
org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V  0.9895167476348761
org.joda.time.DateTimeZone.getID()Ljava/lang/String;  0.8710330857528698
org.joda.time.DateTimeZone.getOffsetFromLocal(J)I  0.8435047951176983
org.joda.time.DateTimeZone.hashCode()I  0.8927335640138409
org.joda.time.DateTimeUtils.getInstantMillis(Lorg/joda/time/ReadableInstant;)J  0.8651911468812877
org.joda.time.DateTimeUtils.getInstantChronology(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;  0.8729979697721633
org.joda.time.DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;  0.6092569269521411
org.joda.time.DateTime.<init>(IIIIILorg/joda/time/DateTimeZone;)V  0.9961389961389961
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;  0.9035722624328741
