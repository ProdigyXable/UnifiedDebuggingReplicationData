org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  0.006666666666666667
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  0.006369426751592357
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.0016313213703099511
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0015455950540958269
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.006578947368421052
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.006289308176100629
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.006578947368421052
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.0012903225806451613
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.00625
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.006369426751592357
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.006329113924050633
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.006535947712418301
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.006535947712418301
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.006622516556291391
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.0018281535648994515
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.003816793893129771
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  0.005681818181818182
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  0.005681818181818182
org.apache.commons.math3.linear.DiagonalMatrix.getData()[[D  0.011627906976744186
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  0.005681818181818182
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  0.005681818181818182
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  0.005681818181818182
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.011235955056179775
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;  0.011627906976744186
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.011627906976744186
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.setUp()V  0.011627906976744186
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V  0.011627906976744186
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.checkParameters()V  0.011627906976744186
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.011235955056179775
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;  0.043478260869565216
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;  0.011627906976744186
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.setUp()V  0.011627906976744186
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.011627906976744186
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>()V  0.023809523809523808
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.01639344262295082
org.apache.commons.math3.optimization.Target.<init>([D)V  0.011627906976744186
org.apache.commons.math3.optimization.Target.getTarget()[D  0.011627906976744186
org.apache.commons.math3.optimization.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V  0.2
org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit([D)[D  0.2
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.<init>(DDD)V  0.04
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getWeight()D  0.043478260869565216
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getY()D  0.041666666666666664
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  0.043478260869565216
org.apache.commons.math3.optimization.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V  0.038461538461538464
org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(DDD)V  0.041666666666666664
org.apache.commons.math3.optimization.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.05
org.apache.commons.math3.optimization.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.043478260869565216
org.apache.commons.math3.optimization.InitialGuess.<init>([D)V  0.005847953216374269
org.apache.commons.math3.optimization.InitialGuess.getInitialGuess()[D  0.0058823529411764705
org.apache.commons.math3.optimization.Weight.<init>([D)V  0.011627906976744186
org.apache.commons.math3.optimization.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.011627906976744186
org.apache.commons.math3.util.Incrementor$1.<init>()V  0.0015174506828528073
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.000578368999421631
org.apache.commons.math3.util.FastMath.abs(D)D  0.0005370569280343716
org.apache.commons.math3.util.FastMath.max(DD)D  0.0018832391713747645
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.0009784735812133072
org.apache.commons.math3.util.Incrementor.<init>()V  0.001658374792703151
org.apache.commons.math3.util.Incrementor.<init>(I)V  0.0015174506828528073
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.0011587485515643105
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.0012755102040816326
org.apache.commons.math3.util.Incrementor.resetCount()V  0.001218026796589525
org.apache.commons.math3.analysis.FunctionUtils$18.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)V  0.011627906976744186
org.apache.commons.math3.analysis.FunctionUtils$19.<init>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)V  0.011627906976744186
org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableMultivariateVectorFunction(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;  0.011627906976744186
org.apache.commons.math3.analysis.FunctionUtils.toMultivariateDifferentiableVectorFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;  0.011627906976744186
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  0.013157894736842105
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  0.01694915254237288
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  0.05
