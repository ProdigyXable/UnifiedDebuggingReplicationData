org.apache.commons.math3.optim.PointValuePair.<init>([DD)V  -0.22962962962962963
org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V  -0.22962962962962963
org.apache.commons.math3.optim.PointValuePair.getPoint()[D  -0.037037037037037035
org.apache.commons.math3.optim.PointValuePair.getPointRef()[D  -0.43859649122807015
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V  -0.9344262295081968
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V  -0.9344262295081968
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D  -0.9272727272727272
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V  -0.4857142857142857
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z  -0.4626865671641791
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.5390946502057613
org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  -0.5294117647058824
org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.14666666666666667
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D  -0.44
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D  -0.4482758620689655
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D  -0.43147208121827413
org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V  -0.1111111111111111
org.apache.commons.math3.optim.MaxEval.<init>(I)V  -0.504424778761062
org.apache.commons.math3.optim.MaxEval.getMaxEval()I  -0.5022222222222222
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V  -0.1111111111111111
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;  -0.06306306306306306
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.2777777777777778
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  -0.2727272727272727
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.06306306306306306
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  -0.20610687022900764
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D  0.0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D[D)V  -0.9024390243902439
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D  -0.9024390243902439
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.8974358974358975
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  -0.9
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D  -0.9024390243902439
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V  -0.9024390243902439
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D)[D  -0.9024390243902439
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V  -0.9024390243902439
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D  -0.9
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.8787878787878788
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V  -0.8666666666666667
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  -0.8666666666666667
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;[D)D  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V  0.2549019607843137
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer$LineSearch;I[D[D)V  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(D)D  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V  0.2549019607843137
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction;[D)[D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.23076923076923078
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.2549019607843137
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.45454545454545453
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V  -0.8709677419354839
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.3953488372093023
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;[D)D  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$400(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)Z  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V  -0.5897435897435898
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V  -0.5897435897435898
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  -0.6521739130434783
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.43859649122807015
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V  -0.4716981132075472
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  -0.43859649122807015
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  -0.4074074074074074
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.43859649122807015
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;[D)D  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V  -0.36
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.build([D)V  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V  -0.6666666666666666
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V  -0.5789473684210527
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V  -0.5294117647058824
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.access$100(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.391304347826087
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V  -0.5
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V  -0.5
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  -0.5294117647058824
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;  -0.5428571428571428
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;DD)V  -0.8787878787878788
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  -0.875
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I  -0.41818181818181815
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D  -0.9024390243902439
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  -0.9047619047619048
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.937007874015748
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D  -0.9322033898305084
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.9333333333333333
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.937007874015748
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D  -0.9338842975206612
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9338842975206612
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D  -0.9344262295081968
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.9338842975206612
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  -0.9333333333333333
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;  -0.9333333333333333
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.937007874015748
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;  -0.9322033898305084
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D  -0.9292035398230089
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9555555555555556
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V  -0.9292035398230089
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D  -0.9333333333333333
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.9230769230769231
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.9333333333333333
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  -0.92
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V  -0.9310344827586207
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  -0.9452054794520548
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  -0.9565217391304348
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  -0.9148936170212766
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V  -0.9166666666666666
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V  -0.9259259259259259
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.9534883720930233
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V  -0.9555555555555556
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V  -0.9555555555555556
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  -0.9338842975206612
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  -0.9338842975206612
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  -0.9349593495934959
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9349593495934959
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.5658914728682171
org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I  -0.9245283018867925
org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I  -0.5897435897435898
org.apache.commons.math3.optim.BaseOptimizer.getIterations()I  1.0
org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;  -0.42857142857142855
org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  -0.5573122529644269
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V  -0.4666666666666667
org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.5022222222222222
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  -0.5658914728682171
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  -0.4716981132075472
org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D  -0.46919431279620855
org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V  -0.6363636363636364
org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D  -0.5728155339805825
org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D  -0.5686274509803921
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V  -0.8857142857142857
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z  -0.8823529411764706
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V  -0.9130434782608695
org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D  -0.9130434782608695
org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D  -0.9130434782608695
org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D  -0.9130434782608695
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V  -0.9111111111111111
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D  -0.9090909090909091
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D  -0.9111111111111111
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.9166666666666666
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  -0.8787878787878788
org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  -0.9047619047619048
org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V  -0.8918918918918919
org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V  -0.8918918918918919
org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V  -0.8620689655172413
org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D  -0.8888888888888888
org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D  -0.8888888888888888
org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D  -0.8823529411764706
org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D  -0.8888888888888888
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V  -0.9148936170212766
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;  -0.9148936170212766
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -0.9166666666666666
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  -0.9148936170212766
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  -0.9111111111111111
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -0.9130434782608695
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D  -0.9111111111111111
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D  -0.9111111111111111
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D  -0.9111111111111111
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D  -0.9111111111111111
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  -0.5658914728682171
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V  -0.9333333333333333
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z  -0.92
org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V  -0.15789473684210525
org.apache.commons.math3.optim.SimpleBounds.getLower()[D  -0.14666666666666667
org.apache.commons.math3.optim.SimpleBounds.getUpper()[D  -0.14666666666666667
org.apache.commons.math3.optim.SimpleBounds.unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;  -0.034482758620689655
org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  -0.030303030303030304
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  -0.030303030303030304
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  -0.030303030303030304
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  -0.030303030303030304
org.apache.commons.math3.linear.RealVector.<init>()V  -0.9208381839348079
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  -0.678391959798995
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  -0.839622641509434
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  -0.375
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  -0.015384615384615385
org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  -0.375
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  -0.4
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  -0.8938053097345132
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -0.8990182328190743
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -0.8990182328190743
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  -0.2
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  -0.6024844720496895
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  -0.8105263157894737
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  -0.8556263269639066
org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V  -0.9845261121856866
org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D  -0.9696969696969697
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D  -0.9731543624161074
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  -0.8222222222222222
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  -0.8490566037735849
org.apache.commons.math3.linear.ArrayRealVector.toArray()[D  -0.9812206572769953
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V  -0.9782608695652174
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.7276595744680852
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  -0.7276595744680852
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  -0.9629629629629629
org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V  -0.9609756097560975
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V  -0.9649122807017544
org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  -0.9607843137254902
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  -0.9689922480620154
org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D  -0.9705882352941176
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;  -0.9354838709677419
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  -0.9659574468085106
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  -0.9658119658119658
org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D  -0.9587628865979382
org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I  -0.9659574468085106
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  -0.9670781893004116
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.3684210526315789
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  -0.4117647058823529
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  -0.16666666666666666
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  -0.1044776119402985
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.3684210526315789
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  -0.27710843373493976
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  -0.9107981220657277
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  -0.8687258687258688
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  -0.8726591760299626
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  -0.7850746268656716
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  -0.8224543080939948
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  -0.8333333333333334
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  -0.8731343283582089
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  -0.872791519434629
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  -0.8661417322834646
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  -0.8895705521472392
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  -0.889739663093415
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  -0.7288135593220338
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  -0.8367346938775511
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  -0.8731343283582089
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.4174757281553398
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  -0.4
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  -0.2857142857142857
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  -0.375
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  -0.375
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  -0.3023255813953488
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.9652173913043478
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V  -0.9629629629629629
org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;  -0.9629629629629629
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  -0.8821603927986906
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  -0.8912732474964234
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -0.058823529411764705
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -0.539568345323741
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  -0.030303030303030304
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  -0.6458333333333334
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -0.6502732240437158
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  -0.030303030303030304
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  -0.058823529411764705
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  -0.1780821917808219
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  -0.6363636363636364
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  -0.28888888888888886
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  -0.7276595744680852
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  -0.7229437229437229
org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  -0.967479674796748
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  -0.729957805907173
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  -0.7366255144032922
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  -0.729957805907173
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  -0.7366255144032922
org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V  -0.9636363636363636
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  -0.963963963963964
org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V  -0.9644444444444444
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9620853080568721
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;  -0.958974358974359
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -0.9605911330049262
org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D  -0.9587628865979382
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  -0.9641255605381166
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V  -0.9626168224299065
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  -0.9653679653679653
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  -0.9650655021834061
org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D  -0.9587628865979382
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V  -0.9629629629629629
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  -0.948051948051948
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZLorg/apache/commons/math3/linear/LUDecomposition$1;)V  -0.9629629629629629
org.apache.commons.math3.util.MathArrays.copyOf([D)[D  -0.9529411764705882
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  -0.1111111111111111
org.apache.commons.math3.util.MathArrays.copyOf([DI)[D  -0.9642857142857143
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V  -0.8116343490304709
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  -0.8116343490304709
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  -0.8116343490304709
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  -0.8116343490304709
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  -0.9408502772643254
org.apache.commons.math3.util.Incrementor$1.<init>()V  -0.9884726224783862
org.apache.commons.math3.util.Precision.compareTo(DDD)I  -0.5161290322580645
org.apache.commons.math3.util.Precision.equals(DD)Z  -0.9615384615384616
org.apache.commons.math3.util.Precision.equals(DDD)Z  -0.8863636363636364
org.apache.commons.math3.util.Precision.equals(DDI)Z  -0.9256830601092896
org.apache.commons.math3.util.FastMath.sqrt(D)D  -0.9591836734693877
org.apache.commons.math3.util.FastMath.log(D)D  -0.925754060324826
org.apache.commons.math3.util.FastMath.log(D[D)D  -0.8265582655826558
org.apache.commons.math3.util.FastMath.pow(DI)D  -0.9428571428571428
org.apache.commons.math3.util.FastMath.polySine(D)D  -0.853763440860215
org.apache.commons.math3.util.FastMath.polyCosine(D)D  -0.853763440860215
org.apache.commons.math3.util.FastMath.sinQ(DD)D  -0.8392434988179669
org.apache.commons.math3.util.FastMath.cosQ(DD)D  -0.8388625592417062
org.apache.commons.math3.util.FastMath.sin(D)D  -0.7509157509157509
org.apache.commons.math3.util.FastMath.cos(D)D  -0.6995305164319249
org.apache.commons.math3.util.FastMath.atan(D)D  -0.5
org.apache.commons.math3.util.FastMath.atan(DDZ)D  -0.6862745098039216
org.apache.commons.math3.util.FastMath.abs(J)J  -0.9302564102564103
org.apache.commons.math3.util.FastMath.abs(D)D  -0.9485469271081467
org.apache.commons.math3.util.FastMath.min(II)I  -0.8917456021650879
org.apache.commons.math3.util.FastMath.min(DD)D  -0.9506172839506173
org.apache.commons.math3.util.FastMath.max(II)I  -0.8403990024937655
org.apache.commons.math3.util.FastMath.max(DD)D  -0.8054054054054054
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  -0.9376623376623376
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  -0.7959927140255009
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  -0.7380352644836272
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  -0.6470588235294118
org.apache.commons.math3.util.Incrementor.<init>()V  -0.987460815047022
org.apache.commons.math3.util.Incrementor.<init>(I)V  -0.9884726224783862
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  -0.8763796909492274
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  -0.8653846153846154
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  -0.9452054794520548
org.apache.commons.math3.util.Incrementor.getCount()I  -0.5942028985507246
org.apache.commons.math3.util.Incrementor.incrementCount()V  -0.8650602409638555
org.apache.commons.math3.util.Incrementor.resetCount()V  -0.8699186991869918
org.apache.commons.math3.random.MersenneTwister.<init>()V  -0.16883116883116883
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V  -0.6595744680851063
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V  -0.5428571428571428
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V  -0.539568345323741
org.apache.commons.math3.random.MersenneTwister.next(I)I  -0.5223880597014925
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V  -0.9488409272581935
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  -0.8571428571428571
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  -0.5223880597014925
org.apache.commons.math3.random.BitsStreamGenerator.clear()V  -0.9488409272581935
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V  -0.9838709677419355
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V  -0.9846153846153847
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getEvaluations()I  -0.9473684210526315
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D  -0.9838056680161943
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D  -0.9838056680161943
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D  -0.9804878048780488
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D  -0.9829787234042553
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D  -0.9823788546255506
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D  -0.9829059829059829
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D  -0.9838709677419355
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V  -0.9841269841269841
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D  -0.9840637450199203
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V  -0.9800995024875622
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V  -0.9840637450199203
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(DD)V  -0.9855595667870036
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(DDD)V  -0.9804878048780488
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V  -0.9831932773109243
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V  -0.9333333333333333
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V  -0.9748427672955975
org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D  -0.9436619718309859
org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D  -0.971830985915493
org.apache.commons.math3.analysis.function.Sinc.value(D)D  -0.9024390243902439
