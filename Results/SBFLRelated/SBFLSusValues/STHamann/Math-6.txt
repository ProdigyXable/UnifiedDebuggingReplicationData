org.apache.commons.math3.optim.PointValuePair.<init>([DD)V  0.9661914460285133
org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V  0.9661914460285133
org.apache.commons.math3.optim.PointValuePair.getPoint()[D  0.9771894093686354
org.apache.commons.math3.optim.PointValuePair.getPointRef()[D  0.9832993890020366
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V  0.9519348268839104
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V  0.9519348268839104
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D  0.9784114052953157
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V  0.9788187372708758
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z  0.9881873727087577
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9238289205702648
org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.9258655804480652
org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9824847250509166
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D  0.9413441955193482
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D  0.9401221995926681
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D  0.9425661914460285
org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V  0.9881873727087577
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.9307535641547862
org.apache.commons.math3.optim.MaxEval.getMaxEval()I  0.9311608961303462
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V  0.9735234215885947
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;  0.9759674134419551
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9625254582484725
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9629327902240326
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9759674134419551
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.9678207739307536
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D  0.9788187372708758
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D[D)V  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.984928716904277
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.9845213849287169
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V  0.9881873727087577
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D)[D  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D  0.9845213849287169
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9873727087576375
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V  0.9885947046843178
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.9885947046843178
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V  0.9881873727087577
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;[D)D  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V  0.9922606924643584
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D  0.9934826883910387
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer$LineSearch;I[D[D)V  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(D)D  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V  0.9922606924643584
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I  0.9934826883910387
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction;[D)[D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9918533604887984
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9922606924643584
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.9951120162932791
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9934826883910387
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V  0.9881873727087577
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  0.9938900203665988
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V  0.9938900203665988
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9938900203665988
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.9938900203665988
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9938900203665988
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.994704684317719
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I  0.9938900203665988
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I  0.9938900203665988
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;[D)D  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$400(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)Z  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V  0.9873727087576375
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V  0.9873727087576375
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.9873727087576375
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9832993890020366
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9832993890020366
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.9845213849287169
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9832993890020366
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;[D)D  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V  0.9861507128309572
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.build([D)V  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V  0.9894093686354379
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.access$100(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.9942973523421589
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V  0.990224032586558
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V  0.990224032586558
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.9894093686354379
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9890020366598778
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;DD)V  0.9873727087576375
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D  0.9841140529531568
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.9837067209775967
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.94989816700611
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D  0.9535641547861508
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9527494908350306
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.94989816700611
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D  0.9523421588594705
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.9523421588594705
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D  0.9519348268839104
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9523421588594705
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.9527494908350306
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;  0.9527494908350306
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.94989816700611
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9535641547861508
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D  0.9556008146639511
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;  0.9641547861507128
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V  0.9556008146639511
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D  0.9873727087576375
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9796334012219959
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9763747454175152
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9861507128309572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V  0.9881873727087577
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.9710794297352342
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.9633401221995926
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V  0.9877800407331976
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V  0.9788187372708758
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9865580448065173
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V  0.9641547861507128
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V  0.9881873727087577
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.9523421588594705
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.9523421588594705
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.9515274949083503
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.9515274949083503
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9177189409368636
org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I  0.9792260692464358
org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I  0.974745417515275
org.apache.commons.math3.optim.BaseOptimizer.getIterations()I  1.0
org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;  0.9429735234215886
org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.9197556008146639
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V  0.9372708757637475
org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9775967413441955
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9177189409368636
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.9364562118126273
org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D  0.9368635437881874
org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V  0.959674134419552
org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D  0.9670061099796334
org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.9674134419551935
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V  0.9865580448065173
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z  0.9881873727087577
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V  0.9820773930753565
org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D  0.9820773930753565
org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D  0.9820773930753565
org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D  0.9820773930753565
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V  0.9824847250509166
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D  0.9828920570264765
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D  0.9824847250509166
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9812627291242363
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9873727087576375
org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9873727087576375
org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V  0.9857433808553971
org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V  0.9857433808553971
org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V  0.9890020366598778
org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D  0.9861507128309572
org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D  0.9861507128309572
org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D  0.9869653767820774
org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D  0.9861507128309572
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V  0.9816700610997964
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;  0.9816700610997964
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9812627291242363
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9816700610997964
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.9824847250509166
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9820773930753565
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D  0.9824847250509166
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D  0.9824847250509166
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D  0.9824847250509166
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D  0.9824847250509166
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9177189409368636
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V  0.9763747454175152
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z  0.9877800407331976
org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V  0.9820773930753565
org.apache.commons.math3.optim.SimpleBounds.getLower()[D  0.9824847250509166
org.apache.commons.math3.optim.SimpleBounds.getUpper()[D  0.9824847250509166
org.apache.commons.math3.optim.SimpleBounds.unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;  0.9877800407331976
org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  0.9861507128309572
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  0.9861507128309572
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  0.9861507128309572
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  0.9861507128309572
org.apache.commons.math3.linear.RealVector.<init>()V  0.6639511201629328
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9319755600814664
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9881873727087577
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9731160896130346
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9881873727087577
org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  0.9881873727087577
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  0.9714867617107943
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.7384928716904277
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.9767820773930753
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.9788187372708758
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.9869653767820774
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.9877800407331976
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.9857433808553971
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  0.8219959266802443
org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V  0.7910386965376782
org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D  0.8940936863543788
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D  0.9865580448065173
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  0.9877800407331976
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  0.8403258655804481
org.apache.commons.math3.linear.ArrayRealVector.toArray()[D  0.9140529531568228
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V  0.9832993890020366
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9173116089613035
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  0.9173116089613035
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.9568228105906313
org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V  0.9181262729124237
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V  0.9087576374745417
org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  0.9185336048879837
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.9482688391038696
org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D  0.9816700610997964
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.9755600814663951
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.9059063136456211
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.9063136456211812
org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D  0.9881873727087577
org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I  0.9059063136456211
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.9026476578411405
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9873727087576375
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.9869653767820774
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  0.9828920570264765
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  0.9877800407331976
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9735234215885947
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  0.9877800407331976
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.6684317718940936
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  0.8028513238289205
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  0.7963340122199593
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  0.9865580448065173
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8578411405295315
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  0.8566191446028514
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  0.9881873727087577
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  0.7841140529531568
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  0.8069246435845214
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  0.7490835030549898
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  0.7486761710794297
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.9169042769857434
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  0.8533604887983707
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  0.7955193482688391
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9881873727087577
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.9714867617107943
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.9780040733197556
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.9731160896130346
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.9731160896130346
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.9771894093686354
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9539714867617108
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V  0.9881873727087577
org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;  0.9568228105906313
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.7657841140529531
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.9877800407331976
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9853360488798371
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9564154786150713
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9861507128309572
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9356415478615071
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9384928716904277
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  0.9861507128309572
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  0.9853360488798371
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  0.9881873727087577
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  0.9413441955193482
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  0.9763747454175152
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  0.9173116089613035
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.9189409368635438
org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.9881873727087577
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.9164969450101833
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  0.9140529531568228
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  0.9164969450101833
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  0.9140529531568228
org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V  0.9120162932790224
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  0.9112016293279023
org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V  0.909979633401222
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  0.9156822810590631
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;  0.9221995926680244
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9881873727087577
org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D  0.9226069246435845
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  0.9107942973523422
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V  0.9869653767820774
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  0.9075356415478615
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  0.9083503054989817
org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D  0.9226069246435845
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V  0.9568228105906313
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.9881873727087577
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZLorg/apache/commons/math3/linear/LUDecomposition$1;)V  0.9568228105906313
org.apache.commons.math3.util.MathArrays.copyOf([D)[D  0.9661914460285133
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  0.9837067209775967
org.apache.commons.math3.util.MathArrays.copyOf([DI)[D  0.955193482688391
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V  0.9629327902240326
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  0.8668024439918534
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  0.8668024439918534
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  0.8668024439918534
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  0.5723014256619144
org.apache.commons.math3.util.Incrementor$1.<init>()V  0.7189409368635438
org.apache.commons.math3.util.Precision.compareTo(DDD)I  0.9657841140529532
org.apache.commons.math3.util.Precision.equals(DD)Z  0.9169042769857434
org.apache.commons.math3.util.Precision.equals(DDD)Z  0.7971486761710794
org.apache.commons.math3.util.Precision.equals(DDI)Z  0.9592668024439919
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.2570264765784114
org.apache.commons.math3.util.FastMath.log(D)D  0.6619144602851323
org.apache.commons.math3.util.FastMath.log(D[D)D  0.9865580448065173
org.apache.commons.math3.util.FastMath.pow(DI)D  0.9832993890020366
org.apache.commons.math3.util.FastMath.polySine(D)D  0.8244399185336049
org.apache.commons.math3.util.FastMath.polyCosine(D)D  0.8244399185336049
org.apache.commons.math3.util.FastMath.sinQ(DD)D  0.8415478615071283
org.apache.commons.math3.util.FastMath.cosQ(DD)D  0.8419551934826884
org.apache.commons.math3.util.FastMath.sin(D)D  0.9873727087576375
org.apache.commons.math3.util.FastMath.cos(D)D  0.9877800407331976
org.apache.commons.math3.util.FastMath.atan(D)D  0.9804480651731161
org.apache.commons.math3.util.FastMath.atan(DDZ)D  0.9853360488798371
org.apache.commons.math3.util.FastMath.abs(J)J  0.6167006109979634
org.apache.commons.math3.util.FastMath.abs(D)D  0.1670061099796334
org.apache.commons.math3.util.FastMath.min(II)I  0.7152749490835031
org.apache.commons.math3.util.FastMath.min(DD)D  0.9881873727087577
org.apache.commons.math3.util.FastMath.max(II)I  0.8496945010183299
org.apache.commons.math3.util.FastMath.max(DD)D  0.9881873727087577
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.9837067209775967
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  0.7991853360488799
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  0.8594704684317719
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  0.8973523421588595
org.apache.commons.math3.util.Incrementor.<init>()V  0.7417515274949084
org.apache.commons.math3.util.Incrementor.<init>(I)V  0.7189409368635438
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.6537678207739308
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.6839103869653768
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  0.9710794297352342
org.apache.commons.math3.util.Incrementor.getCount()I  0.9103869653767821
org.apache.commons.math3.util.Incrementor.incrementCount()V  0.9775967413441955
org.apache.commons.math3.util.Incrementor.resetCount()V  0.6720977596741344
org.apache.commons.math3.random.MersenneTwister.<init>()V  0.9816700610997964
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V  0.9364562118126273
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V  0.9560081466395112
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V  0.9564154786150713
org.apache.commons.math3.random.MersenneTwister.next(I)I  0.9584521384928717
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V  0.5034623217922607
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  0.8305498981670061
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  0.9584521384928717
org.apache.commons.math3.random.BitsStreamGenerator.clear()V  0.5034623217922607
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V  0.8997963340122199
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V  0.894908350305499
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getEvaluations()I  0.9698574338085539
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D  0.90020366598778
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D  0.90020366598778
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D  0.9173116089613035
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D  0.9050916496945011
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D  0.9083503054989817
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D  0.9054989816700612
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D  0.8997963340122199
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V  0.8981670061099797
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D  0.8985743380855398
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V  0.9189409368635438
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V  0.9877800407331976
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(DD)V  0.9816700610997964
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(DDD)V  0.9173116089613035
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V  0.9038696537678208
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V  0.9763747454175152
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V  0.9360488798370672
org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D  0.9877800407331976
org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D  0.9808553971486762
org.apache.commons.math3.analysis.function.Sinc.value(D)D  0.9841140529531568
