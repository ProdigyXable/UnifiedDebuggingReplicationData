org.apache.commons.math3.optim.PointValuePair.<init>([DD)V  0.9119798677357055
org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V  0.9119798677357055
org.apache.commons.math3.optim.PointValuePair.getPoint()[D  0.9175103880142799
org.apache.commons.math3.optim.PointValuePair.getPointRef()[D  0.2814127699420612
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V  0.05258383566454029
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V  0.05258383566454029
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D  0.030388599520103
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V  0.31466904664364725
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z  0.3152835488968222
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9616960262187628
org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.9627201966407211
org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9682507169192953
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D  0.9705038918476034
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D  0.9698893895944285
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D  0.9711183941007784
org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V  0.9688652191724703
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.9651782056534207
org.apache.commons.math3.optim.MaxEval.getMaxEval()I  0.9653830397378124
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V  0.9156668812547551
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;  0.9168958857611049
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9101363609761808
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9103411950605724
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9168958857611049
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.9127992040732721
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D  0.9183297243518465
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D[D)V  0.033256276701586
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D  0.033256276701586
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.03366594487036929
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.03346111078597764
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D  0.033256276701586
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V  0.033256276701586
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D)[D  0.033256276701586
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V  0.033256276701586
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D  0.03346111078597764
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.034894949376719143
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V  0.03550945162989407
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.03550945162989407
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;[D)D  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V  0.5699947328378299
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D  0.5706092350910048
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer$LineSearch;I[D[D)V  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(D)D  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V  0.5699947328378299
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I  0.5706092350910048
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction;[D)[D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.5697898987534382
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.5699947328378299
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.5714285714285714
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.5706092350910048
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V  0.035304617545502424
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  0.5353046175455024
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V  0.5353046175455024
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5353046175455024
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.5353046175455024
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5353046175455024
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I  0.5353046175455024
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I  0.5353046175455024
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;[D)D  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$400(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)Z  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V  0.14142330426640135
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V  0.14142330426640135
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.13998946567565984
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.2814127699420612
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V  0.24631298648095043
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.2814127699420612
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.28202727219523616
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.2814127699420612
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;[D)D  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V  0.2828466085328027
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.build([D)V  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V  0.13957979750687657
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V  0.141628138350793
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V  0.14244747468835955
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.access$100(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.5710189032597881
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V  0.14285714285714285
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V  0.14285714285714285
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.14244747468835955
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;  0.1422426406039679
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;DD)V  0.034894949376719143
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.035099783461110784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I  0.2818224381108445
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D  0.033256276701586
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.03305144261719436
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.05155966524258208
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D  0.05340317200210686
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.052993503833323574
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.05155966524258208
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D  0.052788669748931934
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.052788669748931934
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D  0.05258383566454029
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.052788669748931934
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.052993503833323574
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;  0.052993503833323574
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.05155966524258208
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.05340317200210686
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D  0.05442734242406508
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;  0.023219406566395505
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V  0.05442734242406508
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D  0.052993503833323574
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.03100310177327793
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.02936442909814479
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.031412769942061214
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V  0.029774097266928073
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.02670158600105343
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.022809738397612217
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.03202727219523614
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V  0.0318224381108445
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V  0.030593433604494645
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.024038742903962074
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V  0.023219406566395505
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V  0.023219406566395505
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.052788669748931934
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.052788669748931934
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.052379001580148646
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.052379001580148646
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9586235149528881
org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I  0.030798267688886286
org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I  0.27711125416983673
org.apache.commons.math3.optim.BaseOptimizer.getIterations()I  1.0
org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;  0.97132322818517
org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.9596476853748463
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V  0.968455551003687
org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9653830397378124
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9586235149528881
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.9680458828349037
org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D  0.9682507169192953
org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V  0.37606074793702815
org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D  0.3797477614560777
org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.37995259554046934
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V  0.034485281207935856
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z  0.034690115292327496
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V  0.03223210627962778
org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D  0.03223210627962778
org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D  0.03223210627962778
org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D  0.03223210627962778
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V  0.03243694036401943
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D  0.03264177444841107
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D  0.03243694036401943
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0318224381108445
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.034894949376719143
org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.03305144261719436
org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V  0.03407561303915257
org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V  0.03407561303915257
org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V  0.03571428571428571
org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D  0.034280447123544215
org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D  0.034280447123544215
org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D  0.034690115292327496
org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D  0.034280447123544215
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V  0.03202727219523614
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;  0.03202727219523614
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0318224381108445
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.03202727219523614
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.03243694036401943
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.03223210627962778
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D  0.03243694036401943
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D  0.03243694036401943
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D  0.03243694036401943
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D  0.03243694036401943
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9586235149528881
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V  0.02936442909814479
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z  0.031412769942061214
org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V  0.5648738807280388
org.apache.commons.math3.optim.SimpleBounds.getLower()[D  0.5650787148124304
org.apache.commons.math3.optim.SimpleBounds.getUpper()[D  0.5650787148124304
org.apache.commons.math3.optim.SimpleBounds.unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;  0.4967226546497337
org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  0.5669222215719553
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  0.5669222215719553
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  0.5669222215719553
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  0.5669222215719553
org.apache.commons.math3.linear.RealVector.<init>()V  0.4404079124480599
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5396792883478667
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  0.5295107391584245
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.5248580792415286
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.5671270556563469
org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  0.5248580792415286
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  0.524038742903962
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.5134020015216247
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.5062328085679172
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.5062328085679172
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.5640545443904723
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.5474629835547492
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.5744425586703342
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  0.5198835371920173
org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V  -0.0283256276701586
org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D  0.023497395680927013
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D  0.01653303681161116
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  0.5067010007608123
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  0.49359161935974716
org.apache.commons.math3.linear.ArrayRealVector.toArray()[D  -0.0019751858137765574
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V  0.0021946509041961687
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  0.5323052613097676
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  0.5323052613097676
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.019532393047345935
org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V  0.03558260666003394
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V  0.030871422719026154
org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  0.03578744074442558
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.015230877275121436
org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D  0.013797038684379936
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.0289547609293615
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.029437584128284656
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.029642418212676297
org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D  0.021785567975654004
org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I  0.029437584128284656
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.027798911453151512
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.5250629133259203
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.5236290747351787
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  0.529774097266928
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  0.5307982676888863
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.5250629133259203
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  0.52752092233862
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.5136799906361562
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  0.5102563352256101
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  0.5069789898753437
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  0.5836600924679581
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5379089366184818
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  0.5017849827354128
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  0.5065693217065605
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  0.5363434189734887
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  0.5123046760695265
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  0.5187276877158074
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  0.5185228536314157
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.532100427225376
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  0.5001463100602797
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  0.5065693217065605
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.5234242406507872
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.524038742903962
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.5273160882542284
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.5248580792415286
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.5248580792415286
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.5269064200854451
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.018098554456604434
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V  0.019532393047345935
org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;  0.019532393047345935
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.5271258851758648
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.5450196055480775
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.566512553403172
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5519693334113653
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.5669222215719553
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.5770322467372856
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.5429566336981331
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  0.5669222215719553
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  0.566512553403172
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  0.5295692631825364
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  0.5443904722888746
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  0.5620062035465558
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  0.5323052613097676
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.5331245976473342
org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.027184409199976584
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.5318955931409843
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  0.5306665886346345
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  0.5318955931409843
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  0.5306665886346345
org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V  0.0325100953941593
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  0.03210042722537601
org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V  0.03148592497220108
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  0.03435360215368408
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;  0.037630947503950365
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.03599227482881723
org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D  0.03783578158834201
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  0.03189559314098437
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V  0.033739099900509155
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  0.030256920465851225
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  0.030666588634634513
org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D  0.03783578158834201
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V  0.019532393047345935
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.02588224966348686
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZLorg/apache/commons/math3/linear/LUDecomposition$1;)V  0.019532393047345935
org.apache.commons.math3.util.MathArrays.copyOf([D)[D  0.024243576988353718
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  0.5656932170656054
org.apache.commons.math3.util.MathArrays.copyOf([DI)[D  0.018713056709779363
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V  0.542415286475098
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  0.542415286475098
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  0.542415286475098
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  0.542415286475098
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  0.35881079183004616
org.apache.commons.math3.util.Incrementor$1.<init>()V  -0.06458126060747937
org.apache.commons.math3.util.Precision.compareTo(DDD)I  0.5191227248785626
org.apache.commons.math3.util.Precision.equals(DD)Z  0.03496810440685901
org.apache.commons.math3.util.Precision.equals(DDD)Z  0.4363697547843389
org.apache.commons.math3.util.Precision.equals(DDI)Z  0.42893720372212785
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.306797565400597
org.apache.commons.math3.util.FastMath.log(D)D  0.4038742903962076
org.apache.commons.math3.util.FastMath.log(D[D)D  0.5048574940012875
org.apache.commons.math3.util.FastMath.pow(DI)D  0.04889682214549072
org.apache.commons.math3.util.FastMath.polySine(D)D  0.5211125416983671
org.apache.commons.math3.util.FastMath.polyCosine(D)D  0.5211125416983671
org.apache.commons.math3.util.FastMath.sinQ(DD)D  0.5297155732428162
org.apache.commons.math3.util.FastMath.cosQ(DD)D  0.5299204073272078
org.apache.commons.math3.util.FastMath.sin(D)D  0.5604406859015625
org.apache.commons.math3.util.FastMath.cos(D)D  0.5368116111663838
org.apache.commons.math3.util.FastMath.atan(D)D  0.2799789313513197
org.apache.commons.math3.util.FastMath.atan(DDZ)D  0.2721952361444373
org.apache.commons.math3.util.FastMath.abs(J)J  0.41664715865862934
org.apache.commons.math3.util.FastMath.abs(D)D  0.5456048457891964
org.apache.commons.math3.util.FastMath.min(II)I  0.5727453619710892
org.apache.commons.math3.util.FastMath.min(DD)D  0.02506291332592029
org.apache.commons.math3.util.FastMath.max(II)I  0.49830280330075494
org.apache.commons.math3.util.FastMath.max(DD)D  0.8618686720898929
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.41569614326681104
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  0.8990167963949202
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  0.8583133376250951
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  0.912872359103412
org.apache.commons.math3.util.Incrementor.<init>()V  -0.05311055188154738
org.apache.commons.math3.util.Incrementor.<init>(I)V  -0.06458126060747937
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.8258910282671037
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.8410487505120852
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  0.02670158600105343
org.apache.commons.math3.util.Incrementor.getCount()I  0.9549365014338386
org.apache.commons.math3.util.Incrementor.incrementCount()V  0.8414584186808685
org.apache.commons.math3.util.Incrementor.resetCount()V  0.8351085620647276
org.apache.commons.math3.random.MersenneTwister.<init>()V  0.5646690466436471
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V  0.5419324632761748
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V  0.5517644993269737
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V  0.5519693334113653
org.apache.commons.math3.random.MersenneTwister.next(I)I  0.5529935038333236
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V  0.3241938315678586
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  0.48867560133434773
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  0.5529935038333236
org.apache.commons.math3.random.BitsStreamGenerator.clear()V  0.3241938315678586
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V  -0.009144378767484057
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V  -0.01160238778018377
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getEvaluations()I  0.026087083747878503
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D  -0.00893954468309241
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D  -0.00893954468309241
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D  -0.0003365131386434128
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D  -0.006481535670392696
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D  -0.004842862995259559
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D  -0.006276701586001056
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D  -0.009144378767484057
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V  -0.009963715105050626
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D  -0.009758881020658985
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V  0.000482823198923156
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V  -0.00040966816878328555
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(DD)V  -0.003482179434657927
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(DDD)V  -0.0003365131386434128
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V  -0.007096037923567625
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V  0.02936442909814479
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V  0.009085854743372153
org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D  0.027111254169836715
org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D  0.012568034178030079
org.apache.commons.math3.analysis.function.Sinc.value(D)D  0.033256276701586
