org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.03571428571428571
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.1111111111111111
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.1111111111111111
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.05
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.041666666666666664
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.037037037037037035
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.03333333333333333
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.023255813953488372
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.023255813953488372
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.018867924528301886
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.01694915254237288
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.016129032258064516
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.013888888888888888
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.013157894736842105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.011111111111111112
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.010638297872340425
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.008403361344537815
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.007518796992481203
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.005714285714285714
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.005291005291005291
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004878048780487805
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.004545454545454545
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.004545454545454545
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0044444444444444444
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.004291845493562232
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0016313213703099511
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0015698587127158557
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015479876160990713
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0015455950540958269
org.apache.commons.math3.util.FastMath:min(II)I 0.0014903129657228018
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0012903225806451613
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0011587485515643105
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0009775171065493646
