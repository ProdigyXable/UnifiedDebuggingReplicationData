org.apache.commons.math3.optim.PointValuePair.<init>([DD)V  0.9667534548367714
org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V  0.9667534548367714
org.apache.commons.math3.optim.PointValuePair.getPoint()[D  0.977446637132501
org.apache.commons.math3.optim.PointValuePair.getPointRef()[D  0.9834376893556858
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V  0.9530628480509149
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V  0.9530628480509149
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D  0.9786419504332057
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V  0.9790407093913744
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z  0.9882567321320105
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9266235040219737
org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.9285153181461115
org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9826367857863921
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D  0.9430154333201425
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D  0.9418627644848725
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D  0.9441694713918036
org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V  0.9882567321320105
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.9330708661417323
org.apache.commons.math3.optim.MaxEval.getMaxEval()I  0.933451466824178
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V  0.9738693467336683
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;  0.9762527671563694
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9632147141143542
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9636072785442912
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9762527671563694
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.9683303267187813
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D  0.9790407093913744
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D[D)V  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9850414392561149
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.98464025869038
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V  0.9882567321320105
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D)[D  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D  0.98464025869038
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9874519328071241
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V  0.9886593762656947
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.9886593762656947
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V  0.9882567321320105
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;[D)D  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V  0.992290525461554
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D  0.9935038570848559
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer$LineSearch;I[D[D)V  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(D)D  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V  0.992290525461554
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I  0.9935038570848559
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction;[D)[D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9918864097363083
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.992290525461554
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.9951239333604226
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9935038570848559
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V  0.9882567321320105
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  0.9939086294416244
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V  0.9939086294416244
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9939086294416244
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.9939086294416244
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9939086294416244
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9947186674791794
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I  0.9939086294416244
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I  0.9939086294416244
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;[D)D  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$400(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)Z  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V  0.9874519328071241
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V  0.9874519328071241
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.9874519328071241
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9834376893556858
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9834376893556858
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.98464025869038
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9834376893556858
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;[D)D  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V  0.9862459546925566
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.build([D)V  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V  0.9894651539708266
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.access$100(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.9943135662063363
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V  0.9902715849209567
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V  0.9902715849209567
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.9894651539708266
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9890621835122544
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;DD)V  0.9874519328071241
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D  0.9842392402505556
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.9838383838383838
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9511225909000596
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D  0.9546178343949044
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9538400318344608
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9511225909000596
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D  0.9534513626417346
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.9534513626417346
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D  0.9530628480509149
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9534513626417346
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.9538400318344608
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;  0.9538400318344608
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9511225909000596
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9546178343949044
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D  0.9565650527993624
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;  0.9647859143657463
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V  0.9565650527993624
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D  0.9874519328071241
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9798387096774194
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9766505636070854
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9862459546925566
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V  0.9882567321320105
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.9714916683396908
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.964
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V  0.9878542510121457
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V  0.9790407093913744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9866477847461056
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V  0.9647859143657463
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V  0.9882567321320105
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.9534513626417346
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.9534513626417346
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.9526744879697753
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.9526744879697753
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9209702660406885
org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I  0.9794396291070349
org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I  0.9750603378921963
org.apache.commons.math3.optim.BaseOptimizer.getIterations()I  1.0
org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;  0.9445544554455445
org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.9228509888388486
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V  0.9391785150078988
org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9778449144008057
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9209702660406885
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.9384129490722464
org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D  0.9387956564659428
org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V  0.9604711519265322
org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D  0.9675415748347025
org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.9679358717434869
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V  0.9866477847461056
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z  0.9882567321320105
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V  0.9822365765038353
org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D  0.9822365765038353
org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D  0.9822365765038353
org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D  0.9822365765038353
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V  0.9826367857863921
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D  0.9830371567043619
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D  0.9826367857863921
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9814366424535916
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9874519328071241
org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9874519328071241
org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V  0.9858442871587462
org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V  0.9858442871587462
org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V  0.9890621835122544
org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D  0.9862459546925566
org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D  0.9862459546925566
org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D  0.9870497774180493
org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D  0.9862459546925566
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V  0.9818365287588294
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;  0.9818365287588294
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9814366424535916
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.9818365287588294
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.9826367857863921
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9822365765038353
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D  0.9826367857863921
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D  0.9826367857863921
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D  0.9826367857863921
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D  0.9826367857863921
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9209702660406885
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V  0.9766505636070854
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z  0.9878542510121457
org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V  0.9822365765038353
org.apache.commons.math3.optim.SimpleBounds.getLower()[D  0.9826367857863921
org.apache.commons.math3.optim.SimpleBounds.getUpper()[D  0.9826367857863921
org.apache.commons.math3.optim.SimpleBounds.unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;  0.9878542510121457
org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  0.9862459546925566
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  0.9862459546925566
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  0.9862459546925566
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  0.9862459546925566
org.apache.commons.math3.linear.RealVector.<init>()V  0.7122929380993898
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.9342131179830608
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9882567321320105
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9734726688102894
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9882567321320105
org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  0.9882567321320105
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  0.9718875502008032
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.7687319884726225
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.9770485202335414
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.9790407093913744
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.9870497774180493
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.9878542510121457
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.9858442871587462
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  0.8365438563680568
org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V  0.8108058270330075
org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D  0.8994197292069632
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D  0.9866477847461056
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  0.9878542510121457
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  0.8521312712184081
org.apache.commons.math3.linear.ArrayRealVector.toArray()[D  0.9175942198789299
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V  0.9834376893556858
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  0.920594562878936
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  0.920594562878936
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.9577352472089314
org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V  0.9213461162199178
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V  0.9127386053759252
org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  0.9217221135029354
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.9495731586261663
org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D  0.9818365287588294
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.9758551307847082
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.9101342151332426
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.9105058365758755
org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D  0.9882567321320105
org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I  0.9101342151332426
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.9071664400854534
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9874519328071241
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.9870497774180493
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  0.9830371567043619
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  0.9878542510121457
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9738693467336683
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  0.9878542510121457
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.7155835080363382
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  0.8205413422321097
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  0.8151571164510166
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  0.9866477847461056
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8672751473664194
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  0.8662105663245914
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  0.9882567321320105
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  0.8051470588235294
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  0.8239227340267459
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  0.7770539268910605
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  0.7767324045594355
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.9202190066484162
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  0.8633776091081594
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  0.8144863266814486
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9882567321320105
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.9718875502008032
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.9782433521353747
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.9734726688102894
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.9734726688102894
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.977446637132501
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.9550069679474418
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V  0.9882567321320105
org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;  0.9577352472089314
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.7903372835004557
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.9878542510121457
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9854427820460978
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9573450269085111
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9862459546925566
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.9376479873717443
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9403279984192847
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  0.9862459546925566
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  0.9854427820460978
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  0.9882567321320105
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  0.9430154333201425
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  0.9766505636070854
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  0.920594562878936
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.9220982579761205
org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.9882567321320105
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.9198435972629521
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  0.9175942198789299
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  0.9198435972629521
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  0.9175942198789299
org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V  0.9157237612173235
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  0.9149765990639626
org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V  0.9138569479633599
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  0.919093218682822
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;  0.9251127229954911
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.9882567321320105
org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D  0.9254901960784314
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  0.9146032364983427
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V  0.9870497774180493
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  0.9116215690091493
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  0.9123661148977604
org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D  0.9254901960784314
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V  0.9577352472089314
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.9882567321320105
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZLorg/apache/commons/math3/linear/LUDecomposition$1;)V  0.9577352472089314
org.apache.commons.math3.util.MathArrays.copyOf([D)[D  0.9667534548367714
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  0.9838383838383838
org.apache.commons.math3.util.MathArrays.copyOf([DI)[D  0.9561752988047809
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V  0.9636072785442912
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  0.8751193431353829
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  0.8751193431353829
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  0.8751193431353829
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  0.6476510067114094
org.apache.commons.math3.util.Incrementor$1.<init>()V  0.7535714285714286
org.apache.commons.math3.util.Precision.compareTo(DDD)I  0.9663596315578694
org.apache.commons.math3.util.Precision.equals(DD)Z  0.9202190066484162
org.apache.commons.math3.util.Precision.equals(DDD)Z  0.8158284023668639
org.apache.commons.math3.util.Precision.equals(DDI)Z  0.9600798403193613
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.45827145827145827
org.apache.commons.math3.util.FastMath.log(D)D  0.710801393728223
org.apache.commons.math3.util.FastMath.log(D[D)D  0.9866477847461056
org.apache.commons.math3.util.FastMath.pow(DI)D  0.9834376893556858
org.apache.commons.math3.util.FastMath.polySine(D)D  0.8386070024340011
org.apache.commons.math3.util.FastMath.polyCosine(D)D  0.8386070024340011
org.apache.commons.math3.util.FastMath.sinQ(DD)D  0.8531798452538215
org.apache.commons.math3.util.FastMath.cosQ(DD)D  0.8535296338240845
org.apache.commons.math3.util.FastMath.sin(D)D  0.9874519328071241
org.apache.commons.math3.util.FastMath.cos(D)D  0.9878542510121457
org.apache.commons.math3.util.FastMath.atan(D)D  0.9806373537716822
org.apache.commons.math3.util.FastMath.atan(DDZ)D  0.9854427820460978
org.apache.commons.math3.util.FastMath.abs(J)J  0.6783455819518031
org.apache.commons.math3.util.FastMath.abs(D)D  0.4119338605319914
org.apache.commons.math3.util.FastMath.min(II)I  0.7507577108218934
org.apache.commons.math3.util.FastMath.min(DD)D  0.9882567321320105
org.apache.commons.math3.util.FastMath.max(II)I  0.8602007956052282
org.apache.commons.math3.util.FastMath.max(DD)D  0.9882567321320105
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.9838383838383838
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  0.8175087914121785
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  0.8686964795432921
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  0.9023634250290585
org.apache.commons.math3.util.Incrementor.<init>()V  0.7712842712842712
org.apache.commons.math3.util.Incrementor.<init>(I)V  0.7535714285714286
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.7048611111111112
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.7270488920154766
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  0.9714916683396908
org.apache.commons.math3.util.Incrementor.getCount()I  0.9142300194931774
org.apache.commons.math3.util.Incrementor.incrementCount()V  0.9778449144008057
org.apache.commons.math3.util.Incrementor.resetCount()V  0.7182852143482065
org.apache.commons.math3.random.MersenneTwister.<init>()V  0.9818365287588294
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V  0.9384129490722464
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V  0.9569549621363093
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V  0.9573450269085111
org.apache.commons.math3.random.MersenneTwister.next(I)I  0.9592976855546688
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V  0.6022189590471528
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  0.8437852046564025
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  0.9592976855546688
org.apache.commons.math3.random.BitsStreamGenerator.clear()V  0.6022189590471528
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V  0.9045771916214119
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V  0.9001547987616099
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getEvaluations()I  0.9703049759229535
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D  0.9049466537342385
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D  0.9049466537342385
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D  0.920594562878936
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D  0.9093914057942835
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D  0.9123661148977604
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D  0.9097627382341501
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D  0.9045771916214119
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V  0.9031007751937985
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D  0.9034696646636945
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V  0.9220982579761205
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V  0.9878542510121457
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(DD)V  0.9818365287588294
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(DDD)V  0.920594562878936
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V  0.9082782743878741
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V  0.9766505636070854
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V  0.9380303927373199
org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D  0.9878542510121457
org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D  0.9810369174904175
org.apache.commons.math3.analysis.function.Sinc.value(D)D  0.9842392402505556
