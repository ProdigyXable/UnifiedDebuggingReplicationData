org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V  0.008247422680412371
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;  0.125
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V  0.10526315789473684
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(J)Ljava/lang/String;  0.18181818181818182
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I  0.021052631578947368
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J  0.02127659574468085
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.02040816326530612
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;  0.125
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V  0.08695652173913043
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(J)Ljava/lang/String;  0.18181818181818182
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I  0.021052631578947368
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J  0.02127659574468085
org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.10526315789473684
org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;  0.10526315789473684
org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.10526315789473684
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.125
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V  0.1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J  0.02
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String;  0.15384615384615385
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I  0.003590664272890485
org.joda.time.tz.DefaultNameProvider.getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.11764705882352941
org.joda.time.tz.DefaultNameProvider.getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.15384615384615385
org.joda.time.tz.DefaultNameProvider.getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;  0.2857142857142857
org.joda.time.tz.DefaultNameProvider.createCache()Ljava/util/HashMap;  0.18181818181818182
org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;  0.09090909090909091
org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V  0.09090909090909091
org.joda.time.tz.CachedDateTimeZone.getNameKey(J)Ljava/lang/String;  0.12903225806451613
org.joda.time.tz.CachedDateTimeZone.getOffset(J)I  0.003137254901960784
org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.013513513513513514
org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.014388489208633094
org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V  0.013513513513513514
org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String;  0.12903225806451613
org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I  0.013157894736842105
org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;  0.125
org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V  0.1
org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J  0.021505376344086023
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J  0.02
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J  0.0036363636363636364
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J  0.0036363636363636364
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.09523809523809523
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.10526315789473684
org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J  0.1111111111111111
org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;  0.0019230769230769232
org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I  0.001567398119122257
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I  0.0020429009193054137
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I  0.0024509803921568627
org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J  0.0032414910858995136
org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J  0.0024009603841536613
org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;  0.002317497103128621
org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;  0.0027100271002710027
org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;  0.0012698412698412698
org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;  0.0012507817385866166
org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;  0.0013003901170351106
org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I  0.0015479876160990713
org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I  0.0017889087656529517
org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I  0.0024875621890547263
org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J  0.0016207455429497568
org.joda.time.chrono.BasicGJChronology.setYear(JI)J  0.004672897196261682
org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z  0.0013531799729364006
org.joda.time.chrono.GregorianChronology.getMinYear()I  0.0014947683109118087
org.joda.time.chrono.GregorianChronology.getMaxYear()I  0.0014936519790888724
org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J  0.0014958863126402393
org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J  0.0014958863126402393
org.joda.time.chrono.BasicYearDateTimeField.get(J)I  0.0015420200462606013
org.joda.time.chrono.BasicYearDateTimeField.add(JI)J  0.0033783783783783786
org.joda.time.chrono.BasicYearDateTimeField.set(JI)J  0.0023501762632197414
org.joda.time.chrono.BasicChronology.getYearMillis(I)J  0.0013315579227696406
org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J  0.0015337423312883436
org.joda.time.chrono.BasicChronology.getYear(J)I  0.0014255167498218105
org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I  0.001638001638001638
org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I  0.0024009603841536613
org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I  0.00156128024980484
org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I  0.0021231422505307855
org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I  0.0030441400304414
org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I  0.002205071664829107
org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;  0.0013315579227696406
org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I  0.0031397174254317113
org.joda.time.field.FieldUtils.safeAdd(II)I  0.002967359050445104
org.joda.time.field.FieldUtils.safeAdd(JJ)J  0.0021668472372697724
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V  0.0016012810248198558
org.joda.time.field.PreciseDateTimeField.get(J)I  0.001563721657544957
org.joda.time.field.PreciseDateTimeField.set(JI)J  0.0021231422505307855
org.joda.time.field.PreciseDateTimeField.getMaximumValue()I  0.0016299918500407497
org.joda.time.field.PreciseDurationField.add(JI)J  0.0025974025974025974
org.joda.time.field.PreciseDurationDateTimeField.set(JI)J  0.0023501762632197414
org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;  0.002347417840375587
org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I  0.0016339869281045752
org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J  0.0014144271570014145
org.joda.time.field.MillisDurationField.add(JI)J  0.0029717682020802376
org.joda.time.field.BaseDateTimeField.add(JI)J  0.003395585738539898
org.joda.time.DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;  0.0012515644555694619
org.joda.time.DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V  0.001375515818431912
org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.030534351145038167
org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;  0.09302325581395349
org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V  0.04878048780487805
org.joda.time.DateTimeZone.getID()Ljava/lang/String;  0.003683241252302026
org.joda.time.DateTimeZone.getShortName(JLjava/util/Locale;)Ljava/lang/String;  0.5
org.joda.time.DateTimeZone.getName(JLjava/util/Locale;)Ljava/lang/String;  0.3333333333333333
org.joda.time.DateTimeUtils.getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;  0.14285714285714285
