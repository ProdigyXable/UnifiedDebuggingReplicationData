=== Number of PatchCategory.CleanFixFull = 0 ===
=== Number of PatchCategory.CleanFixPartial = 4 ===
	 org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V = 4
=== Number of PatchCategory.NoisyFixFull = 0 ===
=== Number of PatchCategory.NoisyFixPartial = 0 ===
=== Number of PatchCategory.NoneFix = 1047 ===
	 org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V = 8
	 org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V = 14
	 org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; = 43
	 org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; = 41
	 org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I = 4
	 org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; = 4
	 org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D = 8
	 org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z = 7
	 org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V = 38
	 org.apache.commons.math3.linear.RealVector:checkIndex(I)V = 1
	 org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V = 1
	 org.apache.commons.math3.util.FastMath:abs(D)D = 1
	 org.apache.commons.math3.util.FastMath:ceil(D)D = 2
	 org.apache.commons.math3.util.FastMath:floor(D)D = 10
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V = 1
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V = 56
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z = 4
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I = 36
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D = 27
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V = 1
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V = 11
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V = 91
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I = 40
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z = 14
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z = 26
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D = 90
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I = 20
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I = 84
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D = 46
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V = 37
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I = 115
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I = 11
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I = 27
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D = 87
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D = 22
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z = 19
=== Number of PatchCategory.NegFix = 1043 ===
	 org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V = 20
	 org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V = 7
	 org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V = 25
	 org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; = 13
	 org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; = 15
	 org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I = 4
	 org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; = 3
	 org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D = 7
	 org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z = 26
	 org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V = 20
	 org.apache.commons.math3.linear.RealVector:checkIndex(I)V = 17
	 org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V = 12
	 org.apache.commons.math3.util.FastMath:abs(D)D = 8
	 org.apache.commons.math3.util.FastMath:ceil(D)D = 42
	 org.apache.commons.math3.util.FastMath:floor(D)D = 67
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V = 9
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V = 42
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z = 15
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I = 22
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D = 21
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V = 6
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V = 16
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V = 23
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I = 19
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I = 8
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z = 55
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z = 31
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D = 14
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I = 9
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I = 118
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D = 58
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V = 153
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I = 8
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; = 3
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I = 2
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D = 67
	 org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D = 58
