org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter:access$000(Lorg/apache/commons/math/util/MultidimensionalCounter;)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:access$100(Lorg/apache/commons/math/util/MultidimensionalCounter;)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:access$200(Lorg/apache/commons/math/util/MultidimensionalCounter;)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer; 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z 1000000.0
org.apache.commons.math.util.MultidimensionalCounter:getSize()I 1000000.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V 1.0
org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I 1.0
org.apache.commons.math.util.MultidimensionalCounter:getDimension()I 1.0
org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator; 1.0
org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V 0.25
org.apache.commons.math.util.MathUtils:copyOf([I)[I 0.2
org.apache.commons.math.util.MathUtils:copyOf([II)[I 0.047619047619047616
org.apache.commons.math.util.FastMath:min(II)I 0.002881844380403458
