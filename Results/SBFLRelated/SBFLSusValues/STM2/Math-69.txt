org.apache.commons.math.special.Beta$1.<init>(DD)V  0.0008928571428571428
org.apache.commons.math.special.Beta$1.getB(ID)D  0.0008956560680698612
org.apache.commons.math.special.Beta$1.getA(ID)D  0.0008928571428571428
org.apache.commons.math.special.Gamma.logGamma(D)D  0.0008699434536755111
org.apache.commons.math.special.Beta.regularizedBeta(DDD)D  0.0008896797153024911
org.apache.commons.math.special.Beta.regularizedBeta(DDDDI)D  0.0008928571428571428
org.apache.commons.math.special.Beta.logBeta(DDDI)D  0.0008920606601248885
org.apache.commons.math.stat.regression.SimpleRegression.<init>()V  0.0009041591320072332
org.apache.commons.math.stat.regression.SimpleRegression.<init>(Lorg/apache/commons/math/distribution/TDistribution;)V  0.0009041591320072332
org.apache.commons.math.stat.regression.SimpleRegression.addData(DD)V  0.0009062075215224287
org.apache.commons.math.stat.regression.SimpleRegression.getSlope()D  0.0009078529278256923
org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors()D  0.0009062075215224287
org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares()D  0.0009095043201455207
org.apache.commons.math.stat.regression.SimpleRegression.getR()D  0.0009103322712790169
org.apache.commons.math.stat.regression.SimpleRegression.getRSquare()D  0.0009095043201455207
org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(Lorg/apache/commons/math/distribution/TDistribution;)V  0.0009041591320072332
org.apache.commons.math.stat.correlation.PearsonsCorrelation.<init>([[D)V  0.0009157509157509158
org.apache.commons.math.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math/linear/RealMatrix;)V  0.0009111617312072893
org.apache.commons.math.stat.correlation.PearsonsCorrelation.getCorrelationPValues()Lorg/apache/commons/math/linear/RealMatrix;  0.0009136592051164915
org.apache.commons.math.stat.correlation.PearsonsCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;  0.0009119927040583675
org.apache.commons.math.stat.correlation.PearsonsCorrelation.correlation([D[D)D  0.0009111617312072893
org.apache.commons.math.stat.correlation.PearsonsCorrelation.checkSufficientData(Lorg/apache/commons/math/linear/RealMatrix;)V  0.0009119927040583675
org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math/linear/AnyMatrix;I)V  0.0008680555555555555
org.apache.commons.math.linear.BlockRealMatrix.<init>(II)V  0.0008896797153024911
org.apache.commons.math.linear.BlockRealMatrix.<init>([[D)V  0.0008768084173608067
org.apache.commons.math.linear.BlockRealMatrix.<init>(II[[DZ)V  0.0008756567425569177
org.apache.commons.math.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  0.0008768084173608067
org.apache.commons.math.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.0008896797153024911
org.apache.commons.math.linear.BlockRealMatrix.getColumn(I)[D  0.0009090909090909091
org.apache.commons.math.linear.BlockRealMatrix.getEntry(II)D  0.0008992805755395684
org.apache.commons.math.linear.BlockRealMatrix.setEntry(IID)V  0.0009062075215224287
org.apache.commons.math.linear.BlockRealMatrix.getRowDimension()I  0.0008710801393728223
org.apache.commons.math.linear.BlockRealMatrix.getColumnDimension()I  0.0008714596949891067
org.apache.commons.math.linear.BlockRealMatrix.blockHeight(I)I  0.0008726003490401396
org.apache.commons.math.linear.BlockRealMatrix.blockWidth(I)I  0.0008688097306689834
org.apache.commons.math.linear.AbstractRealMatrix.<init>(II)V  0.0008019246190858059
org.apache.commons.math.distribution.TDistributionImpl.<init>(DD)V  0.0008952551477170994
org.apache.commons.math.distribution.TDistributionImpl.<init>(D)V  0.0008952551477170994
org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(D)V  0.0008984725965858042
org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedomInternal(D)V  0.0008928571428571428
org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(D)D  0.0009086778736937755
org.apache.commons.math.distribution.AbstractContinuousDistribution.<init>()V  0.0008371703641691084
org.apache.commons.math.distribution.AbstractDistribution.<init>()V  0.0008267879288962381
org.apache.commons.math.util.ContinuedFraction.<init>()V  0.0008741258741258741
org.apache.commons.math.util.ContinuedFraction.evaluate(DDI)D  0.0008741258741258741
