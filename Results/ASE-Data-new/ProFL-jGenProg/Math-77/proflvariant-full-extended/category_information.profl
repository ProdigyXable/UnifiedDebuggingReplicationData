=== Number of PatchCategory.CleanFixFull = 0 ===
=== Number of PatchCategory.CleanFixPartial = 11 ===
	 org.apache.commons.math.linear.ArrayRealVector:getLInfNorm() = 1
	 org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm() = 1
	 org.apache.commons.math.random.RandomDataImpl:nextExponential(D) = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D) = 8
=== Number of PatchCategory.NoisyFixFull = 0 ===
=== Number of PatchCategory.NoisyFixPartial = 3 ===
	 org.apache.commons.math.linear.ArrayRealVector:getNorm() = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D) = 1
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance() = 1
=== Number of PatchCategory.NoneFix = 1 ===
	 org.apache.commons.math.random.AbstractRandomGenerator:nextGaussian() = 1
=== Number of PatchCategory.NegFix = 8 ===
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D) = 4
	 org.apache.commons.math.special.Gamma:regularizedGammaQ(DDDI) = 1
	 org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;) = 1
	 org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquareTest([D[J) = 1
	 org.apache.commons.math.stat.inference.ChiSquareTestImpl:setDistribution(Lorg/apache/commons/math/distribution/ChiSquaredDistribution;) = 1
