org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V  0.9987066735644077
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;  0.9963786859803414
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V  0.9956026901189861
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(J)Ljava/lang/String;  0.9976720124159337
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I  0.9759441282979824
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J  0.9992240041386445
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.9992240041386445
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;  0.9963786859803414
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V  0.9945680289705121
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(J)Ljava/lang/String;  0.9992240041386445
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I  0.9966373512674599
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J  0.9966373512674599
org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9989653388515262
org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;  0.9992240041386445
org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9956026901189861
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.9963786859803414
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V  0.9953440248318676
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J  0.9746508018623901
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String;  0.9971546818416969
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I  0.8564407656492499
org.joda.time.tz.DefaultNameProvider.getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.9961200206932229
org.joda.time.tz.DefaultNameProvider.getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.9971546818416969
org.joda.time.tz.DefaultNameProvider.getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;  0.9989653388515262
org.joda.time.tz.DefaultNameProvider.createCache()Ljava/util/HashMap;  0.9976720124159337
org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;  0.9948266942576306
org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V  0.9948266942576306
org.joda.time.tz.CachedDateTimeZone.getNameKey(J)Ljava/lang/String;  0.9930160372478013
org.joda.time.tz.CachedDateTimeZone.getOffset(J)I  0.6712364200724262
org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.9622348680807036
org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.9839627521986549
org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V  0.9622348680807036
org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String;  0.9981893429901707
org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I  0.97128815312985
org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;  0.9963786859803414
org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V  0.9953440248318676
org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J  0.9979306777030522
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J  0.9746508018623901
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J  0.9963786859803414
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J  0.9966373512674599
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9950853595447491
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9992240041386445
org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J  0.9958613554061045
org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;  0.7315054319710295
org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I  0.6704604242110709
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I  0.747284014485256
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I  0.7894464562855664
org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J  0.9989653388515262
org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J  0.9963786859803414
org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;  0.7772891877909984
org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;  0.8096223486808071
org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;  0.5931195033626487
org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;  0.5869115364718055
org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;  0.6026901189860321
org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I  0.6663217796171754
org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I  0.8290222452146921
org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I  0.7925504397309882
org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J  0.8352302121055354
org.joda.time.chrono.BasicGJChronology.setYear(JI)J  0.9599068804966373
org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z  0.6182100362131402
org.joda.time.chrono.GregorianChronology.getMinYear()I  0.6544231764097258
org.joda.time.chrono.GregorianChronology.getMaxYear()I  0.6541645111226073
org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J  0.6546818416968443
org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J  0.6546818416968443
org.joda.time.chrono.BasicYearDateTimeField.get(J)I  0.665028453181583
org.joda.time.chrono.BasicYearDateTimeField.add(JI)J  0.9945680289705121
org.joda.time.chrono.BasicYearDateTimeField.set(JI)J  0.78039317123642
org.joda.time.chrono.BasicChronology.getYearMillis(I)J  0.612002069322297
org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J  0.6632177961717538
org.joda.time.chrono.BasicChronology.getYear(J)I  0.9968960165545784
org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I  0.6846870150025867
org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I  0.7850491464045525
org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I  0.6691670977754786
org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I  0.7568546301086394
org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I  0.9937920331091568
org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I  0.9648215209518882
org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;  0.979565442317641
org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I  0.8357475426797724
org.joda.time.field.FieldUtils.safeAdd(II)I  0.9909467149508536
org.joda.time.field.FieldUtils.safeAdd(JJ)J  0.9976720124159337
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V  0.9806001034661148
org.joda.time.field.PreciseDateTimeField.get(J)I  0.9578375581996896
org.joda.time.field.PreciseDateTimeField.set(JI)J  0.7568546301086394
org.joda.time.field.PreciseDateTimeField.getMaximumValue()I  0.6831350232798759
org.joda.time.field.PreciseDurationField.add(JI)J  0.801345059493016
org.joda.time.field.PreciseDurationDateTimeField.set(JI)J  0.78039317123642
org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;  0.7801345059493016
org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I  0.6839110191412312
org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J  0.6347646145887222
org.joda.time.field.MillisDurationField.add(JI)J  0.8264355923435075
org.joda.time.field.BaseDateTimeField.add(JI)J  0.8481634764614588
org.joda.time.DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;  0.1743404035178479
org.joda.time.DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V  0.9992240041386445
org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9992240041386445
org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;  0.9992240041386445
org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V  0.9992240041386445
org.joda.time.DateTimeZone.getID()Ljava/lang/String;  0.8600620796689085
org.joda.time.DateTimeZone.getShortName(JLjava/util/Locale;)Ljava/lang/String;  0.999482669425763
org.joda.time.DateTimeZone.getName(JLjava/util/Locale;)Ljava/lang/String;  0.9992240041386445
org.joda.time.DateTimeUtils.getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;  0.9968960165545784
