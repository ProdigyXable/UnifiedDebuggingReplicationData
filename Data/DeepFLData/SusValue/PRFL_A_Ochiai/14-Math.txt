org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.0695826440586
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.126740952778
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.126750788546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.0828607389368
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.076346478966
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.0952190641847
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.0711689903844
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.0718496980693
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.0771014717949
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.0771016446099
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.0718484889978
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.0703710889186
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.0682115526238
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.0670847088457
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.0561354175527
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.0559468056163
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.0490799473761
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.0482775476995
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.048272357406
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.0444633544438
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.0406206535377
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.0387993146996
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.0385815063126
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.0389514184408
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.0404349022428
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.0385056513442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.0385032355572
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.0398796890509
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0423848746849
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0424880599256
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0408004684451
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.0383391148791
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.0326760772456
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.0278688043396
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.0267951578347
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0286409401522
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.0
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.0265580763236
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.0232430942707
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.0231908174063
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.0236869861156
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.0210382852901
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0156388092585
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0154886571346
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141697385887
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0141585338531
org.apache.commons.math3.util.FastMath:min(II)I 0.0137830086279
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0129255981074
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.0123110471732
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0115256253428
