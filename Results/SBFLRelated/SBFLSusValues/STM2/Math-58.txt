org.apache.commons.math.exception.NotStrictlyPositiveException.<init>(Ljava/lang/Number;)V  0.0004257130693912303
org.apache.commons.math.exception.NumberIsTooSmallException.<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V  0.00042408821034775233
org.apache.commons.math.exception.NumberIsTooSmallException.<init>(Lorg/apache/commons/math/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V  0.00041339396444811904
org.apache.commons.math.exception.MathIllegalNumberException.<init>(Lorg/apache/commons/math/exception/util/Localizable;Lorg/apache/commons/math/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V  0.0003824091778202677
org.apache.commons.math.exception.OutOfRangeException.<init>(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V  0.00042517006802721087
org.apache.commons.math.exception.OutOfRangeException.<init>(Lorg/apache/commons/math/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V  0.0004078303425774878
org.apache.commons.math.exception.util.ArgUtils.flatten([Ljava/lang/Object;)[Ljava/lang/Object;  0.0003779289493575208
org.apache.commons.math.exception.MathRuntimeException.<init>(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V  0.00036536353671903543
org.apache.commons.math.exception.MathIllegalArgumentException.<init>(Lorg/apache/commons/math/exception/util/Localizable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V  0.0003720238095238095
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.<init>()V  0.00041597337770382697
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.<init>(Lorg/apache/commons/math/optimization/ConvergenceChecker;)V  0.00041597337770382697
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.getConvergenceChecker()Lorg/apache/commons/math/optimization/ConvergenceChecker;  0.00041631973355537054
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.computeObjectiveValue([D)[D  0.00041631973355537054
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.optimize(ILorg/apache/commons/math/analysis/MultivariateVectorialFunction;[D[D[D)Lorg/apache/commons/math/optimization/VectorialPointValuePair;  0.00041631973355537054
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.getTargetRef()[D  0.00041649312786339027
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.getWeightRef()[D  0.00041649312786339027
org.apache.commons.math.optimization.SimpleVectorialValueChecker.<init>()V  0.00041597337770382697
org.apache.commons.math.optimization.SimpleVectorialValueChecker.converged(ILorg/apache/commons/math/optimization/VectorialPointValuePair;Lorg/apache/commons/math/optimization/VectorialPointValuePair;)Z  0.0004175365344467641
org.apache.commons.math.optimization.VectorialPointValuePair.<init>([D[D)V  0.00041649312786339027
org.apache.commons.math.optimization.VectorialPointValuePair.getValueRef()[D  0.00041736227045075126
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.<init>()V  0.00041597337770382697
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateJacobian()V  0.00041649312786339027
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost()V  0.00041649312786339027
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.optimize(ILorg/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction;[D[D[D)Lorg/apache/commons/math/optimization/VectorialPointValuePair;  0.00041631973355537054
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.<init>()V  0.00042319085907744394
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.000419639110365086
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;  0.00042498937526561835
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V  0.00042607584149978694
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V  0.00042517006802721087
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.qrDecomposition()V  0.00042087542087542086
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.qTy([D)V  0.0004201680672268908
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math/optimization/fitting/CurveFitter;Lorg/apache/commons/math/analysis/ParametricUnivariateRealFunction;)V  0.0004253509145044662
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.jacobian()Lorg/apache/commons/math/analysis/MultivariateMatrixFunction;  0.0004253509145044662
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value([D)[D  0.0004253509145044662
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.access$100(Lorg/apache/commons/math/optimization/fitting/CurveFitter$TheoreticalValuesFunction;)Lorg/apache/commons/math/analysis/ParametricUnivariateRealFunction;  0.0004253509145044662
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1.<init>(Lorg/apache/commons/math/optimization/fitting/GaussianFitter$ParameterGuesser;)V  0.0004278990158322636
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I  0.0004278990158322636
org.apache.commons.math.optimization.fitting.WeightedObservedPoint.<init>(DDD)V  0.00042517006802721087
org.apache.commons.math.optimization.fitting.WeightedObservedPoint.getWeight()D  0.0004253509145044662
org.apache.commons.math.optimization.fitting.WeightedObservedPoint.getX()D  0.0004253509145044662
org.apache.commons.math.optimization.fitting.WeightedObservedPoint.getY()D  0.0004253509145044662
org.apache.commons.math.optimization.fitting.GaussianFitter.<init>(Lorg/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer;)V  0.00042753313381787086
org.apache.commons.math.optimization.fitting.GaussianFitter.fit()[D  0.00042753313381787086
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.<init>([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)V  0.0004278990158322636
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.guess()[D  0.0004278990158322636
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.basicGuess([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)[D  0.0004284490145672665
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.findMaxY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I  0.0004278990158322636
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.interpolateXAtY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)D  0.0004278990158322636
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.getInterpolationPointsForY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;  0.0004284490145672665
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.isBetween(DDD)Z  0.0004278990158322636
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser.createWeightedObservedPointComparator()Ljava/util/Comparator;  0.0004278990158322636
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math/optimization/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.0004253509145044662
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction$1.value([D)[[D  0.0004253509145044662
org.apache.commons.math.optimization.fitting.CurveFitter.<init>(Lorg/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer;)V  0.00042498937526561835
org.apache.commons.math.optimization.fitting.CurveFitter.addObservedPoint(DD)V  0.00042716787697565144
org.apache.commons.math.optimization.fitting.CurveFitter.addObservedPoint(DDD)V  0.00042517006802721087
org.apache.commons.math.optimization.fitting.CurveFitter.getObservations()[Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;  0.0004269854824935952
org.apache.commons.math.optimization.fitting.CurveFitter.fit(Lorg/apache/commons/math/analysis/ParametricUnivariateRealFunction;[D)[D  0.0004253509145044662
org.apache.commons.math.optimization.fitting.CurveFitter.fit(ILorg/apache/commons/math/analysis/ParametricUnivariateRealFunction;[D)[D  0.0004253509145044662
org.apache.commons.math.optimization.fitting.CurveFitter.access$000(Lorg/apache/commons/math/optimization/fitting/CurveFitter;)Ljava/util/List;  0.0004253509145044662
org.apache.commons.math.optimization.AbstractConvergenceChecker.<init>()V  0.0004078303425774878
org.apache.commons.math.optimization.AbstractConvergenceChecker.getRelativeThreshold()D  0.00041017227235438887
org.apache.commons.math.optimization.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.0004103405826836274
org.apache.commons.math.util.FastMath.sqrt(D)D  0.0003289473684210526
org.apache.commons.math.util.FastMath.exp(D)D  0.0003773584905660377
org.apache.commons.math.util.FastMath.exp(DD[D)D  0.0003897116134060795
org.apache.commons.math.util.FastMath.abs(D)D  0.0003215434083601286
org.apache.commons.math.util.FastMath.min(II)I  0.0003732736095558044
org.apache.commons.math.util.FastMath.min(DD)D  0.0004103405826836274
org.apache.commons.math.util.FastMath.max(DD)D  0.00038774718883288094
org.apache.commons.math.util.Incrementor.<init>()V  0.000390625
org.apache.commons.math.util.Incrementor.setMaximalCount(I)V  0.00039093041438623924
org.apache.commons.math.util.Incrementor.incrementCount()V  0.000392156862745098
org.apache.commons.math.util.Incrementor.resetCount()V  0.00039154267815191856
org.apache.commons.math.analysis.function.Gaussian.value(DDD)D  0.0004266211604095563
org.apache.commons.math.analysis.function.Gaussian.access$300(DDD)D  0.0004269854824935952
org.apache.commons.math.analysis.function.Gaussian$Parametric.<init>()V  0.00042643923240938164
org.apache.commons.math.analysis.function.Gaussian$Parametric.value(D[D)D  0.00042716787697565144
org.apache.commons.math.analysis.function.Gaussian$Parametric.gradient(D[D)[D  0.00042716787697565144
org.apache.commons.math.analysis.function.Gaussian$Parametric.validateParameters([D)V  0.0004284490145672665
