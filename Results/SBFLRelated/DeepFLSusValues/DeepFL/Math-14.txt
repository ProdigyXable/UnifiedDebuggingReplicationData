org.apache.commons.math3.util.FastMath.min(II)I  0.0004555623
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.0007454035
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.0038638294
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  0.0012533397
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0006122666
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;  0.0016106119
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.00043385354
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D  0.0024969443
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.00062996964
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  0.00081589137
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0006131212
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.0057691284
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.0006999409
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.0006415604
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0008641425
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.0005484262
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.0006647564
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.0014827754
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.000935696
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.0006055257
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D  0.0014267354
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.000765121
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.0005689486
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V  0.0016030862
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.0005484262
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.0006265584
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  0.001243997
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.0009238432
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.00068631145
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.001114632
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.0035219037
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.0006462673
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.002700068
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.0007454035
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0006132848
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.0006497016
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.0026070955
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.00086178293
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  0.00073270407
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.0062342295
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V  0.0005785639
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.0009250499
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.00066516636
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;  0.0015147395
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.0011318324
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.0035709841
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  0.002858156
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V  0.0029583443
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0005488782
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.0004276047
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D  0.023885788
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.000813714
