org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V  0.008316008316008316
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;  0.07142857142857142
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V  0.058823529411764705
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(J)Ljava/lang/String;  0.1111111111111111
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I  0.010752688172043012
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J  0.010869565217391304
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.010416666666666666
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;  0.07142857142857142
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V  0.047619047619047616
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(J)Ljava/lang/String;  0.1111111111111111
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I  0.010752688172043012
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J  0.010869565217391304
org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.058823529411764705
org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;  0.058823529411764705
org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.058823529411764705
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.07142857142857142
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V  0.05555555555555555
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J  0.01020408163265306
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String;  0.09090909090909091
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I  0.0018018018018018018
org.joda.time.tz.DefaultNameProvider.getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.06666666666666667
org.joda.time.tz.DefaultNameProvider.getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.09090909090909091
org.joda.time.tz.DefaultNameProvider.getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;  0.2
org.joda.time.tz.DefaultNameProvider.createCache()Ljava/util/HashMap;  0.1111111111111111
org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;  0.05
org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V  0.05
org.joda.time.tz.CachedDateTimeZone.getNameKey(J)Ljava/lang/String;  0.14814814814814814
org.joda.time.tz.CachedDateTimeZone.getOffset(J)I  0.003147128245476003
org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.00684931506849315
org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.0072992700729927005
org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V  0.00684931506849315
org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String;  0.14814814814814814
org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I  0.006666666666666667
org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;  0.07142857142857142
org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V  0.05555555555555555
org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J  0.01098901098901099
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J  0.01020408163265306
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J  0.0018248175182481751
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J  0.0018248175182481751
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.05263157894736842
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.058823529411764705
org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J  0.0625
org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;  0.0009633911368015414
org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I  0.0007849293563579278
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I  0.0010235414534288639
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I  0.0012285012285012285
org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J  0.0016260162601626016
org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J  0.0012033694344163659
org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;  0.0011614401858304297
org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;  0.001358695652173913
org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;  0.0006357279084551812
org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;  0.0006261740763932373
org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;  0.0006510416666666666
org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I  0.0007751937984496124
org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I  0.0008960573476702509
org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I  0.0012468827930174563
org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J  0.0008116883116883117
org.joda.time.chrono.BasicGJChronology.setYear(JI)J  0.002347417840375587
org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z  0.0006775067750677507
org.joda.time.chrono.GregorianChronology.getMinYear()I  0.0007485029940119761
org.joda.time.chrono.GregorianChronology.getMaxYear()I  0.0007479431563201197
org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J  0.000749063670411985
org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J  0.000749063670411985
org.joda.time.chrono.BasicYearDateTimeField.get(J)I  0.0007722007722007722
org.joda.time.chrono.BasicYearDateTimeField.add(JI)J  0.001694915254237288
org.joda.time.chrono.BasicYearDateTimeField.set(JI)J  0.001177856301531213
org.joda.time.chrono.BasicChronology.getYearMillis(I)J  0.0006666666666666666
org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J  0.0007680491551459293
org.joda.time.chrono.BasicChronology.getYear(J)I  0.0007137758743754461
org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I  0.0008203445447087777
org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I  0.0012033694344163659
org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I  0.0007818608287724785
org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I  0.0010638297872340426
org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I  0.0015267175572519084
org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I  0.0011049723756906078
org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;  0.0006666666666666666
org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I  0.0015748031496062992
org.joda.time.field.FieldUtils.safeAdd(II)I  0.001488095238095238
org.joda.time.field.FieldUtils.safeAdd(JJ)J  0.0010857763300760044
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V  0.0008019246190858059
org.joda.time.field.PreciseDateTimeField.get(J)I  0.0007830853563038371
org.joda.time.field.PreciseDateTimeField.set(JI)J  0.0010638297872340426
org.joda.time.field.PreciseDateTimeField.getMaximumValue()I  0.0008163265306122449
org.joda.time.field.PreciseDurationField.add(JI)J  0.0013020833333333333
org.joda.time.field.PreciseDurationDateTimeField.set(JI)J  0.001177856301531213
org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;  0.001176470588235294
org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I  0.0008183306055646482
org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J  0.000708215297450425
org.joda.time.field.MillisDurationField.add(JI)J  0.0014903129657228018
org.joda.time.field.BaseDateTimeField.add(JI)J  0.0017035775127768314
org.joda.time.DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;  0.0012531328320802004
org.joda.time.DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V  0.0013774104683195593
org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.031496062992125984
org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;  0.10256410256410256
org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V  0.02564102564102564
org.joda.time.DateTimeZone.getID()Ljava/lang/String;  0.0018484288354898336
org.joda.time.DateTimeZone.getShortName(JLjava/util/Locale;)Ljava/lang/String;  0.5
org.joda.time.DateTimeZone.getName(JLjava/util/Locale;)Ljava/lang/String;  0.25
org.joda.time.DateTimeUtils.getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;  0.08333333333333333
