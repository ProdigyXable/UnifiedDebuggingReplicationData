org.apache.commons.math.util.MultidimensionalCounter.<init>([I)V  48.744230427815765
org.apache.commons.math.util.MultidimensionalCounter.iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator;  48.75448697299562
org.apache.commons.math.util.MultidimensionalCounter.getDimension()I  48.75448697299562
org.apache.commons.math.util.MultidimensionalCounter.getCounts(I)[I  48.76474136094644
org.apache.commons.math.util.MultidimensionalCounter.getCount([I)I  48.75448697299562
org.apache.commons.math.util.MultidimensionalCounter.getSize()I  48.76474136094644
org.apache.commons.math.util.MultidimensionalCounter.access$000(Lorg/apache/commons/math/util/MultidimensionalCounter;)I  48.75448697299562
org.apache.commons.math.util.MultidimensionalCounter.access$100(Lorg/apache/commons/math/util/MultidimensionalCounter;)I  48.75448697299562
org.apache.commons.math.util.MultidimensionalCounter.access$200(Lorg/apache/commons/math/util/MultidimensionalCounter;)[I  48.76474136094644
org.apache.commons.math.util.MultidimensionalCounter$Iterator.<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V  48.75448697299562
org.apache.commons.math.util.MultidimensionalCounter$Iterator.hasNext()Z  48.76474136094644
org.apache.commons.math.util.MultidimensionalCounter$Iterator.next()Ljava/lang/Integer;  48.76474136094644
org.apache.commons.math.util.MultidimensionalCounter$Iterator.getCount(I)I  48.75448697299562
org.apache.commons.math.util.FastMath.min(II)I  45.066617356974994
org.apache.commons.math.util.MathUtils.copyOf([I)[I  48.7134478352744
org.apache.commons.math.util.MathUtils.copyOf([II)[I  48.54894437575342
