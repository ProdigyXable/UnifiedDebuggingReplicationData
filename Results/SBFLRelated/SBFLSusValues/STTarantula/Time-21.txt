org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V  0.8892980437284236
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;  0.9933161953727506
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V  0.9917864476386038
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(J)Ljava/lang/String;  0.9958762886597937
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I  0.9545454545454545
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J  0.9550173010380623
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.9531327084361124
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;  0.9933161953727506
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V  0.9897540983606558
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(J)Ljava/lang/String;  0.9958762886597937
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I  0.9545454545454545
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J  0.9550173010380623
org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9917864476386038
org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;  0.9917864476386038
org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9917864476386038
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.9933161953727506
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V  0.991277578245254
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J  0.95219319862001
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String;  0.9948506694129763
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I  0.7771520514883347
org.joda.time.tz.DefaultNameProvider.getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.9928057553956834
org.joda.time.tz.DefaultNameProvider.getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.9948506694129763
org.joda.time.tz.DefaultNameProvider.getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;  0.9979338842975206
org.joda.time.tz.DefaultNameProvider.createCache()Ljava/util/HashMap;  0.9958762886597937
org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;  0.9902614044079959
org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V  0.9902614044079959
org.joda.time.tz.CachedDateTimeZone.getNameKey(J)Ljava/lang/String;  0.9930609097918272
org.joda.time.tz.CachedDateTimeZone.getOffset(J)I  0.7524829600778968
org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.9301877708233028
org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.9342359767891683
org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V  0.9301877708233028
org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String;  0.9933161953727506
org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I  0.9283998077847189
org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;  0.9933161953727506
org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V  0.991277578245254
org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J  0.9554896142433235
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J  0.95219319862001
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J  0.7793465106897943
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J  0.7793465106897943
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9907692307692307
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.9917864476386038
org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J  0.9922958397534668
org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;  0.6507241495453014
org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I  0.6028081123244929
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I  0.6643741403026134
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I  0.7038251366120218
org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J  0.7588373919874313
org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J  0.6994931209268647
org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;  0.6919770773638968
org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;  0.7244094488188976
org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;  0.5513698630136987
org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;  0.5476190476190476
org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;  0.5572541101817133
org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I  0.5998137224464452
org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I  0.6340662947161142
org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I  0.7069154774972557
org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J  0.6108125197597218
org.joda.time.chrono.BasicGJChronology.setYear(JI)J  0.8196860415782775
org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z  0.5670678015849722
org.joda.time.chrono.GregorianChronology.getMinYear()I  0.591368227731864
org.joda.time.chrono.GregorianChronology.getMaxYear()I  0.5911872705018361
org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J  0.5915492957746479
org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J  0.5915492957746479
org.joda.time.chrono.BasicYearDateTimeField.get(J)I  0.5988840669559826
org.joda.time.chrono.BasicYearDateTimeField.add(JI)J  0.7663625545418485
org.joda.time.chrono.BasicYearDateTimeField.set(JI)J  0.6949640287769784
org.joda.time.chrono.BasicChronology.getYearMillis(I)J  0.5631011366948412
org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J  0.5975873801422827
org.joda.time.chrono.BasicChronology.getYear(J)I  0.5798319327731092
org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I  0.6133333333333333
org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I  0.6994931209268647
org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I  0.6018691588785047
org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I  0.6729362591431557
org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I  0.7470997679814385
org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I  0.6812411847672779
org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;  0.5631011366948412
org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I  0.7529228371005456
org.joda.time.field.FieldUtils.safeAdd(II)I  0.7422205147906262
org.joda.time.field.FieldUtils.safeAdd(JJ)J  0.6774193548387096
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V  0.6079295154185023
org.joda.time.field.PreciseDateTimeField.get(J)I  0.6022443890274315
org.joda.time.field.PreciseDateTimeField.set(JI)J  0.6729362591431557
org.joda.time.field.PreciseDateTimeField.getMaximumValue()I  0.6121673003802282
org.joda.time.field.PreciseDurationField.add(JI)J  0.7158206743238237
org.joda.time.field.PreciseDurationDateTimeField.set(JI)J  0.6949640287769784
org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;  0.6947141316073354
org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I  0.6127497621313035
org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J  0.577924020341011
org.joda.time.field.MillisDurationField.add(JI)J  0.7425057647963105
org.joda.time.field.BaseDateTimeField.add(JI)J  0.7672756155679111
org.joda.time.DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;  0.5476190476190476
org.joda.time.DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V  0.5709219858156028
org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.968178401403157
org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;  0.9900076863950806
org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V  0.980710659898477
org.joda.time.DateTimeZone.getID()Ljava/lang/String;  0.7815533980582524
org.joda.time.DateTimeZone.getShortName(JLjava/util/Locale;)Ljava/lang/String;  0.999482669425763
org.joda.time.DateTimeZone.getName(JLjava/util/Locale;)Ljava/lang/String;  0.9984496124031008
org.joda.time.DateTimeUtils.getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;  0.9943386515697374
