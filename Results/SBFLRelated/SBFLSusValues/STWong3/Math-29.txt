org.apache.commons.math3.linear.RealVector.<init>()V  -3.87
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(I)V  0.8900000000000001
org.apache.commons.math3.linear.RealVector.checkIndex(I)V  0.6400000000000001
org.apache.commons.math3.linear.OpenMapRealVector.<init>([D)V  0.4500000000000002
org.apache.commons.math3.linear.OpenMapRealVector.<init>([DD)V  0.6000000000000001
org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V  0.96
org.apache.commons.math3.linear.OpenMapRealVector.getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;  0.9500000000000002
org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(D)Z  0.3700000000000001
org.apache.commons.math3.linear.OpenMapRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;  0.0
org.apache.commons.math3.linear.OpenMapRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;  1.0
org.apache.commons.math3.linear.OpenMapRealVector.getDimension()I  0.3900000000000001
org.apache.commons.math3.linear.OpenMapRealVector.getEntry(I)D  0.71
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(ID)V  0.96
org.apache.commons.math3.linear.SparseRealVector.<init>()V  0.3700000000000001
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V  0.7400000000000002
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()Z  0.75
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()I  0.81
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()D  0.75
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()V  0.75
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V  0.7400000000000002
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(D)V  0.10000000000000009
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(ID)V  -0.07000000000000028
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V  0.8399999999999999
org.apache.commons.math3.util.OpenIntToDoubleHashMap.computeCapacity(I)I  -0.04999999999999982
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(I)D  0.6400000000000001
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(I)Z  0.94
org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;  0.7400000000000002
org.apache.commons.math3.util.OpenIntToDoubleHashMap.perturb(I)I  0.7599999999999998
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(I)I  0.10000000000000009
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex([I[BII)I  0.8700000000000001
org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(II)I  0.7599999999999998
org.apache.commons.math3.util.OpenIntToDoubleHashMap.changeIndexSign(I)I  0.7799999999999998
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(I)D  0.8900000000000001
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(II)Z  0.2999999999999998
org.apache.commons.math3.util.OpenIntToDoubleHashMap.doRemove(I)D  0.8900000000000001
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(ID)D  0.8599999999999999
org.apache.commons.math3.util.OpenIntToDoubleHashMap.growTable()V  0.8599999999999999
org.apache.commons.math3.util.OpenIntToDoubleHashMap.shouldGrowTable()Z  0.10000000000000009
org.apache.commons.math3.util.OpenIntToDoubleHashMap.hashOf(I)I  0.08000000000000007
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I  0.7400000000000002
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I  0.81
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D  0.75
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B  0.7400000000000002
org.apache.commons.math3.util.FastMath.abs(D)D  -13.700000000000003
org.apache.commons.math3.util.FastMath.floor(D)D  -2.11
org.apache.commons.math3.util.FastMath.ceil(D)D  -1.0
