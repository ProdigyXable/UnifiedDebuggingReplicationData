org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NoneFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NoneFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NoneFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NoneFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NoneFix
org.joda.time.field.BaseDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NoneFix
org.joda.time.field.MillisDurationField:add(JI)J NoneFix
org.joda.time.field.FieldUtils:safeAdd(II)I NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.field.PreciseDurationField:add(JI)J NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NoneFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NoneFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NoneFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NoneFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NoneFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NoneFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NoneFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NoneFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NoneFix
org.joda.time.field.PreciseDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NoneFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NoneFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NoneFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NoneFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NoneFix
org.joda.time.chrono.BasicChronology:getYear(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NoneFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NoneFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NoneFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NoneFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NoisyFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoisyFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NoisyFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NoisyFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NoisyFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NoisyFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NoisyFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NoisyFix
org.joda.time.field.BaseDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NoisyFix
org.joda.time.field.MillisDurationField:add(JI)J NoisyFix
org.joda.time.field.FieldUtils:safeAdd(II)I NoisyFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoisyFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.field.PreciseDurationField:add(JI)J NoisyFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NoisyFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NoisyFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NoisyFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NoisyFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NoisyFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NoisyFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NoisyFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NoisyFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NoisyFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NoisyFix
org.joda.time.field.PreciseDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NoisyFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NoisyFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NoisyFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NoisyFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NoisyFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NoisyFix
org.joda.time.chrono.BasicChronology:getYear(J)I NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NoisyFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NoisyFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NoisyFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NoisyFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; CleanFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; CleanFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; CleanFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V CleanFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V CleanFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J CleanFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V CleanFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V CleanFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I CleanFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I CleanFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J CleanFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I CleanFix
org.joda.time.field.BaseDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I CleanFix
org.joda.time.field.MillisDurationField:add(JI)J CleanFix
org.joda.time.field.FieldUtils:safeAdd(II)I CleanFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V CleanFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.field.PreciseDurationField:add(JI)J CleanFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I CleanFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J CleanFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J CleanFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; CleanFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I CleanFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J CleanFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I CleanFix
org.joda.time.field.PreciseDateTimeField:set(JI)J CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I CleanFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; CleanFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I CleanFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I CleanFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J CleanFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I CleanFix
org.joda.time.field.PreciseDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I CleanFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I CleanFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J CleanFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J CleanFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J CleanFix
org.joda.time.chrono.GregorianChronology:getMinYear()I CleanFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I CleanFix
org.joda.time.chrono.BasicChronology:getYear(J)I CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J CleanFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z CleanFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; CleanFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J CleanFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NoneFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NoneFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NoneFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NoneFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NoneFix
org.joda.time.field.BaseDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NoneFix
org.joda.time.field.MillisDurationField:add(JI)J NoneFix
org.joda.time.field.FieldUtils:safeAdd(II)I NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.field.PreciseDurationField:add(JI)J NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NoneFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NoneFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NoneFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NoneFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NoneFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NoneFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NoneFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NoneFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NoneFix
org.joda.time.field.PreciseDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NoneFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NoneFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NoneFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NoneFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NoneFix
org.joda.time.chrono.BasicChronology:getYear(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NoneFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NoneFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NoneFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NoneFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NoisyFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoisyFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NoisyFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NoisyFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NoisyFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NoisyFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NoisyFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NoisyFix
org.joda.time.field.BaseDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NoisyFix
org.joda.time.field.MillisDurationField:add(JI)J NoisyFix
org.joda.time.field.FieldUtils:safeAdd(II)I NoisyFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoisyFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.field.PreciseDurationField:add(JI)J NoisyFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NoisyFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NoisyFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NoisyFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NoisyFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NoisyFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NoisyFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NoisyFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NoisyFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NoisyFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NoisyFix
org.joda.time.field.PreciseDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NoisyFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NoisyFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NoisyFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NoisyFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NoisyFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NoisyFix
org.joda.time.chrono.BasicChronology:getYear(J)I NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NoisyFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NoisyFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NoisyFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NoisyFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; CleanFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; CleanFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; CleanFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V CleanFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V CleanFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J CleanFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V CleanFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V CleanFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I CleanFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I CleanFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J CleanFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I CleanFix
org.joda.time.field.BaseDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I CleanFix
org.joda.time.field.MillisDurationField:add(JI)J CleanFix
org.joda.time.field.FieldUtils:safeAdd(II)I CleanFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V CleanFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.field.PreciseDurationField:add(JI)J CleanFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I CleanFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J CleanFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J CleanFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; CleanFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I CleanFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J CleanFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I CleanFix
org.joda.time.field.PreciseDateTimeField:set(JI)J CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I CleanFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; CleanFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I CleanFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I CleanFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J CleanFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I CleanFix
org.joda.time.field.PreciseDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I CleanFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I CleanFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J CleanFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J CleanFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J CleanFix
org.joda.time.chrono.GregorianChronology:getMinYear()I CleanFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I CleanFix
org.joda.time.chrono.BasicChronology:getYear(J)I CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J CleanFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z CleanFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; CleanFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J CleanFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NoneFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NoneFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NoneFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NoneFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NoneFix
org.joda.time.field.BaseDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NoneFix
org.joda.time.field.MillisDurationField:add(JI)J NoneFix
org.joda.time.field.FieldUtils:safeAdd(II)I NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.field.PreciseDurationField:add(JI)J NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NoneFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NoneFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NoneFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NoneFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NoneFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NoneFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NoneFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NoneFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NoneFix
org.joda.time.field.PreciseDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NoneFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NoneFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NoneFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NoneFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NoneFix
org.joda.time.chrono.BasicChronology:getYear(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NoneFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NoneFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NoneFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NoneFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; CleanFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; CleanFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; CleanFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; CleanFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V CleanFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V CleanFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I CleanFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I CleanFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J CleanFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V CleanFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V CleanFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; CleanFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I CleanFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I CleanFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J CleanFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J CleanFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I CleanFix
org.joda.time.field.BaseDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J CleanFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I CleanFix
org.joda.time.field.MillisDurationField:add(JI)J CleanFix
org.joda.time.field.FieldUtils:safeAdd(II)I CleanFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V CleanFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.field.PreciseDurationField:add(JI)J CleanFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; CleanFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I CleanFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J CleanFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J CleanFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; CleanFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I CleanFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J CleanFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I CleanFix
org.joda.time.field.PreciseDateTimeField:set(JI)J CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I CleanFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; CleanFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I CleanFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I CleanFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J CleanFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V CleanFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I CleanFix
org.joda.time.field.PreciseDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I CleanFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I CleanFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I CleanFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J CleanFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J CleanFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J CleanFix
org.joda.time.chrono.GregorianChronology:getMinYear()I CleanFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I CleanFix
org.joda.time.chrono.BasicChronology:getYear(J)I CleanFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J CleanFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z CleanFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; CleanFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J CleanFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; CleanFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NoisyFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NoisyFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoisyFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NoisyFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NoisyFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NoisyFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoisyFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NoisyFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NoisyFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NoisyFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NoisyFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NoisyFix
org.joda.time.field.BaseDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NoisyFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NoisyFix
org.joda.time.field.MillisDurationField:add(JI)J NoisyFix
org.joda.time.field.FieldUtils:safeAdd(II)I NoisyFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoisyFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.field.PreciseDurationField:add(JI)J NoisyFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoisyFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NoisyFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NoisyFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NoisyFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NoisyFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NoisyFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NoisyFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NoisyFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NoisyFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NoisyFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NoisyFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NoisyFix
org.joda.time.field.PreciseDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NoisyFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NoisyFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NoisyFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NoisyFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NoisyFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NoisyFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NoisyFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NoisyFix
org.joda.time.chrono.BasicChronology:getYear(J)I NoisyFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NoisyFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NoisyFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NoisyFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NoisyFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NoisyFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NoneFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NoneFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NoneFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NoneFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NoneFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NoneFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NoneFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NoneFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NoneFix
org.joda.time.field.BaseDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NoneFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NoneFix
org.joda.time.field.MillisDurationField:add(JI)J NoneFix
org.joda.time.field.FieldUtils:safeAdd(II)I NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.field.PreciseDurationField:add(JI)J NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NoneFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NoneFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NoneFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NoneFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NoneFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NoneFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NoneFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NoneFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NoneFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NoneFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NoneFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NoneFix
org.joda.time.field.PreciseDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NoneFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NoneFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NoneFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NoneFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NoneFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NoneFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NoneFix
org.joda.time.chrono.BasicChronology:getYear(J)I NoneFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NoneFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NoneFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NoneFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NoneFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NoneFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String; NoisyFix
org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; NegFix
org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols; NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V NegFix
org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I NegFix
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V NegFix
org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; NegFix
org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I NegFix
org.joda.time.tz.CachedDateTimeZone:getOffset(J)I NegFix
org.joda.time.chrono.BasicGJChronology:setYear(JI)J NegFix
org.joda.time.DateTimeZone:getID()Ljava/lang/String; NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J NegFix
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I NegFix
org.joda.time.field.BaseDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J NegFix
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I NegFix
org.joda.time.field.MillisDurationField:add(JI)J NegFix
org.joda.time.field.FieldUtils:safeAdd(II)I NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.field.PreciseDurationField:add(JI)J NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I NegFix
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J NegFix
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; NegFix
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I NegFix
org.joda.time.field.FieldUtils:safeAdd(JJ)J NegFix
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I NegFix
org.joda.time.field.PreciseDateTimeField:set(JI)J NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I NegFix
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; NegFix
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I NegFix
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I NegFix
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J NegFix
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V NegFix
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I NegFix
org.joda.time.field.PreciseDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I NegFix
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I NegFix
org.joda.time.chrono.BasicYearDateTimeField:get(J)I NegFix
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J NegFix
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J NegFix
org.joda.time.chrono.GregorianChronology:getMinYear()I NegFix
org.joda.time.chrono.GregorianChronology:getMaxYear()I NegFix
org.joda.time.chrono.BasicChronology:getYear(J)I NegFix
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J NegFix
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z NegFix
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; NegFix
org.joda.time.chrono.BasicChronology:getYearMillis(I)J NegFix
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; NegFix
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; NegFix
