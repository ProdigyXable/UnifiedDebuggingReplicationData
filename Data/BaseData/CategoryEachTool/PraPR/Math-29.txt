org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector; NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math3.linear.RealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:probe(II)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math3.linear.RealVector:checkIndex(I)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math3.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math3.linear.SparseRealVector:<init>()V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math3.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math3.linear.RealVector:<init>()V NoneFix
org.apache.commons.math3.util.FastMath:floor(D)D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:changeIndexSign(I)I NegFix
org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math3.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math3.util.FastMath:abs(D)D NegFix
