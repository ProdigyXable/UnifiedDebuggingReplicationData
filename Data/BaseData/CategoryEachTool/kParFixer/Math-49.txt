org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoneFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.FastMath:floor(D)D NoneFix
org.apache.commons.math.util.FastMath:abs(D)D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoisyFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoisyFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NoisyFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoisyFix
org.apache.commons.math.util.FastMath:ceil(D)D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoisyFix
org.apache.commons.math.util.FastMath:floor(D)D NoisyFix
org.apache.commons.math.util.FastMath:abs(D)D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V CleanFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V CleanFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V CleanFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D CleanFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I CleanFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I CleanFix
org.apache.commons.math.util.FastMath:ceil(D)D CleanFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V CleanFix
org.apache.commons.math.util.FastMath:floor(D)D CleanFix
org.apache.commons.math.util.FastMath:abs(D)D CleanFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoneFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.FastMath:floor(D)D NoneFix
org.apache.commons.math.util.FastMath:abs(D)D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoisyFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoisyFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NoisyFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoisyFix
org.apache.commons.math.util.FastMath:ceil(D)D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoisyFix
org.apache.commons.math.util.FastMath:floor(D)D NoisyFix
org.apache.commons.math.util.FastMath:abs(D)D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V CleanFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V CleanFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V CleanFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D CleanFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I CleanFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I CleanFix
org.apache.commons.math.util.FastMath:ceil(D)D CleanFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V CleanFix
org.apache.commons.math.util.FastMath:floor(D)D CleanFix
org.apache.commons.math.util.FastMath:abs(D)D CleanFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoneFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.FastMath:floor(D)D NoneFix
org.apache.commons.math.util.FastMath:abs(D)D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V CleanFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V CleanFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V CleanFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D CleanFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I CleanFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I CleanFix
org.apache.commons.math.util.FastMath:ceil(D)D CleanFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V CleanFix
org.apache.commons.math.util.FastMath:floor(D)D CleanFix
org.apache.commons.math.util.FastMath:abs(D)D CleanFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoisyFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoisyFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NoisyFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoisyFix
org.apache.commons.math.util.FastMath:ceil(D)D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoisyFix
org.apache.commons.math.util.FastMath:floor(D)D NoisyFix
org.apache.commons.math.util.FastMath:abs(D)D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoneFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.FastMath:floor(D)D NoneFix
org.apache.commons.math.util.FastMath:abs(D)D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NegFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V NegFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NegFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NegFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.util.FastMath:ceil(D)D NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.FastMath:floor(D)D NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
