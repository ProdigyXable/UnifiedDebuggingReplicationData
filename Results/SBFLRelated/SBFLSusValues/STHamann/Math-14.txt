org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9093534770051099
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.9164630082203955
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9586758498111531
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9586758498111531
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.9608975783159298
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.9604532326149744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9586758498111531
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.9604532326149744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.9604532326149744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.9813374805598756
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.9728949122417241
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.9604532326149744
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.9604532326149744
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.9604532326149744
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.9026882914907798
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9026882914907798
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.9226838480337702
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.9026882914907798
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8569206842923794
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.7280604310153299
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.987113974672295
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.9888913574761165
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.9475672072872695
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.9413463674738947
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.9813374805598756
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V  0.9684514552321706
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.9004665629860031
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.9009109086869584
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.8969117973783604
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.6560764274605643
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.9991113085980893
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.988447011775161
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  0.988447011775161
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;  0.988447011775161
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;  0.988447011775161
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.9964452343923572
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D  0.9964452343923572
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V  0.9875583203732504
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D  0.988447011775161
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D  0.9880026660742057
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.988447011775161
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.987113974672295
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V  0.9880026660742057
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.9897800488780271
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.988447011775161
org.apache.commons.math3.util.FastMath.min(II)I  0.70228838035992
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.9946678515885359
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.6169740057764941
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  0.9920017773828038
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  0.9768940235503222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  0.9764496778493668
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  0.9915574316818485
