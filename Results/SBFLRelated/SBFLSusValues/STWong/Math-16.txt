org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;I)V  2.0
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;J)V  2.0
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V  2.0
org.apache.commons.math3.dfp.Dfp.getRadixDigits()I  2.0
org.apache.commons.math3.dfp.Dfp.round(I)I  2.0
org.apache.commons.math3.dfp.DfpField.<init>(I)V  2.0
org.apache.commons.math3.dfp.DfpField.<init>(IZ)V  2.0
org.apache.commons.math3.dfp.DfpField.getRadixDigits()I  2.0
org.apache.commons.math3.dfp.DfpField.getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;  2.0
org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(I)V  2.0
org.apache.commons.math3.dfp.DfpField.split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;  2.0
org.apache.commons.math3.dfp.DfpField.computeStringConstants(I)V  2.0
org.apache.commons.math3.util.FastMath$ExpIntTable.access$000()[D  2.0
org.apache.commons.math3.util.FastMath$ExpIntTable.access$100()[D  2.0
org.apache.commons.math3.util.FastMath$ExpFracTable.access$200()[D  2.0
org.apache.commons.math3.util.FastMath$ExpFracTable.access$300()[D  2.0
org.apache.commons.math3.util.FastMath.cosh(D)D  2.0
org.apache.commons.math3.util.FastMath.exp(D)D  2.0
org.apache.commons.math3.util.FastMath.exp(DD[D)D  2.0
org.apache.commons.math3.util.FastMath.abs(D)D  2.0
org.apache.commons.math3.util.FastMath.ulp(D)D  2.0
org.apache.commons.math3.util.FastMath.max(II)I  2.0
org.apache.commons.math3.util.FastMath.max(DD)D  2.0
org.apache.commons.math3.random.MersenneTwister.<init>(J)V  2.0
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V  2.0
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V  2.0
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V  2.0
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V  2.0
org.apache.commons.math3.random.BitsStreamGenerator.clear()V  2.0
