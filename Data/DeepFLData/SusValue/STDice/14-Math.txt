org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 0.07142857142857142
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.2222222222222222
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 0.2222222222222222
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 0.1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.08333333333333333
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 0.07407407407407407
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 0.07407407407407407
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 0.06666666666666667
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 0.046511627906976744
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 0.046511627906976744
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 0.03773584905660377
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 0.03389830508474576
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 0.03225806451612903
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 0.027777777777777776
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 0.02631578947368421
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 0.02247191011235955
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.02127659574468085
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 0.01680672268907563
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 0.015037593984962405
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 0.011428571428571429
org.apache.commons.math3.optim.MaxEval:<init>(I)V 0.010582010582010581
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00975609756097561
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 0.00909090909090909
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 0.00909090909090909
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 0.008928571428571428
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 0.008583690987124463
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 0.006191950464396285
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 0.0032626427406199023
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 0.0031397174254317113
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030959752321981426
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 0.0030911901081916537
org.apache.commons.math3.util.FastMath:min(II)I 0.0029806259314456036
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 0.0025806451612903226
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 0.002317497103128621
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 0.0019550342130987292
