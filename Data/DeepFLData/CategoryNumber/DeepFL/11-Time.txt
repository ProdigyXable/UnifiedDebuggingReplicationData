org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:create(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; 1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:rename(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:renameAppend(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; 12
org.joda.time.tz.ZoneInfoCompiler:verbose()Z 12
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:isCachable()Z 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:buildTailZone(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; 12
org.joda.time.tz.DateTimeZoneBuilder:toDateTimeZone(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone; 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;II)V 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:getNameKey()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:getSaveMillis()I 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:getToYear()I 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:next(JII)J 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:addRule(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:firstTransition(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:nextTransition(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:isTransitionFrom(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z 12
org.joda.time.tz.DateTimeZoneBuilder:addRecurringSavings(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder; 12
org.joda.time.tz.DateTimeZoneBuilder:addTransition(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>()V 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:getUpperLimit(I)J 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setStandardOffset(I)V 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis()J 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getNameKey()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getSaveMillis()I 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getStandardOffset()I 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getWallOffset()I 12
org.joda.time.tz.DateTimeZoneBuilder:<init>()V 12
org.joda.time.tz.DateTimeZoneBuilder:addCutover(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder; 12
org.joda.time.tz.DateTimeZoneBuilder:getLastRuleSet()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet; 12
org.joda.time.tz.DateTimeZoneBuilder:setStandardOffset(I)Lorg/joda/time/tz/DateTimeZoneBuilder; 12
org.joda.time.chrono.BasicGJChronology:getYearDifference(JJ)J 1
org.joda.time.PeriodType:yearMonthDay()Lorg/joda/time/PeriodType; 1
org.joda.time.chrono.BasicChronology:getYear(J)I 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J 12
org.joda.time.Period:<init>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V 12
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J 1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V 12
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I 1
org.joda.time.chrono.GregorianChronology:calculateFirstDayOfYearMillis(I)J 1
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V 12
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; 12
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V 12
org.joda.time.base.BasePeriod:<init>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V 1
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V 12
org.joda.time.chrono.BasicMonthOfYearDateTimeField:getDifferenceAsLong(JJ)J 12
org.joda.time.chrono.BasicYearDateTimeField:getDifferenceAsLong(JJ)J 12
org.joda.time.chrono.BasicChronology$YearInfo:<init>(IJ)V 12
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; 12
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getDifference(JJ)I 12
org.joda.time.chrono.BaseChronology:get(Lorg/joda/time/ReadablePeriod;JJ)[I 1
org.joda.time.field.ImpreciseDateTimeField:getDifference(JJ)I 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J 12
org.joda.time.Period:getMonths()I 1
org.joda.time.Period:getYears()I 1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:add(JI)J 12
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I 1
org.joda.time.field.PreciseDateTimeField:get(J)I 12
org.joda.time.chrono.BasicGJChronology:setYear(JI)J 1
org.joda.time.field.PreciseDurationField:getDifferenceAsLong(JJ)J 1
org.joda.time.field.BaseDurationField:getDifference(JJ)I 12
org.joda.time.DurationFieldType$StandardDurationFieldType:getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField; 12
org.joda.time.field.FieldUtils:safeSubtract(JJ)J 12
org.joda.time.PeriodType:getIndexedField(Lorg/joda/time/ReadablePeriod;I)I 12
org.joda.time.field.FieldUtils:safeToInt(J)I 12
org.joda.time.chrono.BasicChronology:getYearMonthMillis(II)J 1
org.joda.time.base.AbstractPeriod:getFieldType(I)Lorg/joda/time/DurationFieldType; 12
org.joda.time.PeriodType:getFieldType(I)Lorg/joda/time/DurationFieldType; 12
org.joda.time.DateTimeUtils:getPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; 12
org.joda.time.base.BasePeriod:checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; 1
org.joda.time.base.AbstractPeriod:size()I 12
org.joda.time.base.BasePeriod:getValue(I)I 12
org.joda.time.chrono.AssembledChronology:years()Lorg/joda/time/DurationField; 12
org.joda.time.base.AbstractPeriod:<init>()V 12
org.joda.time.base.BasePeriod:getPeriodType()Lorg/joda/time/PeriodType; 12
org.joda.time.PeriodType:size()I 12
org.joda.time.DateTimeZone:getID()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I 12
org.joda.time.chrono.AssembledChronology:months()Lorg/joda/time/DurationField; 12
org.joda.time.field.BaseDateTimeField:add(JI)J 1
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J 12
org.joda.time.chrono.AssembledChronology:days()Lorg/joda/time/DurationField; 12
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I 12
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J 12
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I 12
org.joda.time.field.MillisDurationField:add(JI)J 12
org.joda.time.field.FieldUtils:safeAdd(II)I 12
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; 12
org.joda.time.field.PreciseDurationField:add(JI)J 12
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I 12
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I 12
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I 12
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J 12
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J 12
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J 12
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; 12
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; 12
org.joda.time.field.FieldUtils:safeAdd(JJ)J 12
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I 1
org.joda.time.field.PreciseDateTimeField:set(JI)J 1
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I 12
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; 12
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I 12
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I 12
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I 12
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V 12
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I 12
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I 12
org.joda.time.chrono.BasicYearDateTimeField:get(J)I 12
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J 12
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I 12
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J 12
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J 12
org.joda.time.chrono.GregorianChronology:getMinYear()I 12
org.joda.time.chrono.GregorianChronology:getMaxYear()I 12
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J 12
org.joda.time.chrono.BasicChronology:getYearMillis(I)J 12
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z 12
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; 12
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; 12
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; 12
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; 12
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V 12
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; 12
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:create(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone; 1
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:rename(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:renameAppend(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; 12
org.joda.time.tz.ZoneInfoCompiler:verbose()Z 12
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:isCachable()Z 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:buildTailZone(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; 12
org.joda.time.tz.DateTimeZoneBuilder:toDateTimeZone(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone; 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;II)V 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:getNameKey()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:getSaveMillis()I 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:getToYear()I 12
org.joda.time.tz.DateTimeZoneBuilder$Rule:next(JII)J 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:addRule(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:firstTransition(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:nextTransition(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:isTransitionFrom(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z 12
org.joda.time.tz.DateTimeZoneBuilder:addRecurringSavings(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder; 12
org.joda.time.tz.DateTimeZoneBuilder:addTransition(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>()V 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:getUpperLimit(I)J 12
org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setStandardOffset(I)V 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis()J 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getNameKey()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getSaveMillis()I 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getStandardOffset()I 12
org.joda.time.tz.DateTimeZoneBuilder$Transition:getWallOffset()I 12
org.joda.time.tz.DateTimeZoneBuilder:<init>()V 12
org.joda.time.tz.DateTimeZoneBuilder:addCutover(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder; 12
org.joda.time.tz.DateTimeZoneBuilder:getLastRuleSet()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet; 12
org.joda.time.tz.DateTimeZoneBuilder:setStandardOffset(I)Lorg/joda/time/tz/DateTimeZoneBuilder; 12
org.joda.time.chrono.BasicGJChronology:getYearDifference(JJ)J 1
org.joda.time.PeriodType:yearMonthDay()Lorg/joda/time/PeriodType; 1
org.joda.time.chrono.BasicChronology:getYear(J)I 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J 12
org.joda.time.Period:<init>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V 12
org.joda.time.chrono.BasicYearDateTimeField:add(JI)J 1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V 12
org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I 1
org.joda.time.chrono.GregorianChronology:calculateFirstDayOfYearMillis(I)J 1
org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V 12
org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone; 12
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V 12
org.joda.time.base.BasePeriod:<init>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V 1
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V 12
org.joda.time.chrono.BasicMonthOfYearDateTimeField:getDifferenceAsLong(JJ)J 12
org.joda.time.chrono.BasicYearDateTimeField:getDifferenceAsLong(JJ)J 12
org.joda.time.chrono.BasicChronology$YearInfo:<init>(IJ)V 12
org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; 12
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getDifference(JJ)I 12
org.joda.time.chrono.BaseChronology:get(Lorg/joda/time/ReadablePeriod;JJ)[I 1
org.joda.time.field.ImpreciseDateTimeField:getDifference(JJ)I 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J 12
org.joda.time.Period:getMonths()I 1
org.joda.time.Period:getYears()I 1
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:add(JI)J 12
org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I 1
org.joda.time.field.PreciseDateTimeField:get(J)I 12
org.joda.time.chrono.BasicGJChronology:setYear(JI)J 1
org.joda.time.field.PreciseDurationField:getDifferenceAsLong(JJ)J 1
org.joda.time.field.BaseDurationField:getDifference(JJ)I 12
org.joda.time.DurationFieldType$StandardDurationFieldType:getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField; 12
org.joda.time.field.FieldUtils:safeSubtract(JJ)J 12
org.joda.time.PeriodType:getIndexedField(Lorg/joda/time/ReadablePeriod;I)I 12
org.joda.time.field.FieldUtils:safeToInt(J)I 12
org.joda.time.chrono.BasicChronology:getYearMonthMillis(II)J 1
org.joda.time.base.AbstractPeriod:getFieldType(I)Lorg/joda/time/DurationFieldType; 12
org.joda.time.PeriodType:getFieldType(I)Lorg/joda/time/DurationFieldType; 12
org.joda.time.DateTimeUtils:getPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; 12
org.joda.time.base.BasePeriod:checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; 1
org.joda.time.base.AbstractPeriod:size()I 12
org.joda.time.base.BasePeriod:getValue(I)I 12
org.joda.time.chrono.AssembledChronology:years()Lorg/joda/time/DurationField; 12
org.joda.time.base.AbstractPeriod:<init>()V 12
org.joda.time.base.BasePeriod:getPeriodType()Lorg/joda/time/PeriodType; 12
org.joda.time.PeriodType:size()I 12
org.joda.time.DateTimeZone:getID()Ljava/lang/String; 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J 12
org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J 12
org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I 12
org.joda.time.chrono.AssembledChronology:months()Lorg/joda/time/DurationField; 12
org.joda.time.field.BaseDateTimeField:add(JI)J 1
org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J 12
org.joda.time.chrono.AssembledChronology:days()Lorg/joda/time/DurationField; 12
org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I 12
org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J 12
org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I 12
org.joda.time.field.MillisDurationField:add(JI)J 12
org.joda.time.field.FieldUtils:safeAdd(II)I 12
org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField; 12
org.joda.time.field.PreciseDurationField:add(JI)J 12
org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I 12
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I 12
org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I 12
org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J 12
org.joda.time.field.PreciseDurationDateTimeField:set(JI)J 12
org.joda.time.chrono.BasicYearDateTimeField:set(JI)J 12
org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField; 12
org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField; 12
org.joda.time.field.FieldUtils:safeAdd(JJ)J 12
org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I 1
org.joda.time.field.PreciseDateTimeField:set(JI)J 1
org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I 12
org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology; 12
org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I 12
org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I 12
org.joda.time.field.PreciseDateTimeField:getMaximumValue()I 12
org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V 12
org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(J)I 12
org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I 12
org.joda.time.chrono.BasicYearDateTimeField:get(J)I 12
org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J 12
org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I 12
org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J 12
org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J 12
org.joda.time.chrono.GregorianChronology:getMinYear()I 12
org.joda.time.chrono.GregorianChronology:getMaxYear()I 12
org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J 12
org.joda.time.chrono.BasicChronology:getYearMillis(I)J 12
org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z 12
org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField; 12
org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField; 12
org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField; 12
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; 12
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V 12
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; 12
