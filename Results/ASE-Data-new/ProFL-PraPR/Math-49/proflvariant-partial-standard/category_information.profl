=== Number of PatchCategory.CleanFix = 15 ===
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V = 2
	 org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V = 5
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D = 8
=== Number of PatchCategory.NoisyFix = 3 ===
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V = 1
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D = 2
=== Number of PatchCategory.NoneFix = 894 ===
	 org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V = 7
	 org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; = 3
	 org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V = 2
	 org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V = 2
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V = 7
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V = 8
	 org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; = 22
	 org.apache.commons.math.linear.OpenMapRealVector:getDimension()I = 4
	 org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; = 4
	 org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D = 8
	 org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z = 7
	 org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V = 33
	 org.apache.commons.math.util.FastMath:abs(D)D = 9
	 org.apache.commons.math.util.FastMath:ceil(D)D = 5
	 org.apache.commons.math.util.FastMath:floor(D)D = 24
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 1
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V = 55
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z = 4
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I = 36
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D = 28
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V = 1
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V = 11
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 91
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I = 40
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z = 41
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z = 30
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D = 83
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I = 21
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I = 15
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D = 48
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I = 115
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D = 78
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D = 30
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z = 21
=== Number of PatchCategory.NegFix = 666 ===
	 org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V = 16
	 org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V = 11
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V = 4
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V = 20
	 org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; = 29
	 org.apache.commons.math.linear.OpenMapRealVector:getDimension()I = 4
	 org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; = 3
	 org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D = 7
	 org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z = 26
	 org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V = 20
	 org.apache.commons.math.util.FastMath:ceil(D)D = 39
	 org.apache.commons.math.util.FastMath:floor(D)D = 53
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 9
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V = 33
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z = 15
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I = 22
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D = 20
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V = 6
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V = 16
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 23
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I = 8
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z = 48
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z = 27
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D = 11
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I = 9
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I = 38
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D = 43
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I = 8
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; = 3
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D = 45
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D = 50
