org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.009708737864077669
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.010526315789473684
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.02197802197802198
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.02197802197802198
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.02197802197802198
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.045454545454545456
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.031746031746031744
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.02197802197802198
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.02197802197802198
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.02197802197802198
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00904977375565611
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.00904977375565611
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.011363636363636364
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.00904977375565611
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.006172839506172839
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.003257328990228013
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0030911901081916537
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0030864197530864196
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.016666666666666666
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.014925373134328358
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.045454545454545456
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V  0.0273972602739726
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.008849557522123894
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.008888888888888889
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.008547008547008548
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.002577319587628866
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.003134796238244514
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.07142857142857142
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  0.07142857142857142
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;  0.07142857142857142
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;  0.07142857142857142
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.2
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D  0.2
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V  0.06666666666666667
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D  0.07142857142857142
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D  0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.07142857142857142
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.06451612903225806
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V  0.06896551724137931
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.08
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.07142857142857142
org.apache.commons.math3.util.FastMath.min(II)I  0.002976190476190476
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.001953125
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.0023148148148148147
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  0.025974025974025976
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  0.037037037037037035
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  0.03333333333333333
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  0.09523809523809523
