org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:<init>()V NoneFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NoneFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NoneFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NoneFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NoneFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NoneFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NoneFix
org.joda.time.chrono.BaseChronology:<init>()V NoneFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NoneFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NoneFix
org.joda.time.Chronology:<init>()V NoneFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NoneFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NoneFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NoneFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NoneFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NoneFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NoneFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NoneFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NoneFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; CleanFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NoneFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forOffsetHoursMinutes(II)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:<init>()V NegFix
org.joda.time.DateTimeZone$1:getZone()Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone$1:withUTC()Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.DateTimeZone:parseOffset(Ljava/lang/String;)I NegFix
org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String; NegFix
org.joda.time.tz.FixedDateTimeZone:<init>(Ljava/lang/String;Ljava/lang/String;II)V NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I NegFix
org.joda.time.tz.FixedDateTimeZone:equals(Ljava/lang/Object;)Z NegFix
org.joda.time.DateTimeZone:forOffsetMillis(I)Lorg/joda/time/DateTimeZone; NegFix
org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V NegFix
org.joda.time.field.FieldUtils:safeMultiply(II)I NegFix
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(Ljava/lang/String;II)I NegFix
org.joda.time.format.FormatUtils:parseTwoDigits(Ljava/lang/String;I)I NegFix
org.joda.time.chrono.BaseChronology:<init>()V NegFix
org.joda.time.format.DateTimeParserBucket:computeMillis(ZLjava/lang/String;)J NegFix
org.joda.time.format.DateTimeParserBucket:setOffset(Ljava/lang/Integer;)V NegFix
org.joda.time.Chronology:<init>()V NegFix
org.joda.time.format.DateTimeFormatter:parseMillis(Ljava/lang/String;)J NegFix
org.joda.time.format.DateTimeFormatter:selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.format.DateTimeFormatter:withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; NegFix
org.joda.time.format.DateTimeParserBucket:sort([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V NegFix
org.joda.time.format.DateTimeFormatter:<init>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.DateTimeFormatter:requireParser()Lorg/joda/time/format/DateTimeParser; NegFix
org.joda.time.format.DateTimeParserBucket:<init>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V NegFix
org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V NegFix
org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; NegFix
org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V NegFix
org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone; NegFix
