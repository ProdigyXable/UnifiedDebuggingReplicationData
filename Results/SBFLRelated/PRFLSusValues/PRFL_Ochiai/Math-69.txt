org.apache.commons.math.special.Beta$1.<init>(DD)V  0.0628114805178
org.apache.commons.math.special.Beta$1.getB(ID)D  0.0603243971859
org.apache.commons.math.special.Beta$1.getA(ID)D  0.0603243971859
org.apache.commons.math.special.Gamma.logGamma(D)D  0.0419548504237
org.apache.commons.math.special.Beta.regularizedBeta(DDD)D  0.0587762212538
org.apache.commons.math.special.Beta.regularizedBeta(DDDDI)D  0.0633979205697
org.apache.commons.math.special.Beta.logBeta(DDDI)D  0.0587097865292
org.apache.commons.math.stat.regression.SimpleRegression.<init>()V  0.0
org.apache.commons.math.stat.regression.SimpleRegression.<init>(Lorg/apache/commons/math/distribution/TDistribution;)V  0.0882453846331
org.apache.commons.math.stat.regression.SimpleRegression.addData(DD)V  0.0916572211609
org.apache.commons.math.stat.regression.SimpleRegression.getSlope()D  0.102139308139
org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors()D  0.0975325470338
org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares()D  0.120322032884
org.apache.commons.math.stat.regression.SimpleRegression.getR()D  0.134301447871
org.apache.commons.math.stat.regression.SimpleRegression.getRSquare()D  0.124929121358
org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(Lorg/apache/commons/math/distribution/TDistribution;)V  0.0882453846331
org.apache.commons.math.stat.correlation.PearsonsCorrelation.<init>([[D)V  0.962314584725
org.apache.commons.math.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math/linear/RealMatrix;)V  0.146375326317
org.apache.commons.math.stat.correlation.PearsonsCorrelation.getCorrelationPValues()Lorg/apache/commons/math/linear/RealMatrix;  0.208575179177
org.apache.commons.math.stat.correlation.PearsonsCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;  0.161350769399
org.apache.commons.math.stat.correlation.PearsonsCorrelation.correlation([D[D)D  0.139265747046
org.apache.commons.math.stat.correlation.PearsonsCorrelation.checkSufficientData(Lorg/apache/commons/math/linear/RealMatrix;)V  0.140194126303
org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math/linear/AnyMatrix;I)V  0.0439579673013
org.apache.commons.math.linear.BlockRealMatrix.<init>(II)V  0.0639728037538
org.apache.commons.math.linear.BlockRealMatrix.<init>([[D)V  0.0521570919968
org.apache.commons.math.linear.BlockRealMatrix.<init>(II[[DZ)V  0.0513878289669
org.apache.commons.math.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  0.0492280778185
org.apache.commons.math.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.0605477075273
org.apache.commons.math.linear.BlockRealMatrix.getColumn(I)[D  0.122312911719
org.apache.commons.math.linear.BlockRealMatrix.getEntry(II)D  0.0787365073881
org.apache.commons.math.linear.BlockRealMatrix.setEntry(IID)V  0.103127802173
org.apache.commons.math.linear.BlockRealMatrix.getRowDimension()I  0.0467574278617
org.apache.commons.math.linear.BlockRealMatrix.getColumnDimension()I  0.0469643280121
org.apache.commons.math.linear.BlockRealMatrix.blockHeight(I)I  0.0476281928783
org.apache.commons.math.linear.BlockRealMatrix.blockWidth(I)I  0.0473515961504
org.apache.commons.math.linear.AbstractRealMatrix.<init>(II)V  0.0286317222222
org.apache.commons.math.distribution.TDistributionImpl.<init>(DD)V  0.0681596230139
org.apache.commons.math.distribution.TDistributionImpl.<init>(D)V  0.0669492588439
org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(D)V  0.071496150801
org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedomInternal(D)V  0.0630897874638
org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(D)D  0.0781896841453
org.apache.commons.math.distribution.AbstractContinuousDistribution.<init>()V  0.0321455951443
org.apache.commons.math.distribution.AbstractDistribution.<init>()V  0.0292907627793
org.apache.commons.math.util.ContinuedFraction.<init>()V  0.0447562749535
org.apache.commons.math.util.ContinuedFraction.evaluate(DDI)D  0.0448232788766
