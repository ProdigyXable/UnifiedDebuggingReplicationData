org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  4296.0
org.apache.commons.math3.optim.MaxEval.<init>(I)V  4312.0
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  4407.0
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  4407.0
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  4412.0
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  4411.0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  4407.0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  4411.0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  4411.0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  4458.0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  4439.0
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  4411.0
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  4411.0
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  4411.0
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  4281.0
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  4281.0
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  4326.0
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  4281.0
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  4178.0
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  3888.0
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  3855.0
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  3854.0
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  4382.0
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  4368.0
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;  4458.0
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V  4429.0
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  4276.0
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  4277.0
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  4268.0
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  3726.0
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  3864.0
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  4474.0
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  4474.0
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;  4474.0
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;  4474.0
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  4492.0
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D  4492.0
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V  4472.0
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D  4474.0
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D  4473.0
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  4474.0
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  4471.0
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V  4473.0
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  4477.0
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  4474.0
org.apache.commons.math3.util.FastMath.min(II)I  3830.0
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  3478.0
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  3638.0
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  4425.0
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  4448.0
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  4442.0
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  4481.0
