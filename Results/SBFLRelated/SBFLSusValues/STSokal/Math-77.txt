org.apache.commons.math.linear.RealVector$Entry.<init>()V  0.998587570621469
org.apache.commons.math.linear.ArrayRealVector.<init>([D)V  0.9699757869249395
org.apache.commons.math.linear.ArrayRealVector.getNorm()D  0.996934685215751
org.apache.commons.math.linear.ArrayRealVector.getL1Norm()D  0.999764871855161
org.apache.commons.math.linear.ArrayRealVector.getLInfNorm()D  0.999764871855161
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry.<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V  0.9995296331138288
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry.getValue()D  0.9995296331138288
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V  0.9995296331138288
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()Z  0.9995296331138288
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.next()Lorg/apache/commons/math/linear/RealVector$Entry;  0.9995296331138288
org.apache.commons.math.linear.OpenMapRealVector.<init>([D)V  0.9983517777254532
org.apache.commons.math.linear.OpenMapRealVector.<init>([DD)V  0.9983517777254532
org.apache.commons.math.linear.OpenMapRealVector.isDefaultValue(D)Z  0.9983517777254532
org.apache.commons.math.linear.OpenMapRealVector.getLInfNorm()D  0.999764871855161
org.apache.commons.math.linear.OpenMapRealVector.sparseIterator()Ljava/util/Iterator;  0.9995296331138288
org.apache.commons.math.linear.OpenMapRealVector.access$000(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;  0.9995296331138288
org.apache.commons.math.linear.AbstractRealVector.<init>()V  0.9558173784977909
org.apache.commons.math.linear.AbstractRealVector.getNorm()D  0.999764871855161
org.apache.commons.math.linear.AbstractRealVector.getL1Norm()D  0.999764871855161
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V  0.9992942836979535
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.hasNext()Z  0.9964614295824487
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.value()D  0.9964614295824487
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.advance()V  0.9992942836979535
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V  0.996224634261444
org.apache.commons.math.util.OpenIntToDoubleHashMap.<init>(D)V  0.9919431279620853
org.apache.commons.math.util.OpenIntToDoubleHashMap.<init>(ID)V  0.9878658101356174
org.apache.commons.math.util.OpenIntToDoubleHashMap.computeCapacity(I)I  0.9992942836979535
org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;  0.996224634261444
org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(I)I  0.9883472057074911
org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex([I[BII)I  0.9990588235294118
org.apache.commons.math.util.OpenIntToDoubleHashMap.put(ID)D  0.9964614295824487
org.apache.commons.math.util.OpenIntToDoubleHashMap.shouldGrowTable()Z  0.9883472057074911
org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(I)I  0.9878658101356174
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)I  0.996224634261444
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$300(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[D  0.9964614295824487
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B  0.996224634261444
