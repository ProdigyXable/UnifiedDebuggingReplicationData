org.apache.commons.math.util.MultidimensionalCounter.<init>([I)V  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator;  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.getDimension()I  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.getCounts(I)[I  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.getCount([I)I  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.getSize()I  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.access$000(Lorg/apache/commons/math/util/MultidimensionalCounter;)I  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.access$100(Lorg/apache/commons/math/util/MultidimensionalCounter;)I  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter.access$200(Lorg/apache/commons/math/util/MultidimensionalCounter;)[I  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter$Iterator.<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter$Iterator.hasNext()Z  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter$Iterator.next()Ljava/lang/Integer;  0.00042052144659377626
org.apache.commons.math.util.MultidimensionalCounter$Iterator.getCount(I)I  0.00042052144659377626
org.apache.commons.math.util.FastMath.min(II)I  0.00042052144659377626
org.apache.commons.math.util.MathUtils.copyOf([I)[I  0.00042052144659377626
org.apache.commons.math.util.MathUtils.copyOf([II)[I  0.00042052144659377626
