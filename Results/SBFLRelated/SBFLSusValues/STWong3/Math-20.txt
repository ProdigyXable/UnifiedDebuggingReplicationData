org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  -1.06
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  -1.06
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  -1.06
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  -1.06
org.apache.commons.math3.linear.RealVector.<init>()V  -6.9
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  -2.0300000000000002
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  -1.1099999999999999
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  -4.82
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -2.18
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -2.14
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  -1.2000000000000002
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  -1.9300000000000002
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  -2.21
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  -2.94
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  -2.0
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  -3.8900000000000006
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  -2.5
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  -2.5
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  -1.0
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  -1.3399999999999999
org.apache.commons.math3.linear.EigenDecomposition.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;Z)Z  -1.0
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  -1.12
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  -1.0
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  -1.29
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  -1.3199999999999998
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  -6.39
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  -3.7
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  -3.5999999999999996
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  -1.9100000000000001
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  -2.81
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  -2.81
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  -1.0
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  -3.6400000000000006
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  -3.6099999999999994
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  -4.48
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  -4.49
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  -2.51
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  -2.88
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  -3.62
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  -1.0
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  -1.3399999999999999
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  -1.35
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  -1.2999999999999998
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  -1.2999999999999998
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  -1.37
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  -4.1
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  -1.0
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0899999999999999
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.7400000000000002
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0699999999999998
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0899999999999999
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.9500000000000002
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  -1.06
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0899999999999999
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  -1.0
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  -1.3900000000000001
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  -1.2800000000000002
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  -2.5
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  -2.35
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  -2.52
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  -2.56
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  -2.52
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  -2.56
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  -1.2999999999999998
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.getLowerBound()[D  -1.25
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.getUpperBound()[D  -1.25
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D[D[D)Lorg/apache/commons/math3/optimization/PointValuePair;  -1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)V  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.encode([D)[D  -1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repairAndDecode([D)[D  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.decode([D)[D  -1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value([D)D  -1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.setValueRange(D)V  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repair([D)[D  0.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.penalty([D[D)D  -1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>()V  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I)V  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;Z)V  -1.13
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V  -1.13
org.apache.commons.math3.optimization.direct.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;  0.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.checkParameters()V  -1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.initializeCMA([D)V  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateBD(D)V  -1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.push([DD)V  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sortedIndices([D)[I  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.04
org.apache.commons.math3.optimization.direct.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  -1.04
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.04
org.apache.commons.math3.optimization.direct.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max([D)D  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min([D)D  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.inverse([I)[I  -1.04
org.apache.commons.math3.optimization.direct.CMAESOptimizer.reverse([I)[I  -1.04
org.apache.commons.math3.optimization.direct.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.access$100(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)[[D  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)Z  -1.0499999999999998
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  -1.7400000000000002
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getMaxEvaluations()I  -1.1800000000000002
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;  -1.4900000000000002
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue([D)D  -1.63
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;  -1.56
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;  -1.69
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;  -1.63
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getStartPoint()[D  -1.69
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.<init>(DI)V  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I  -1.0499999999999998
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.access$000(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I  -1.0499999999999998
org.apache.commons.math3.optimization.PointValuePair.<init>([DD)V  -1.9300000000000002
org.apache.commons.math3.optimization.PointValuePair.<init>([DDZ)V  -1.9300000000000002
org.apache.commons.math3.optimization.PointValuePair.getPoint()[D  -1.67
org.apache.commons.math3.optimization.SimpleValueChecker.<init>()V  -1.13
org.apache.commons.math3.optimization.SimpleValueChecker.converged(ILorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)Z  -1.4300000000000002
org.apache.commons.math3.optimization.AbstractConvergenceChecker.<init>()V  -1.1600000000000001
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getRelativeThreshold()D  -1.73
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getAbsoluteThreshold()D  -1.7199999999999998
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  -1.13
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(DD)V  -2.5
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  -3.5999999999999996
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  -3.5999999999999996
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  -3.5999999999999996
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  -10.13
org.apache.commons.math3.util.Incrementor$1.<init>()V  -7.27
org.apache.commons.math3.util.Precision.compareTo(DDD)I  -1.3599999999999999
org.apache.commons.math3.util.Precision.equals(DDD)Z  -4.9399999999999995
org.apache.commons.math3.util.Precision.equals(DDI)Z  -2.55
org.apache.commons.math3.util.FastMath.sqrt(D)D  -16.509999999999998
org.apache.commons.math3.util.FastMath.log(D)D  -8.06
org.apache.commons.math3.util.FastMath.log(D[D)D  -2.18
org.apache.commons.math3.util.FastMath.polySine(D)D  -4.41
org.apache.commons.math3.util.FastMath.polyCosine(D)D  -4.41
org.apache.commons.math3.util.FastMath.sinQ(DD)D  -4.050000000000001
org.apache.commons.math3.util.FastMath.cosQ(DD)D  -4.04
org.apache.commons.math3.util.FastMath.sin(D)D  -2.06
org.apache.commons.math3.util.FastMath.cos(D)D  -2.0
org.apache.commons.math3.util.FastMath.abs(J)J  -8.99
org.apache.commons.math3.util.FastMath.abs(D)D  -16.89
org.apache.commons.math3.util.FastMath.min(II)I  -6.32
org.apache.commons.math3.util.FastMath.max(DD)D  -1.0
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  -2.7
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  -3.76
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  -2.6100000000000003
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  -2.19
org.apache.commons.math3.util.Incrementor.<init>()V  -6.71
org.apache.commons.math3.util.Incrementor.<init>(I)V  -7.27
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  -7.280000000000001
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  -6.5600000000000005
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  -1.25
org.apache.commons.math3.util.Incrementor.incrementCount()V  -2.09
org.apache.commons.math3.util.Incrementor.resetCount()V  -6.92
org.apache.commons.math3.random.MersenneTwister.next(I)I  -1.7199999999999998
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  -5.33
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  -1.6
