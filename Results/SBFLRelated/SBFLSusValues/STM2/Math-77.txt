org.apache.commons.math.linear.RealVector$Entry.<init>()V  0.00046882325363338024
org.apache.commons.math.linear.ArrayRealVector.<init>([D)V  0.000444247001332741
org.apache.commons.math.linear.ArrayRealVector.getNorm()D  0.00046728971962616824
org.apache.commons.math.linear.ArrayRealVector.getL1Norm()D  0.00046992481203007516
org.apache.commons.math.linear.ArrayRealVector.getLInfNorm()D  0.00046992481203007516
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry.<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V  0.0004697040864255519
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry.getValue()D  0.0004697040864255519
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V  0.0004697040864255519
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()Z  0.0004697040864255519
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.next()Lorg/apache/commons/math/linear/RealVector$Entry;  0.0004697040864255519
org.apache.commons.math.linear.OpenMapRealVector.<init>([D)V  0.00046860356138706655
org.apache.commons.math.linear.OpenMapRealVector.<init>([DD)V  0.00046860356138706655
org.apache.commons.math.linear.OpenMapRealVector.isDefaultValue(D)Z  0.00046860356138706655
org.apache.commons.math.linear.OpenMapRealVector.getLInfNorm()D  0.00046992481203007516
org.apache.commons.math.linear.OpenMapRealVector.sparseIterator()Ljava/util/Iterator;  0.0004697040864255519
org.apache.commons.math.linear.OpenMapRealVector.access$000(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;  0.0004697040864255519
org.apache.commons.math.linear.AbstractRealVector.<init>()V  0.0008669267446900737
org.apache.commons.math.linear.AbstractRealVector.getNorm()D  0.00046992481203007516
org.apache.commons.math.linear.AbstractRealVector.getL1Norm()D  0.00046992481203007516
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V  0.0004666355576294914
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.hasNext()Z  0.00046685340802987864
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.value()D  0.00046685340802987864
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.advance()V  0.00046685340802987864
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V  0.0004666355576294914
org.apache.commons.math.util.OpenIntToDoubleHashMap.<init>(D)V  0.00046274872744099955
org.apache.commons.math.util.OpenIntToDoubleHashMap.<init>(ID)V  0.0004591368227731864
org.apache.commons.math.util.OpenIntToDoubleHashMap.computeCapacity(I)I  0.00045955882352941176
org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;  0.0004666355576294914
org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(I)I  0.00045955882352941176
org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex([I[BII)I  0.00045955882352941176
org.apache.commons.math.util.OpenIntToDoubleHashMap.put(ID)D  0.00045955882352941176
org.apache.commons.math.util.OpenIntToDoubleHashMap.shouldGrowTable()Z  0.00045955882352941176
org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(I)I  0.0004591368227731864
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)I  0.0004666355576294914
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$300(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[D  0.00046685340802987864
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B  0.0004666355576294914
