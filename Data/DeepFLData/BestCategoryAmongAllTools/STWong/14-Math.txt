org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V NoneFix
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V NoneFix
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V NoneFix
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V NoneFix
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V NoneFix
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; NoneFix
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; NoneFix
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V NoneFix
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V NoneFix
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D NoneFix
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V NoneFix
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V NoneFix
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V NoneFix
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V NoneFix
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; NoneFix
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V NoneFix
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V NoneFix
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V NoneFix
org.apache.commons.math3.optim.InitialGuess:<init>([D)V NoneFix
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V NoneFix
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V NoneFix
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V NoneFix
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V NoneFix
org.apache.commons.math3.linear.RealLinearOperator:<init>()V NoneFix
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D CleanFix
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D NoisyFix
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D NoisyFix
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D NegFix
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V NoneFix
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D NegFix
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V NegFix
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; NegFix
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D NegFix
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V NegFix
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V NegFix
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V NegFix
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; NegFix
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V NegFix
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V NegFix
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D NegFix
org.apache.commons.math3.optim.MaxEval:<init>(I)V NegFix
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V NegFix
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I NegFix
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I NegFix
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I NegFix
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; NegFix
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V NegFix
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V NegFix
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V NegFix
org.apache.commons.math3.util.FastMath:min(II)I NegFix
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V NegFix
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V NegFix
