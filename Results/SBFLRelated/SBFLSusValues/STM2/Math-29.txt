org.apache.commons.math3.linear.RealVector.<init>()V  0.0007087172218284905
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(I)V  0.0007985094490284802
org.apache.commons.math3.linear.RealVector.checkIndex(I)V  0.0007932310946589106
org.apache.commons.math3.linear.OpenMapRealVector.<init>([D)V  0.0007892659826361484
org.apache.commons.math3.linear.OpenMapRealVector.<init>([DD)V  0.000792393026941363
org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V  0.0008
org.apache.commons.math3.linear.OpenMapRealVector.getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;  0.0007997867235403892
org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(D)Z  0.0007876082961407193
org.apache.commons.math3.linear.OpenMapRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;  0.0002674511901577962
org.apache.commons.math3.linear.OpenMapRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;  0.0005350454788657035
org.apache.commons.math3.linear.OpenMapRealVector.getDimension()I  0.0007880220646178094
org.apache.commons.math3.linear.OpenMapRealVector.getEntry(I)D  0.0007947019867549669
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(ID)V  0.0008010680907877169
org.apache.commons.math3.linear.SparseRealVector.<init>()V  0.0007876082961407193
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V  0.0007953340402969247
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()Z  0.0007955449482895784
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()I  0.0007968127490039841
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()D  0.0007955449482895784
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()V  0.0007955449482895784
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V  0.0007953340402969247
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(D)V  0.0007820646506777894
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(ID)V  0.0007786140669608098
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V  0.0007974481658692185
org.apache.commons.math3.util.OpenIntToDoubleHashMap.computeCapacity(I)I  0.0007790184367696703
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(I)D  0.0007932310946589106
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(I)Z  0.0007995735607675906
org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;  0.0007953340402969247
org.apache.commons.math3.util.OpenIntToDoubleHashMap.perturb(I)I  0.0007957559681697613
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(I)I  0.0007820646506777894
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex([I[BII)I  0.0007980845969672786
org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(II)I  0.0007957559681697613
org.apache.commons.math3.util.OpenIntToDoubleHashMap.changeIndexSign(I)I  0.0007961783439490446
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(I)D  0.0007985094490284802
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(II)Z  0.0007861635220125787
org.apache.commons.math3.util.OpenIntToDoubleHashMap.doRemove(I)D  0.0007985094490284802
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(ID)D  0.0007978723404255319
org.apache.commons.math3.util.OpenIntToDoubleHashMap.growTable()V  0.0007978723404255319
org.apache.commons.math3.util.OpenIntToDoubleHashMap.shouldGrowTable()Z  0.0007820646506777894
org.apache.commons.math3.util.OpenIntToDoubleHashMap.hashOf(I)I  0.000781657113079729
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I  0.0007953340402969247
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I  0.0007968127490039841
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D  0.0007955449482895784
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B  0.0007953340402969247
org.apache.commons.math3.util.FastMath.abs(D)D  0.0005751533742331289
org.apache.commons.math3.util.FastMath.floor(D)D  0.0007047216349541931
org.apache.commons.math3.util.FastMath.ceil(D)D  0.0007562389715149988
