org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 12
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 12
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 12
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 12
org.apache.commons.math3.optim.MaxEval:<init>(I)V 12
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 12
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.util.FastMath:min(II)I 12
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 12
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 12
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 12
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 12
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 12
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 12
org.apache.commons.math3.optim.MaxEval:<init>(I)V 12
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 12
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.util.FastMath:min(II)I 12
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 12
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 12
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 12
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 12
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 12
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 12
org.apache.commons.math3.optim.MaxEval:<init>(I)V 12
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 12
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.util.FastMath:min(II)I 12
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 12
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 12
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 13
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 13
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 13
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 13
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 13
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 13
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 13
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 13
org.apache.commons.math3.optim.MaxEval:<init>(I)V 13
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 13
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 13
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 13
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 13
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 13
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 13
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 13
org.apache.commons.math3.util.FastMath:min(II)I 13
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 13
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 13
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 2
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 2
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 2
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 2
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 2
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 2
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 2
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 2
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 2
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 2
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 2
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 2
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 2
org.apache.commons.math3.optim.MaxEval:<init>(I)V 2
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 2
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 2
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 2
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 2
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 2
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 2
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 2
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 2
org.apache.commons.math3.util.FastMath:min(II)I 2
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 2
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 2
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 3
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 3
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 3
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 3
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 3
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 3
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 3
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 3
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 3
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 3
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 3
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 3
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 3
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 3
org.apache.commons.math3.optim.MaxEval:<init>(I)V 3
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 3
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 3
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 3
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 3
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 3
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 3
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 3
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 3
org.apache.commons.math3.util.FastMath:min(II)I 3
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 3
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 3
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 4
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 4
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 4
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 4
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 4
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 4
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 4
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 4
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 4
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 4
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 4
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 4
org.apache.commons.math3.optim.MaxEval:<init>(I)V 4
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 4
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 4
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 4
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 4
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 4
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 4
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 4
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 4
org.apache.commons.math3.util.FastMath:min(II)I 4
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 4
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 4
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 5
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 5
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 5
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 5
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 5
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 5
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 5
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 5
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 5
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 5
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 5
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 5
org.apache.commons.math3.optim.MaxEval:<init>(I)V 5
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 5
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 5
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 5
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 5
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 5
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 5
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 5
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 5
org.apache.commons.math3.util.FastMath:min(II)I 5
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 5
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 5
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 6
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 6
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 6
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 6
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 6
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 6
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 6
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 6
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 6
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 6
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 6
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 6
org.apache.commons.math3.optim.MaxEval:<init>(I)V 6
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 6
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 6
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 6
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 6
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 6
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 6
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 6
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 6
org.apache.commons.math3.util.FastMath:min(II)I 6
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 6
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 6
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 7
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 7
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 7
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 7
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 7
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 7
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 7
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 7
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 7
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 7
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 7
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 7
org.apache.commons.math3.optim.MaxEval:<init>(I)V 7
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 7
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 7
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 7
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 7
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 7
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 7
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 7
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 7
org.apache.commons.math3.util.FastMath:min(II)I 7
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 7
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 7
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 3
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 8
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 8
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 8
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 8
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 8
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 8
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 8
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 8
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 8
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 8
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 8
org.apache.commons.math3.optim.MaxEval:<init>(I)V 8
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 8
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 8
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 8
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 8
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 8
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 8
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 8
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 8
org.apache.commons.math3.util.FastMath:min(II)I 8
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 8
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 8
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 9
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 9
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 9
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 9
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 9
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 9
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 9
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 9
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 9
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 9
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 9
org.apache.commons.math3.optim.MaxEval:<init>(I)V 9
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 9
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 9
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 9
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 9
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 9
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 9
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 9
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 9
org.apache.commons.math3.util.FastMath:min(II)I 9
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 9
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 9
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 10
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 10
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 10
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 10
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 10
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 10
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 10
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 10
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 10
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 10
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 10
org.apache.commons.math3.optim.MaxEval:<init>(I)V 10
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 10
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 10
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 10
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 10
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 10
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 10
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 10
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 10
org.apache.commons.math3.util.FastMath:min(II)I 10
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 10
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 10
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 11
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 11
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 11
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 11
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 11
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 11
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 11
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 11
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 11
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 11
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 11
org.apache.commons.math3.optim.MaxEval:<init>(I)V 11
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 11
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 11
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 11
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 11
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 11
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 11
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 11
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 11
org.apache.commons.math3.util.FastMath:min(II)I 11
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 11
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 11
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 12
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 12
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 12
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 12
org.apache.commons.math3.optim.MaxEval:<init>(I)V 12
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 12
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.util.FastMath:min(II)I 12
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 12
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 12
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 13
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 13
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 13
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 13
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 13
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 13
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 13
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 13
org.apache.commons.math3.optim.MaxEval:<init>(I)V 13
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 13
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 13
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 13
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 13
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 13
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 13
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 13
org.apache.commons.math3.util.FastMath:min(II)I 13
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 13
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 13
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 2
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 2
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 2
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 2
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 2
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 2
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 2
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 2
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 2
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 2
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 2
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 2
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 2
org.apache.commons.math3.optim.MaxEval:<init>(I)V 2
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 2
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 2
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 2
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 2
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 2
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 2
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 2
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 2
org.apache.commons.math3.util.FastMath:min(II)I 2
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 2
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 2
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 3
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 3
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 3
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 3
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 3
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 3
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 3
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 3
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 3
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 3
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 3
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 3
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 3
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 3
org.apache.commons.math3.optim.MaxEval:<init>(I)V 3
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 3
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 3
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 3
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 3
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 3
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 3
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 3
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 3
org.apache.commons.math3.util.FastMath:min(II)I 3
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 3
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 3
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 4
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 4
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 4
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 4
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 4
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 4
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 4
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 4
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 4
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 4
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 4
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 4
org.apache.commons.math3.optim.MaxEval:<init>(I)V 4
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 4
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 4
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 4
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 4
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 4
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 4
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 4
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 4
org.apache.commons.math3.util.FastMath:min(II)I 4
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 4
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 4
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 5
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 5
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 5
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 5
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 5
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 5
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 5
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 5
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 5
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 5
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 5
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 5
org.apache.commons.math3.optim.MaxEval:<init>(I)V 5
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 5
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 5
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 5
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 5
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 5
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 5
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 5
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 5
org.apache.commons.math3.util.FastMath:min(II)I 5
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 5
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 5
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 6
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 6
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 6
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 6
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 6
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 6
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 6
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 6
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 6
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 6
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 6
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 6
org.apache.commons.math3.optim.MaxEval:<init>(I)V 6
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 6
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 6
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 6
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 6
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 6
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 6
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 6
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 6
org.apache.commons.math3.util.FastMath:min(II)I 6
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 6
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 6
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 2
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 7
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 7
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 7
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 7
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 7
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 7
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 7
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 7
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 7
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 7
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 7
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 7
org.apache.commons.math3.optim.MaxEval:<init>(I)V 7
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 7
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 7
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 7
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 7
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 7
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 7
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 7
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 7
org.apache.commons.math3.util.FastMath:min(II)I 7
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 7
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 7
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 3
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 8
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 8
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 8
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 8
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 8
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 8
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 8
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 8
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 8
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 8
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 8
org.apache.commons.math3.optim.MaxEval:<init>(I)V 8
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 8
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 8
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 8
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 8
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 8
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 8
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 8
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 8
org.apache.commons.math3.util.FastMath:min(II)I 8
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 8
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 8
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 9
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 9
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 9
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 9
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 9
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 9
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 9
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 9
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 9
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 9
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 9
org.apache.commons.math3.optim.MaxEval:<init>(I)V 9
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 9
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 9
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 9
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 9
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 9
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 9
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 9
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 9
org.apache.commons.math3.util.FastMath:min(II)I 9
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 9
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 9
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 10
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 10
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 10
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 10
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 10
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 10
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 10
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 10
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 10
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 10
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 10
org.apache.commons.math3.optim.MaxEval:<init>(I)V 10
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 10
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 10
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 10
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 10
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 10
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 10
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 10
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 10
org.apache.commons.math3.util.FastMath:min(II)I 10
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 10
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 10
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 11
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 11
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 11
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 11
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 11
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 11
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 11
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 11
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 11
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 11
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 11
org.apache.commons.math3.optim.MaxEval:<init>(I)V 11
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 11
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 11
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 11
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 11
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 11
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 11
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 11
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 11
org.apache.commons.math3.util.FastMath:min(II)I 11
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 11
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 11
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 12
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 12
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 12
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 12
org.apache.commons.math3.optim.MaxEval:<init>(I)V 12
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 12
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.util.FastMath:min(II)I 12
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 12
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 12
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 13
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 13
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 13
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 13
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 13
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 13
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 13
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 13
org.apache.commons.math3.optim.MaxEval:<init>(I)V 13
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 13
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 13
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 13
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 13
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 13
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 13
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 13
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 13
org.apache.commons.math3.util.FastMath:min(II)I 13
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 13
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 13
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.MaxEval:<init>(I)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 1
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 1
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 1
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 1
org.apache.commons.math3.util.FastMath:min(II)I 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 1
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 1
org.apache.commons.math3.fitting.PolynomialFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric:<init>()V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; 1
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; 1
org.apache.commons.math3.fitting.WeightedObservedPoint:<init>(DDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>()V 1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:value(D)D 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian:<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V 1
org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; 1
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.InitialGuess:<init>([D)V 1
org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback:<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V 1
org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V 1
org.apache.commons.math3.linear.RealLinearOperator:<init>()V 1
org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D 12
org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V 1
org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D 12
org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix; 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D 12
org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V 12
org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V 12
org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D 12
org.apache.commons.math3.optim.MaxEval:<init>(I)V 12
org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V 12
org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I 12
org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I 12
org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; 12
org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V 12
org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V 12
org.apache.commons.math3.util.FastMath:min(II)I 12
org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V 12
org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V 12
