org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  0.11764705882352941
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  0.11764705882352941
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  0.11764705882352941
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  0.11764705882352941
org.apache.commons.math3.linear.RealVector.<init>()V  0.0033277870216306157
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.017543859649122806
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  0.01092896174863388
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.09090909090909091
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.11764705882352941
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.005089058524173028
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.004694835680751174
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.00468384074941452
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.06451612903225806
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.019230769230769232
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.015151515151515152
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  0.00975609756097561
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  0.008097165991902834
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  0.006666666666666667
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  0.012422360248447204
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  0.012422360248447204
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.05
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.044444444444444446
org.apache.commons.math3.linear.EigenDecomposition.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;Z)Z  0.05
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  0.08695652173913043
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  0.10526315789473684
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.05
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  0.046511627906976744
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.0036363636363636364
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  0.0071174377224199285
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  0.007380073800738007
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  0.0196078431372549
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.010416666666666666
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  0.010416666666666666
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  0.007326007326007326
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  0.007272727272727273
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  0.007352941176470588
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  0.005571030640668524
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  0.005555555555555556
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.012345679012345678
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  0.010050251256281407
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  0.007326007326007326
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.041666666666666664
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.044444444444444446
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.043478260869565216
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.04878048780487805
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.04878048780487805
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.041666666666666664
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.006230529595015576
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.00477326968973747
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.1
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.023529411764705882
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.1111111111111111
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.1
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.018867924528301886
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  0.11764705882352941
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  0.1
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  0.08333333333333333
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  0.04
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  0.05128205128205128
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  0.012422360248447204
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.0136986301369863
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.012269938650306749
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  0.011976047904191617
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  0.012269938650306749
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  0.011976047904191617
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.04878048780487805
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.getLowerBound()[D  0.05555555555555555
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.getUpperBound()[D  0.05555555555555555
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D[D[D)Lorg/apache/commons/math3/optimization/PointValuePair;  0.2222222222222222
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)V  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.encode([D)[D  0.6666666666666666
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repairAndDecode([D)[D  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.decode([D)[D  0.6666666666666666
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value([D)D  0.6666666666666666
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repair([D)[D  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.6666666666666666
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>()V  2.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I)V  2.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;Z)V  0.08333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.08333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.checkParameters()V  0.5
org.apache.commons.math3.optimization.direct.CMAESOptimizer.initializeCMA([D)V  2.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  2.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateBD(D)V  0.13333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.push([DD)V  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sortedIndices([D)[I  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.13333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.13333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.13333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max([D)D  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min([D)D  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.inverse([I)[I  0.13333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.reverse([I)[I  0.13333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.access$100(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)[[D  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)Z  0.125
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.023529411764705882
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getMaxEvaluations()I  0.06896551724137931
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;  0.03333333333333333
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue([D)D  0.02702702702702703
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;  0.029850746268656716
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;  0.025
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;  0.02702702702702703
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getStartPoint()[D  0.025
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I  0.125
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.access$000(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I  0.125
org.apache.commons.math3.optimization.PointValuePair.<init>([DD)V  0.019230769230769232
org.apache.commons.math3.optimization.PointValuePair.<init>([DDZ)V  0.019230769230769232
org.apache.commons.math3.optimization.PointValuePair.getPoint()[D  0.02564102564102564
org.apache.commons.math3.optimization.SimpleValueChecker.<init>()V  0.08333333333333333
org.apache.commons.math3.optimization.SimpleValueChecker.converged(ILorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)Z  0.037037037037037035
org.apache.commons.math3.optimization.AbstractConvergenceChecker.<init>()V  0.07407407407407407
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getRelativeThreshold()D  0.023809523809523808
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.024096385542168676
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  0.08333333333333333
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(DD)V  0.007380073800738007
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  0.007380073800738007
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  0.007380073800738007
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  0.007380073800738007
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  0.0021645021645021645
org.apache.commons.math3.util.Incrementor$1.<init>()V  0.003134796238244514
org.apache.commons.math3.util.Precision.compareTo(DDD)I  0.0425531914893617
org.apache.commons.math3.util.Precision.equals(DDD)Z  0.0049382716049382715
org.apache.commons.math3.util.Precision.equals(DDI)Z  0.0026666666666666666
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.0012804097311139564
org.apache.commons.math3.util.FastMath.log(D)D  0.002789400278940028
org.apache.commons.math3.util.FastMath.log(D[D)D  0.002857142857142857
org.apache.commons.math3.util.FastMath.polySine(D)D  0.005681818181818182
org.apache.commons.math3.util.FastMath.polyCosine(D)D  0.005681818181818182
org.apache.commons.math3.util.FastMath.sinQ(DD)D  0.006329113924050633
org.apache.commons.math3.util.FastMath.cosQ(DD)D  0.006349206349206349
org.apache.commons.math3.util.FastMath.sin(D)D  0.010471204188481676
org.apache.commons.math3.util.FastMath.cos(D)D  0.014285714285714285
org.apache.commons.math3.util.FastMath.abs(J)J  0.0024691358024691358
org.apache.commons.math3.util.FastMath.abs(D)D  0.00125
org.apache.commons.math3.util.FastMath.min(II)I  0.003683241252302026
org.apache.commons.math3.util.FastMath.max(DD)D  0.004662004662004662
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.002574002574002574
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  0.006968641114982578
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  0.011627906976744186
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  0.015384615384615385
org.apache.commons.math3.util.Incrementor.<init>()V  0.003436426116838488
org.apache.commons.math3.util.Incrementor.<init>(I)V  0.003134796238244514
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.003129890453834116
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.003527336860670194
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  0.05555555555555555
org.apache.commons.math3.util.Incrementor.incrementCount()V  0.003424657534246575
org.apache.commons.math3.util.Incrementor.resetCount()V  0.003316749585406302
org.apache.commons.math3.random.MersenneTwister.next(I)I  0.024096385542168676
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  0.0045045045045045045
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  0.028169014084507043
