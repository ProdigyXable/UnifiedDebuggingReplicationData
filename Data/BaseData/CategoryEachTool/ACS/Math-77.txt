org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NoneFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NoisyFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoisyFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoisyFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D CleanFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D CleanFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D CleanFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; CleanFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z CleanFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V CleanFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I CleanFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NoneFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NoisyFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoisyFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoisyFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D CleanFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D CleanFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D CleanFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; CleanFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z CleanFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V CleanFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I CleanFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NoneFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D CleanFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D CleanFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D CleanFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z CleanFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; CleanFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; CleanFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z CleanFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V CleanFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I CleanFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NoisyFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NoisyFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NoisyFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoisyFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoisyFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NoneFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NoneFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NoneFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoneFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.AbstractRealVector:getNorm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D NegFix
org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z NegFix
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; NegFix
org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; NegFix
org.apache.commons.math.linear.RealVector$Entry:<init>()V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V NegFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NegFix
org.apache.commons.math.linear.ArrayRealVector:getNorm()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NegFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NegFix
org.apache.commons.math.linear.ArrayRealVector:<init>([D)V NegFix
