org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  -0.9904076738609112
org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  -0.968503937007874
org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  -0.9903147699757869
org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V  -0.9903147699757869
org.joda.time.format.DateTimeFormatter.printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V  -0.9904988123515439
org.joda.time.format.DateTimeFormatter.print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;  -0.9904761904761905
org.joda.time.format.DateTimeFormatter.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V  -0.9906542056074766
org.joda.time.format.DateTimeFormatter.requirePrinter()Lorg/joda/time/format/DateTimePrinter;  -0.9926470588235294
org.joda.time.format.DateTimeFormatter.selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;  -0.9943342776203966
org.joda.time.format.DateTimeFormatterBuilder$Composite.estimatePrintedLength()I  -0.9920792079207921
org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  -0.9899497487437185
org.joda.time.format.ISODateTimeFormat.dateTime()Lorg/joda/time/format/DateTimeFormatter;  -0.9873015873015873
org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V  -0.987987987987988
org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V  -0.9832635983263598
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;  -0.7647058823529411
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V  -0.8
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I  -0.9583333333333334
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J  -0.9583333333333334
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(Ljava/lang/Object;)Z  -0.9365079365079365
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  -0.96
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;  -0.7647058823529411
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V  -0.84
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I  -0.9583333333333334
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J  -0.9583333333333334
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(Ljava/lang/Object;)Z  -0.9444444444444444
org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  -0.8095238095238095
org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;  -0.8095238095238095
org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  -0.8095238095238095
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  -0.7647058823529411
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V  -0.8095238095238095
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J  -0.9607843137254902
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I  -0.9928571428571429
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(Ljava/lang/Object;)Z  -0.9365079365079365
org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;  -0.8333333333333334
org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V  -0.8333333333333334
org.joda.time.tz.CachedDateTimeZone.getOffset(J)I  -0.9968676585747847
org.joda.time.tz.CachedDateTimeZone.hashCode()I  -0.9913232104121475
org.joda.time.tz.CachedDateTimeZone.equals(Ljava/lang/Object;)Z  -0.9436619718309859
org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  -0.9735099337748344
org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  -0.9375
org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V  -0.9735099337748344
org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I  -0.9646017699115044
org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;  -0.7647058823529411
org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V  -0.8095238095238095
org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J  -0.9574468085106383
org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(Ljava/lang/Object;)Z  -0.9365079365079365
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J  -0.9607843137254902
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J  -0.9927536231884058
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J  -0.9927536231884058
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  -0.8260869565217391
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  -0.8095238095238095
org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J  -0.8
org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;  -0.9961649089165868
org.joda.time.chrono.ISOChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;  -0.9652173913043478
org.joda.time.chrono.ISOChronology.withUTC()Lorg/joda/time/Chronology;  -0.9973027646662171
org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I  -0.996875
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I  -0.9959308240081384
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I  -0.9951219512195122
org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(J)I  -0.9956043956043956
org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J  -0.9935379644588045
org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J  -0.995221027479092
org.joda.time.chrono.AssembledChronology.getZone()Lorg/joda/time/DateTimeZone;  -0.9983586376692655
org.joda.time.chrono.AssembledChronology.getDateTimeMillis(IIIIIII)J  -0.9956331877729258
org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;  -0.9953863898500577
org.joda.time.chrono.AssembledChronology.secondOfMinute()Lorg/joda/time/DateTimeField;  -0.9965724078834619
org.joda.time.chrono.AssembledChronology.secondOfDay()Lorg/joda/time/DateTimeField;  -0.9921259842519685
org.joda.time.chrono.AssembledChronology.minuteOfHour()Lorg/joda/time/DateTimeField;  -0.9966914805624483
org.joda.time.chrono.AssembledChronology.hourOfDay()Lorg/joda/time/DateTimeField;  -0.9967974379503602
org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;  -0.9946091644204852
org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;  -0.9974667511082964
org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;  -0.9975046787273861
org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;  -0.9974059662775616
org.joda.time.chrono.AssembledChronology.getBase()Lorg/joda/time/Chronology;  -0.9974489795918368
org.joda.time.chrono.AssembledChronology.getParam()Ljava/lang/Object;  -0.9981684981684982
org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I  -0.9969135802469136
org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I  -0.9939668174962293
org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I  -0.995049504950495
org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J  -0.9937402190923318
org.joda.time.chrono.BasicGJChronology.setYear(JI)J  -0.9745222929936306
org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z  -0.9973009446693657
org.joda.time.chrono.GregorianChronology.getMinYear()I  -0.9970193740685543
org.joda.time.chrono.GregorianChronology.getMaxYear()I  -0.9970215934475056
org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J  -0.9970171513795675
org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J  -0.9970171513795675
org.joda.time.chrono.BasicYearDateTimeField.get(J)I  -0.9969254419677172
org.joda.time.chrono.BasicYearDateTimeField.add(JI)J  -0.9932773109243698
org.joda.time.chrono.BasicYearDateTimeField.set(JI)J  -0.9953216374269006
org.joda.time.chrono.BasicChronology.getDateTimeMillis(IIIIIII)J  -0.9957446808510638
org.joda.time.chrono.BasicChronology.getYearMillis(I)J  -0.99734395750332
org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J  -0.9969418960244648
org.joda.time.chrono.BasicChronology.getYear(J)I  -0.9971570717839374
org.joda.time.chrono.BasicChronology.getMonthOfYear(J)I  -0.995260663507109
org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I  -0.996734693877551
org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I  -0.995221027479092
org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I  -0.9968871595330739
org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I  -0.9957716701902748
org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I  -0.9939393939393939
org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I  -0.995609220636663
org.joda.time.chrono.BasicChronology.getDateMidnightMillis(III)J  -0.9965367965367965
org.joda.time.chrono.BasicChronology.getMaxMonth(I)I  -0.9965337954939342
org.joda.time.chrono.BasicChronology.getMaxMonth()I  -0.9963269054178145
org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;  -0.99734395750332
org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I  -0.99375
org.joda.time.chrono.ZonedChronology.getZone()Lorg/joda/time/DateTimeZone;  -0.9981676591846084
org.joda.time.chrono.ZonedChronology.getDateTimeMillis(IIIIIII)J  -0.993993993993994
org.joda.time.chrono.ZonedChronology.localToUTC(J)J  -0.9939301972685888
org.joda.time.base.AbstractDateTime.<init>()V  -0.9970326409495549
org.joda.time.base.AbstractInstant.<init>()V  -0.997212543554007
org.joda.time.base.AbstractInstant.toString()Ljava/lang/String;  -0.9823008849557522
org.joda.time.base.BaseDateTime.<init>(IIIIIIILorg/joda/time/DateTimeZone;)V  -0.9865319865319865
org.joda.time.base.BaseDateTime.<init>(IIIIIIILorg/joda/time/Chronology;)V  -0.9954648526077098
org.joda.time.base.BaseDateTime.checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;  -0.9969856819894499
org.joda.time.base.BaseDateTime.checkInstant(JLorg/joda/time/Chronology;)J  -0.9966414777497901
org.joda.time.base.BaseDateTime.getMillis()J  -0.9971223021582734
org.joda.time.base.BaseDateTime.getChronology()Lorg/joda/time/Chronology;  -0.9965156794425087
org.joda.time.DateTimeFieldType.millisOfSecond()Lorg/joda/time/DateTimeFieldType;  -0.9964028776978417
org.joda.time.DateTimeFieldType.secondOfMinute()Lorg/joda/time/DateTimeFieldType;  -0.9967897271268058
org.joda.time.DateTimeFieldType.minuteOfHour()Lorg/joda/time/DateTimeFieldType;  -0.9964601769911504
org.joda.time.DateTimeFieldType.hourOfDay()Lorg/joda/time/DateTimeFieldType;  -0.9965217391304347
org.joda.time.DateTimeFieldType.dayOfMonth()Lorg/joda/time/DateTimeFieldType;  -0.9969992498124531
org.joda.time.DateTimeFieldType.monthOfYear()Lorg/joda/time/DateTimeFieldType;  -0.9972394755003451
org.joda.time.DateTimeFieldType.year()Lorg/joda/time/DateTimeFieldType;  -0.9972565157750343
org.joda.time.field.FieldUtils.safeAdd(II)I  -0.9940915805022157
org.joda.time.field.FieldUtils.safeAdd(JJ)J  -0.9956803455723542
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V  -0.9968076616121309
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V  -0.9965367965367965
org.joda.time.field.PreciseDateTimeField.get(J)I  -0.9968823070927514
org.joda.time.field.PreciseDateTimeField.set(JI)J  -0.9957716701902748
org.joda.time.field.PreciseDateTimeField.getMaximumValue()I  -0.9967506092607636
org.joda.time.field.PreciseDurationField.add(JI)J  -0.9948253557567918
org.joda.time.field.PreciseDurationDateTimeField.set(JI)J  -0.9953216374269006
org.joda.time.field.PreciseDurationDateTimeField.remainder(J)J  -0.989010989010989
org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;  -0.9953271028037384
org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I  -0.996742671009772
org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J  -0.997179125528914
org.joda.time.field.MillisDurationField.add(JI)J  -0.9940828402366864
org.joda.time.field.BaseDateTimeField.add(JI)J  -0.9932432432432432
org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  -0.9701492537313433
org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V  -0.9069767441860465
org.joda.time.DateTimeZone.getID()Ljava/lang/String;  -0.9930434782608696
org.joda.time.DateTimeZone.getOffsetFromLocal(J)I  -0.9944444444444445
org.joda.time.DateTimeZone.hashCode()I  -0.9914346895074947
org.joda.time.DateTimeUtils.getInstantMillis(Lorg/joda/time/ReadableInstant;)J  -0.9933884297520661
org.joda.time.DateTimeUtils.getInstantChronology(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;  -0.9929203539823008
org.joda.time.DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;  -0.998389694041868
org.joda.time.DateTime.<init>(IIIIILorg/joda/time/DateTimeZone;)V  -0.7647058823529411
org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;  -0.9903614457831326
