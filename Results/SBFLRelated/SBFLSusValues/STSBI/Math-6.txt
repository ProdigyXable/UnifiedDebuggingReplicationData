org.apache.commons.math3.optim.PointValuePair.<init>([DD)V  0.24299065420560748
org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V  0.24299065420560748
org.apache.commons.math3.optim.PointValuePair.getPoint()[D  0.325
org.apache.commons.math3.optim.PointValuePair.getPointRef()[D  0.27586206896551724
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V  0.02127659574468085
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V  0.02127659574468085
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D  0.037037037037037035
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V  0.21428571428571427
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z  0.23076923076923078
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.13023255813953488
org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.13333333333333333
org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.3404255319148936
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D  0.16279069767441862
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D  0.16
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D  0.16568047337278108
org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V  0.36363636363636365
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.1414141414141414
org.apache.commons.math3.optim.MaxEval.getMaxEval()I  0.14213197969543148
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V  0.29213483146067415
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;  0.3132530120481928
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.22413793103448276
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.22608695652173913
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.3132530120481928
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.2524271844660194
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D  0.34210526315789475
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D[D)V  0.07692307692307693
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D  0.07692307692307693
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.09090909090909091
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.08333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D  0.07692307692307693
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V  0.07692307692307693
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D)[D  0.07692307692307693
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V  0.07692307692307693
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D  0.08333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.2
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V  0.5
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.5
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;[D)D  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V  0.6956521739130435
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D  0.8
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer$LineSearch;I[D[D)V  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(D)D  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V  0.6956521739130435
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I  0.8
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction;[D)[D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.6666666666666666
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.6956521739130435
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  1.0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.8
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V  0.3333333333333333
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  0.8823529411764706
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V  1.0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.8823529411764706
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.8823529411764706
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.8823529411764706
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  1.0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I  0.8823529411764706
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I  0.8823529411764706
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;[D)D  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$400(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)Z  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V  0.36363636363636365
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V  0.36363636363636365
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.2222222222222222
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.27586206896551724
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V  0.28
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.27586206896551724
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.3076923076923077
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.27586206896551724
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;[D)D  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V  0.36363636363636365
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.build([D)V  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V  0.2
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V  0.4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V  0.6666666666666666
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.access$100(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.8888888888888888
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V  1.0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V  1.0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.6666666666666666
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;  0.5714285714285714
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;DD)V  0.2
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.25
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I  0.2962962962962963
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D  0.07692307692307693
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.07142857142857142
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.020202020202020204
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D  0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.021739130434782608
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.020202020202020204
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D  0.021505376344086023
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.021505376344086023
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D  0.02127659574468085
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.021505376344086023
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.021739130434782608
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;  0.021739130434782608
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.020202020202020204
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D  0.023529411764705882
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;  0.016129032258064516
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V  0.023529411764705882
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D  0.021739130434782608
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.041666666666666664
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.03125
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.045454545454545456
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V  0.03333333333333333
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.022222222222222223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.015625
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.05263157894736842
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V  0.05
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V  0.038461538461538464
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.017241379310344827
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V  0.016129032258064516
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V  0.016129032258064516
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.021505376344086023
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.021505376344086023
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.021052631578947368
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.021052631578947368
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.12173913043478261
org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I  0.04
org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I  0.16
org.apache.commons.math3.optim.BaseOptimizer.getIterations()I  1.0
org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;  0.16666666666666666
org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.12444444444444444
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V  0.15384615384615385
org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.14213197969543148
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.12173913043478261
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.15217391304347827
org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D  0.15300546448087432
org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V  0.11827956989247312
org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D  0.14666666666666667
org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.14864864864864866
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V  0.14285714285714285
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z  0.16666666666666666
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V  0.05555555555555555
org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D  0.05555555555555555
org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D  0.05555555555555555
org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D  0.05555555555555555
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V  0.058823529411764705
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D  0.0625
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D  0.058823529411764705
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.05
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.2
org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.07142857142857142
org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V  0.1111111111111111
org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V  0.1111111111111111
org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V  1.0
org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D  0.125
org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D  0.125
org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D  0.16666666666666666
org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D  0.125
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V  0.05263157894736842
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;  0.05263157894736842
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.05
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.05263157894736842
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.058823529411764705
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.05555555555555555
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D  0.058823529411764705
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D  0.058823529411764705
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D  0.058823529411764705
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D  0.058823529411764705
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.12173913043478261
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V  0.03125
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z  0.045454545454545456
org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V  0.3333333333333333
org.apache.commons.math3.optim.SimpleBounds.getLower()[D  0.3404255319148936
org.apache.commons.math3.optim.SimpleBounds.getUpper()[D  0.3404255319148936
org.apache.commons.math3.optim.SimpleBounds.unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;  0.4666666666666667
org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  0.42105263157894735
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  0.42105263157894735
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  0.42105263157894735
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  0.42105263157894735
org.apache.commons.math3.linear.RealVector.<init>()V  0.02045728038507822
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.0935672514619883
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  0.04292929292929293
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.22058823529411764
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.43243243243243246
org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  0.22058823529411764
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  0.20833333333333334
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.027692307692307693
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.026277372262773723
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.026277372262773723
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.3076923076923077
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.12030075187969924
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.05113636363636364
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  0.03837471783295711
org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V  0.00408997955010225
org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D  0.00847457627118644
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D  0.007407407407407408
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  0.04819277108433735
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  0.04040404040404041
org.apache.commons.math3.linear.ArrayRealVector.toArray()[D  0.005405405405405406
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V  0.0058823529411764705
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  0.07729468599033816
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  0.07729468599033816
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.0125
org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V  0.011299435028248588
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V  0.01
org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  0.011363636363636364
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.009900990099009901
org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D  0.009259259259259259
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.029411764705882353
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.00966183574879227
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.009708737864077669
org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D  0.014492753623188406
org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I  0.00966183574879227
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.009302325581395349
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.22388059701492538
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.20270270270270271
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  0.3409090909090909
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  0.38461538461538464
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.22388059701492538
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  0.35714285714285715
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.023058252427184466
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  0.03469387755102041
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  0.03359683794466403
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  0.05863192182410423
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.04788732394366197
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  0.0449438202247191
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  0.03346456692913386
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  0.03345724907063197
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  0.035416666666666666
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  0.028846153846153848
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  0.0288
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.07692307692307693
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  0.04395604395604396
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  0.03346456692913386
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.2
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.20833333333333334
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.26785714285714285
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.22058823529411764
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.22058823529411764
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.25862068965517243
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.011494252873563218
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V  0.0125
org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;  0.0125
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.030874785591766724
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.028315946348733235
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.4
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.14414414414414414
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.42105263157894735
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.10365853658536585
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.1032258064516129
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  0.42105263157894735
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  0.4
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  0.3333333333333333
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  0.10810810810810811
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  0.25806451612903225
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  0.07729468599033816
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.07881773399014778
org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.009174311926605505
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.07655502392344497
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  0.07441860465116279
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  0.07655502392344497
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  0.07441860465116279
org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V  0.010416666666666666
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  0.010309278350515464
org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V  0.01015228426395939
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  0.01092896174863388
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;  0.011976047904191617
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.011428571428571429
org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D  0.012048192771084338
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  0.010256410256410256
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V  0.010752688172043012
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  0.009852216748768473
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  0.009950248756218905
org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D  0.012048192771084338
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V  0.0125
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.02040816326530612
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZLorg/apache/commons/math3/linear/LUDecomposition$1;)V  0.0125
org.apache.commons.math3.util.MathArrays.copyOf([D)[D  0.017543859649122806
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  0.36363636363636365
org.apache.commons.math3.util.MathArrays.copyOf([DI)[D  0.011904761904761904
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V  0.05105105105105105
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  0.05105105105105105
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  0.05105105105105105
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  0.05105105105105105
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  0.015180265654648957
org.apache.commons.math3.util.Incrementor$1.<init>()V  0.003003003003003003
org.apache.commons.math3.util.Precision.compareTo(DDD)I  0.15625
org.apache.commons.math3.util.Precision.equals(DD)Z  0.011111111111111112
org.apache.commons.math3.util.Precision.equals(DDD)Z  0.03
org.apache.commons.math3.util.Precision.equals(DDI)Z  0.019165727170236752
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.010359869138495093
org.apache.commons.math3.util.FastMath.log(D)D  0.019184652278177457
org.apache.commons.math3.util.FastMath.log(D[D)D  0.0469208211143695
org.apache.commons.math3.util.FastMath.pow(DI)D  0.017857142857142856
org.apache.commons.math3.util.FastMath.polySine(D)D  0.038901601830663615
org.apache.commons.math3.util.FastMath.polyCosine(D)D  0.038901601830663615
org.apache.commons.math3.util.FastMath.sinQ(DD)D  0.043037974683544304
org.apache.commons.math3.util.FastMath.cosQ(DD)D  0.04314720812182741
org.apache.commons.math3.util.FastMath.sin(D)D  0.06938775510204082
org.apache.commons.math3.util.FastMath.cos(D)D  0.08648648648648649
org.apache.commons.math3.util.FastMath.atan(D)D  0.2222222222222222
org.apache.commons.math3.util.FastMath.atan(DDZ)D  0.10869565217391304
org.apache.commons.math3.util.FastMath.abs(J)J  0.01795142555438226
org.apache.commons.math3.util.FastMath.abs(D)D  0.013037180106228875
org.apache.commons.math3.util.FastMath.min(II)I  0.02812939521800281
org.apache.commons.math3.util.FastMath.min(DD)D  0.018867924528301886
org.apache.commons.math3.util.FastMath.max(II)I  0.04289544235924933
org.apache.commons.math3.util.FastMath.max(DD)D  0.125
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.015971606033717833
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  0.053742802303262956
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  0.07046070460704607
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  0.09712230215827339
org.apache.commons.math3.util.Incrementor.<init>()V  0.003278688524590164
org.apache.commons.math3.util.Incrementor.<init>(I)V  0.003003003003003003
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.03189066059225513
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.03482587064676617
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  0.022222222222222223
org.apache.commons.math3.util.Incrementor.getCount()I  0.11290322580645161
org.apache.commons.math3.util.Incrementor.incrementCount()V  0.034912718204488775
org.apache.commons.math3.util.Incrementor.resetCount()V  0.03361344537815126
org.apache.commons.math3.random.MersenneTwister.<init>()V  0.32653061224489793
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V  0.1
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V  0.14285714285714285
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V  0.14414414414414414
org.apache.commons.math3.random.MersenneTwister.next(I)I  0.1509433962264151
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V  0.013082583810302535
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  0.0380952380952381
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  0.1509433962264151
org.apache.commons.math3.random.BitsStreamGenerator.clear()V  0.013082583810302535
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V  0.004545454545454545
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V  0.004310344827586207
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getEvaluations()I  0.020833333333333332
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D  0.0045662100456621
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D  0.0045662100456621
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D  0.005649717514124294
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D  0.004830917874396135
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D  0.005025125628140704
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D  0.0048543689320388345
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D  0.004545454545454545
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V  0.004464285714285714
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D  0.004484304932735426
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V  0.005780346820809248
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V  0.004484304932735426
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(DD)V  0.004016064257028112
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(DDD)V  0.005649717514124294
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V  0.004761904761904762
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V  0.03125
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V  0.007633587786259542
org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D  0.023255813953488372
org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D  0.008771929824561403
org.apache.commons.math3.analysis.function.Sinc.value(D)D  0.07692307692307693
