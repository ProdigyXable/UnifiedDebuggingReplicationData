org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  0.058823529411764705
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  0.058823529411764705
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  0.058823529411764705
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  0.058823529411764705
org.apache.commons.math3.linear.RealVector.<init>()V  0.0016611295681063123
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.008695652173913044
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  0.005376344086021506
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.043478260869565216
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.058823529411764705
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.0025252525252525255
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.002331002331002331
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.002325581395348837
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.03225806451612903
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.009345794392523364
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.007407407407407408
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  0.0048543689320388345
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  0.004032258064516129
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  0.0033222591362126247
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  0.006097560975609756
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  0.006097560975609756
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.025
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.021739130434782608
org.apache.commons.math3.linear.EigenDecomposition.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;Z)Z  0.025
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  0.041666666666666664
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  0.05
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.025
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  0.023255813953488372
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.0018083182640144665
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  0.0035211267605633804
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  0.0036496350364963502
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  0.009615384615384616
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.005128205128205128
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  0.005128205128205128
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  0.0036231884057971015
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  0.0035971223021582736
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  0.0036363636363636364
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  0.0027624309392265192
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  0.0027548209366391185
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.006060606060606061
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  0.0049504950495049506
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  0.0036231884057971015
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.020833333333333332
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.022222222222222223
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.021739130434782608
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.024390243902439025
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.024390243902439025
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.020833333333333332
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.0030864197530864196
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.002369668246445498
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.05
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.011363636363636364
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.05555555555555555
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.047619047619047616
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.009174311926605505
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  0.058823529411764705
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  0.05
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  0.04
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  0.02
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  0.02564102564102564
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  0.006097560975609756
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.006756756756756757
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.006024096385542169
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  0.0058823529411764705
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  0.006024096385542169
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  0.0058823529411764705
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.023809523809523808
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.getLowerBound()[D  0.02702702702702703
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.getUpperBound()[D  0.02702702702702703
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;  1000000.0
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D[D[D)Lorg/apache/commons/math3/optimization/PointValuePair;  0.1
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)V  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.encode([D)[D  0.3333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repairAndDecode([D)[D  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.decode([D)[D  0.3333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value([D)D  0.3333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repair([D)[D  0.3333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.3333333333333333
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>()V  0.5
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I)V  0.5
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;Z)V  0.04
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.04
org.apache.commons.math3.optimization.direct.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;  1000000.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.checkParameters()V  0.2
org.apache.commons.math3.optimization.direct.CMAESOptimizer.initializeCMA([D)V  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  1.0
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateBD(D)V  0.06666666666666667
org.apache.commons.math3.optimization.direct.CMAESOptimizer.push([DD)V  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sortedIndices([D)[I  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.06666666666666667
org.apache.commons.math3.optimization.direct.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.06666666666666667
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.06666666666666667
org.apache.commons.math3.optimization.direct.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max([D)D  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min([D)D  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.inverse([I)[I  0.06666666666666667
org.apache.commons.math3.optimization.direct.CMAESOptimizer.reverse([I)[I  0.06666666666666667
org.apache.commons.math3.optimization.direct.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.access$100(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)[[D  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)Z  0.0625
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  0.011627906976744186
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getMaxEvaluations()I  0.034482758620689655
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;  0.016666666666666666
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue([D)D  0.013513513513513514
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;  0.014705882352941176
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;  0.012345679012345678
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;  0.013513513513513514
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getStartPoint()[D  0.012345679012345678
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I  0.0625
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.access$000(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I  0.0625
org.apache.commons.math3.optimization.PointValuePair.<init>([DD)V  0.009615384615384616
org.apache.commons.math3.optimization.PointValuePair.<init>([DDZ)V  0.009615384615384616
org.apache.commons.math3.optimization.PointValuePair.getPoint()[D  0.01282051282051282
org.apache.commons.math3.optimization.SimpleValueChecker.<init>()V  0.04
org.apache.commons.math3.optimization.SimpleValueChecker.converged(ILorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)Z  0.018518518518518517
org.apache.commons.math3.optimization.AbstractConvergenceChecker.<init>()V  0.03571428571428571
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getRelativeThreshold()D  0.011904761904761904
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.012048192771084338
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  0.041666666666666664
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(DD)V  0.0036900369003690036
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  0.0036900369003690036
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  0.0036900369003690036
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  0.0036900369003690036
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  0.0010822510822510823
org.apache.commons.math3.util.Incrementor$1.<init>()V  0.001564945226917058
org.apache.commons.math3.util.Precision.compareTo(DDD)I  0.020833333333333332
org.apache.commons.math3.util.Precision.equals(DDD)Z  0.002457002457002457
org.apache.commons.math3.util.Precision.equals(DDI)Z  0.0013297872340425532
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.0006385696040868455
org.apache.commons.math3.util.FastMath.log(D)D  0.001394700139470014
org.apache.commons.math3.util.FastMath.log(D[D)D  0.0034965034965034965
org.apache.commons.math3.util.FastMath.polySine(D)D  0.002840909090909091
org.apache.commons.math3.util.FastMath.polyCosine(D)D  0.002840909090909091
org.apache.commons.math3.util.FastMath.sinQ(DD)D  0.0031645569620253164
org.apache.commons.math3.util.FastMath.cosQ(DD)D  0.0031746031746031746
org.apache.commons.math3.util.FastMath.sin(D)D  0.005291005291005291
org.apache.commons.math3.util.FastMath.cos(D)D  0.007246376811594203
org.apache.commons.math3.util.FastMath.abs(J)J  0.0012315270935960591
org.apache.commons.math3.util.FastMath.abs(D)D  0.0006246096189881324
org.apache.commons.math3.util.FastMath.min(II)I  0.0018281535648994515
org.apache.commons.math3.util.FastMath.max(DD)D  0.0029585798816568047
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.001282051282051282
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  0.003484320557491289
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  0.005813953488372093
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  0.007692307692307693
org.apache.commons.math3.util.Incrementor.<init>()V  0.0017152658662092624
org.apache.commons.math3.util.Incrementor.<init>(I)V  0.001564945226917058
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.0015625
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.0017605633802816902
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  0.027777777777777776
org.apache.commons.math3.util.Incrementor.incrementCount()V  0.0017123287671232876
org.apache.commons.math3.util.Incrementor.resetCount()V  0.0016556291390728477
org.apache.commons.math3.random.MersenneTwister.next(I)I  0.012048192771084338
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  0.0022522522522522522
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  0.014084507042253521
