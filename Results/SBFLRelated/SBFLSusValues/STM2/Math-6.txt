org.apache.commons.math3.optim.PointValuePair.<init>([DD)V  0.0052072902062888045
org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V  0.0052072902062888045
org.apache.commons.math3.optim.PointValuePair.getPoint()[D  0.005235602094240838
org.apache.commons.math3.optim.PointValuePair.getPointRef()[D  0.0016158351848111492
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V  0.0003977724741447892
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V  0.0003977724741447892
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D  0.00020149103364900262
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V  0.0018137847642079807
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z  0.0018148820326678765
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0054934275063763
org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.0054988216810683424
org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.005528134254689042
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D  0.00554016620498615
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D  0.00553687957286929
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D  0.0055434567412393585
org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V  0.005531410509679968
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.005511811023622047
org.apache.commons.math3.optim.MaxEval.getMaxEval()I  0.005512896239417208
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V  0.0052261306532663315
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;  0.0052324411350372305
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.005197920831667333
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.005198960207958408
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.0052324411350372305
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.005211465223491682
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D  0.005239822652156389
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D[D)V  0.00020206102242877348
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D  0.00020206102242877348
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020214271275520516
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.0002021018593371059
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D  0.00020206102242877348
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V  0.00020206102242877348
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer;[D)[D  0.00020206102242877348
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V  0.00020206102242877348
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D  0.0002021018593371059
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020238818053025704
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V  0.0002025111381125962
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.0002025111381125962
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;[D)D  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V  0.0032460945425035505
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D  0.0032480714575720666
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer$LineSearch;I[D[D)V  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(D)D  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V  0.0032460945425035505
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I  0.0032480714575720666
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.setValueRange(D)V  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction;[D)[D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0032454361054766734
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.0032460945425035505
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.003250711093051605
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.0032480714575720666
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V  0.00020247013565499088
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V  0.003045685279187817
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V  0.003045685279187817
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003045685279187817
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;  0.003045685279187817
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003045685279187817
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I  0.003045685279187817
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I  0.003045685279187817
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;[D)D  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$400(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)Z  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V  0.0008095527221210282
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V  0.0008095527221210282
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.0008084074373484236
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0016158351848111492
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V  0.0014144271570014145
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.0016158351848111492
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;  0.0016168148746968471
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.0016158351848111492
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;[D)D  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V  0.0016181229773462784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.build([D)V  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V  0.0008080808080808081
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V  0.0008097165991902834
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V  0.0008103727714748784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.access$100(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I  0.003249390739236393
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V  0.0008107012565869477
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V  0.0008107012565869477
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V  0.0008103727714748784
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;  0.0008102086287218959
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer;DD)V  0.00020238818053025704
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.00020242914979757084
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I  0.0016164881794301878
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D  0.00020206102242877348
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.00020202020202020202
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00039737730975561295
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D  0.0003980891719745223
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.0003979307600477517
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00039737730975561295
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D  0.00039785160135269546
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.00039785160135269546
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D  0.0003977724741447892
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.00039785160135269546
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.0003979307600477517
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;  0.0003979307600477517
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00039737730975561295
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.0003980891719745223
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D  0.0003984857541342897
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;  0.00020008003201280514
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V  0.0003984857541342897
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D  0.0003979307600477517
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020161290322580645
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020128824476650564
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.0002016942315449778
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V  0.0002013693113169553
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.0002007628990162618
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.0002
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.00020181634712411706
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V  0.00020177562550443906
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V  0.00020153164046755341
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.00020024028834601522
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V  0.00020008003201280514
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V  0.00020008003201280514
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.00039785160135269546
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;  0.00039785160135269546
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.00039769337840524953
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.00039769337840524953
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.005477308294209703
org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I  0.00020157226365652087
org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I  0.0016090104585679806
org.apache.commons.math3.optim.BaseOptimizer.getIterations()I  0.005702647657841141
org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;  0.005544554455445544
org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;  0.005482670843939691
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V  0.005529225908372828
org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.005512896239417208
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.005477308294209703
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.005527043031977891
org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D  0.005528134254689042
org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V  0.002196047115192653
org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D  0.0022039671408535366
org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D  0.0022044088176352704
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V  0.00020230629172567267
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z  0.00020234722784297855
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V  0.00020185708518368994
org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D  0.00020185708518368994
org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D  0.00020185708518368994
org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D  0.00020185708518368994
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V  0.0002018978396931153
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D  0.00020193861066235866
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D  0.0002018978396931153
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020177562550443906
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.00020238818053025704
org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.00020202020202020202
org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V  0.00020222446916076846
org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V  0.00020222446916076846
org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V  0.00020255215718047398
org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D  0.0002022653721682848
org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D  0.0002022653721682848
org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D  0.00020234722784297855
org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D  0.0002022653721682848
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V  0.00020181634712411706
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;  0.00020181634712411706
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.00020177562550443906
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;  0.00020181634712411706
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;  0.0002018978396931153
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.00020185708518368994
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D  0.0002018978396931153
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D  0.0002018978396931153
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D  0.0002018978396931153
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D  0.0002018978396931153
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.005477308294209703
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V  0.00020128824476650564
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z  0.0002016942315449778
org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V  0.003229713362939039
org.apache.commons.math3.optim.SimpleBounds.getLower()[D  0.0032303654350898446
org.apache.commons.math3.optim.SimpleBounds.getUpper()[D  0.0032303654350898446
org.apache.commons.math3.optim.SimpleBounds.unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;  0.002834008097165992
org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V  0.003236245954692557
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V  0.003236245954692557
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V  0.003236245954692557
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D  0.003236245954692557
org.apache.commons.math3.linear.RealVector.<init>()V  0.002964254577157803
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.0031514674020090604
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;  0.0032075471698113206
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.0030144694533762056
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;  0.0032369006676107627
org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  0.0030144694533762056
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  0.0030120481927710845
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.0032420749279538905
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0032217648111687847
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0032217648111687847
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.003227107704719645
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.0031752331811867435
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V  0.0034259611724400457
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V  0.0031793529081728072
org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V  0.0003687995574405311
org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D  0.00038684719535783365
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D  0.0003843197540353574
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D  0.0030546009927453228
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I  0.003017729158807997
org.apache.commons.math3.linear.ArrayRealVector.toArray()[D  0.00019527436047646945
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V  0.0003792188092529389
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V  0.0031292783101897126
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V  0.0031292783101897126
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.00019936204146730463
org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V  0.0003913128546272745
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V  0.00038955979742890534
org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D  0.0003913894324853229
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.0001985308715505261
org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D  0.00019825535289452815
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.00020120724346076458
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.00038902937171756465
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.0003891050583657588
org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D  0.0001998001998001998
org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I  0.00038902937171756465
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.0003884249368809478
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.003015075376884422
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  0.003010839020473705
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;  0.0030290791599353797
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;  0.0030321406913280777
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.003015075376884422
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V  0.0030223655047350393
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.0033193570929419985
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V  0.0031516499814608825
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V  0.003142329020332717
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V  0.003455557688615857
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.003232553717436775
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D  0.003040668947168377
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V  0.003141167775314117
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D  0.0033088235294117647
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V  0.0031575037147102527
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I  0.003257328990228013
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I  0.0032567396417586395
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.003128666405944466
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D  0.0030360531309297912
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V  0.003141167775314117
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.0030102347983142685
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  0.0030120481927710845
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  0.0030217566478646252
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  0.0030144694533762056
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  0.0030144694533762056
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  0.0030205396697543293
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  0.00019908421262193908
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V  0.00019936204146730463
org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;  0.00019936204146730463
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  0.0032816773017319964
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.003410518757853168
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.003234937323089365
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.0031891568666533787
org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.003236245954692557
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;  0.0033543804262036307
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.0031614305473226635
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D  0.003236245954692557
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;  0.003234937323089365
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V  0.0030284675953967293
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D  0.0031658092599920855
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D  0.00322061191626409
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;  0.0031292783101897126
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  0.0031317283225680173
org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.00038819875776397513
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D  0.0031280547409579668
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V  0.003124389767623511
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V  0.0031280547409579668
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D  0.003124389767623511
org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V  0.0003901677721420211
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  0.000390015600624025
org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V  0.0003897875657766517
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  0.00039085401602501464
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;  0.00039207998431680063
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  0.00039146604032100216
org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D  0.000392156862745098
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  0.0003899395593682979
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V  0.000390625
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  0.0003893322951138797
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  0.00038948393378773126
org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D  0.000392156862745098
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V  0.00019936204146730463
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;  0.00020060180541624874
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZLorg/apache/commons/math3/linear/LUDecomposition$1;)V  0.00019936204146730463
org.apache.commons.math3.util.MathArrays.copyOf([D)[D  0.0002002803925495694
org.apache.commons.math3.util.MathArrays.copyOf([II)[I  0.0032323232323232323
org.apache.commons.math3.util.MathArrays.copyOf([DI)[D  0.00019920318725099602
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V  0.0032461332824135956
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I  0.0032461332824135956
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D  0.0032461332824135956
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D  0.0032461332824135956
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D  0.0026845637583892616
org.apache.commons.math3.util.Incrementor$1.<init>()V  0.00035714285714285714
org.apache.commons.math3.util.Precision.compareTo(DDD)I  0.002997601918465228
org.apache.commons.math3.util.Precision.equals(DD)Z  0.00039108330074305825
org.apache.commons.math3.util.Precision.equals(DDD)Z  0.0027736686390532543
org.apache.commons.math3.util.Precision.equals(DDI)Z  0.0029355897081678466
org.apache.commons.math3.util.FastMath.sqrt(D)D  0.0028215028215028215
org.apache.commons.math3.util.FastMath.log(D)D  0.0027874564459930314
org.apache.commons.math3.util.FastMath.log(D[D)D  0.0030493615399275775
org.apache.commons.math3.util.FastMath.pow(DI)D  0.00039635354736424893
org.apache.commons.math3.util.FastMath.polySine(D)D  0.003182924545965175
org.apache.commons.math3.util.FastMath.polyCosine(D)D  0.003182924545965175
org.apache.commons.math3.util.FastMath.sinQ(DD)D  0.003208152481600302
org.apache.commons.math3.util.FastMath.cosQ(DD)D  0.0032087580218950547
org.apache.commons.math3.util.FastMath.sin(D)D  0.003301611963488056
org.apache.commons.math3.util.FastMath.cos(D)D  0.003142801021410332
org.apache.commons.math3.util.FastMath.atan(D)D  0.0016135538523598225
org.apache.commons.math3.util.FastMath.atan(DDZ)D  0.0016012810248198558
org.apache.commons.math3.util.FastMath.abs(J)J  0.002905486241668091
org.apache.commons.math3.util.FastMath.abs(D)D  0.003882099209202013
org.apache.commons.math3.util.FastMath.min(II)I  0.0035656979853806382
org.apache.commons.math3.util.FastMath.min(DD)D  0.00020044097013429546
org.apache.commons.math3.util.FastMath.max(II)I  0.0030308770600492516
org.apache.commons.math3.util.FastMath.max(DD)D  0.004989835520236555
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.0029855697462265714
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V  0.00518230612622617
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;  0.004947668886774501
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;  0.005230530802014723
org.apache.commons.math3.util.Incrementor.<init>()V  0.00036075036075036075
org.apache.commons.math3.util.Incrementor.<init>(I)V  0.00035714285714285714
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.004861111111111111
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  0.004924375659514597
org.apache.commons.math3.util.Incrementor.getMaximalCount()I  0.0002007628990162618
org.apache.commons.math3.util.Incrementor.getCount()I  0.005458089668615985
org.apache.commons.math3.util.Incrementor.incrementCount()V  0.0049261083743842365
org.apache.commons.math3.util.Incrementor.resetCount()V  0.004899387576552931
org.apache.commons.math3.random.MersenneTwister.<init>()V  0.003229061553985873
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V  0.0031583103039873666
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V  0.0031885213232363493
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V  0.0031891568666533787
org.apache.commons.math3.random.MersenneTwister.next(I)I  0.0031923383878691143
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V  0.0026105400554739763
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D  0.0030041306796845663
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D  0.0031923383878691143
org.apache.commons.math3.random.BitsStreamGenerator.clear()V  0.0026105400554739763
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V  0.0001939487975174554
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V  0.0001934984520123839
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getEvaluations()I  0.00020064205457463884
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D  0.00019398642095053346
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D  0.00019398642095053346
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D  0.00019557989438685703
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D  0.00019443904335990667
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D  0.00019474196689386563
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D  0.00019447685725398678
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D  0.0001939487975174554
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V  0.0001937984496124031
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D  0.0001938360147315371
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V  0.00019573302016050108
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V  0.0001938360147315371
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(DD)V  0.00019286403085824494
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(DDD)V  0.00019557989438685703
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V  0.000194325689856199
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V  0.00020128824476650564
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V  0.00019735543714229328
org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D  0.0002008435428800964
org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D  0.00019801980198019803
org.apache.commons.math3.analysis.function.Sinc.value(D)D  0.00020206102242877348
