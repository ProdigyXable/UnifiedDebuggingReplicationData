org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -2.94
org.apache.commons.math3.optim.MaxEval.<init>(I)V  -2.7800000000000002
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -1.83
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -1.83
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  -1.7800000000000002
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  -1.79
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -1.83
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  -1.79
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  -1.79
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  -1.3199999999999998
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  -1.5099999999999998
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  -1.79
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  -1.79
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  -1.79
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  -3.09
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  -3.09
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  -2.64
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  -3.09
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  -4.12
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  -7.02
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -2.18
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -2.14
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  -2.08
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  -2.2199999999999998
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;  -1.3199999999999998
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V  -1.6099999999999999
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  -3.1400000000000006
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  -3.13
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  -3.2200000000000006
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  -8.64
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  -1.0
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  -1.1600000000000001
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  -1.1600000000000001
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;  -1.1600000000000001
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;  -1.1600000000000001
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  -1.6
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D  -1.6
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V  -1.1800000000000002
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D  -1.1600000000000001
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D  -1.17
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  -1.1600000000000001
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  -1.19
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V  -1.17
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  -1.13
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  -1.1600000000000001
org.apache.commons.math3.util.FastMath.min(II)I  -7.600000000000001
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  -2.01
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  -9.52
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  -1.65
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  -1.42
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  -1.48
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  -1.0899999999999999
