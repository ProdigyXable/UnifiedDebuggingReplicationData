=== Number of PatchCategory.CleanFixFull = 0 ===
=== Number of PatchCategory.CleanFixPartial = 11 ===
	 org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D#721 = 1
	 org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D#503 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextExponential(D)D#468 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#391 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#400 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#402 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#404 = 2
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#411 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#415 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#424 = 1
=== Number of PatchCategory.NoisyFixFull = 0 ===
=== Number of PatchCategory.NoisyFixPartial = 3 ===
	 org.apache.commons.math.linear.ArrayRealVector:getNorm()D#700 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#404 = 1
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V#582 = 1
=== Number of PatchCategory.NoneFix = 1 ===
	 org.apache.commons.math.random.AbstractRandomGenerator:nextGaussian()D#255 = 1
=== Number of PatchCategory.NegFix = 8 ===
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#357 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#399 = 1
	 org.apache.commons.math.random.RandomDataImpl:nextPoisson(D)J#417 = 2
	 org.apache.commons.math.special.Gamma:regularizedGammaQ(DDDI)D#247 = 1
	 org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V#142 = 1
	 org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquareTest([D[J)D#116 = 1
	 org.apache.commons.math.stat.inference.ChiSquareTestImpl:setDistribution(Lorg/apache/commons/math/distribution/ChiSquaredDistribution;)V#424 = 1
