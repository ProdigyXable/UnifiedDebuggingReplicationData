org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z  -0.9736842105263158
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z  -0.9748427672955975
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  -0.9934959349593496
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -0.9938271604938271
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  -0.9938366718027735
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.974025974025974
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V  -0.9751552795031055
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.974025974025974
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  -0.9948519948519948
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V  -0.9753086419753086
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9748427672955975
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;  -0.975
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D  -0.9741935483870968
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D  -0.9741935483870968
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V  -0.9738562091503268
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V  -0.9927140255009107
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z  -0.9848484848484849
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V  -0.9775280898876404
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9775280898876404
org.apache.commons.math3.linear.DiagonalMatrix.getData()[[D  -0.9545454545454546
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D  -0.9775280898876404
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I  -0.9775280898876404
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I  -0.9775280898876404
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  -0.9560439560439561
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;  -0.9545454545454546
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9545454545454546
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.setUp()V  -0.9545454545454546
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V  -0.9545454545454546
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.checkParameters()V  -0.9545454545454546
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V  -0.9560439560439561
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;  -0.84
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;  -0.9545454545454546
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.setUp()V  -0.9545454545454546
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;  -0.9545454545454546
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>()V  -0.9090909090909091
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DDDDD)V  -0.9365079365079365
org.apache.commons.math3.optimization.Target.<init>([D)V  -0.9545454545454546
org.apache.commons.math3.optimization.Target.getTarget()[D  -0.9545454545454546
org.apache.commons.math3.optimization.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V  -0.42857142857142855
org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit([D)[D  -0.42857142857142855
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.<init>(DDD)V  -0.8518518518518519
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getWeight()D  -0.84
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getY()D  -0.8461538461538461
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  -0.84
org.apache.commons.math3.optimization.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V  -0.8571428571428571
org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(DDD)V  -0.8461538461538461
org.apache.commons.math3.optimization.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  -0.8181818181818182
org.apache.commons.math3.optimization.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  -0.84
org.apache.commons.math3.optimization.InitialGuess.<init>([D)V  -0.976878612716763
org.apache.commons.math3.optimization.InitialGuess.getInitialGuess()[D  -0.9767441860465116
org.apache.commons.math3.optimization.Weight.<init>([D)V  -0.9545454545454546
org.apache.commons.math3.optimization.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  -0.9545454545454546
org.apache.commons.math3.util.Incrementor$1.<init>()V  -0.9939485627836612
org.apache.commons.math3.util.FastMath.sqrt(D)D  -0.997689196995956
org.apache.commons.math3.util.FastMath.abs(D)D  -0.9978540772532188
org.apache.commons.math3.util.FastMath.max(DD)D  -0.9924953095684803
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  -0.99609375
org.apache.commons.math3.util.Incrementor.<init>()V  -0.9933884297520661
org.apache.commons.math3.util.Incrementor.<init>(I)V  -0.9939485627836612
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  -0.9953757225433526
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V  -0.9949109414758269
org.apache.commons.math3.util.Incrementor.resetCount()V  -0.9951397326852977
org.apache.commons.math3.analysis.FunctionUtils$18.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)V  -0.9545454545454546
org.apache.commons.math3.analysis.FunctionUtils$19.<init>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)V  -0.9545454545454546
org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableMultivariateVectorFunction(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;  -0.9545454545454546
org.apache.commons.math3.analysis.FunctionUtils.toMultivariateDifferentiableVectorFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;  -0.9545454545454546
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  -0.9487179487179487
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  -0.9272727272727272
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  -0.9344262295081968
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  -0.8181818181818182
