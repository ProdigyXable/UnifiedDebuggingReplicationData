org.apache.commons.math.linear.RealVector$Entry.<init>()V  0.2857142857142857
org.apache.commons.math.linear.ArrayRealVector.<init>([D)V  0.016
org.apache.commons.math.linear.ArrayRealVector.getNorm()D  0.14285714285714285
org.apache.commons.math.linear.ArrayRealVector.getL1Norm()D  1.0
org.apache.commons.math.linear.ArrayRealVector.getLInfNorm()D  1.0
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry.<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V  0.6666666666666666
org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry.getValue()D  0.6666666666666666
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V  0.6666666666666666
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()Z  0.6666666666666666
org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator.next()Lorg/apache/commons/math/linear/RealVector$Entry;  0.6666666666666666
org.apache.commons.math.linear.OpenMapRealVector.<init>([D)V  0.25
org.apache.commons.math.linear.OpenMapRealVector.<init>([DD)V  0.25
org.apache.commons.math.linear.OpenMapRealVector.isDefaultValue(D)Z  0.25
org.apache.commons.math.linear.OpenMapRealVector.getLInfNorm()D  1.0
org.apache.commons.math.linear.OpenMapRealVector.sparseIterator()Ljava/util/Iterator;  0.6666666666666666
org.apache.commons.math.linear.OpenMapRealVector.access$000(Lorg/apache/commons/math/linear/OpenMapRealVector;)Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;  0.6666666666666666
org.apache.commons.math.linear.AbstractRealVector.<init>()V  0.02197802197802198
org.apache.commons.math.linear.AbstractRealVector.getNorm()D  1.0
org.apache.commons.math.linear.AbstractRealVector.getL1Norm()D  1.0
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V  0.11764705882352941
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.hasNext()Z  0.125
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.value()D  0.125
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.advance()V  0.125
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V  0.11764705882352941
org.apache.commons.math.util.OpenIntToDoubleHashMap.<init>(D)V  0.05714285714285714
org.apache.commons.math.util.OpenIntToDoubleHashMap.<init>(ID)V  0.038461538461538464
org.apache.commons.math.util.OpenIntToDoubleHashMap.computeCapacity(I)I  0.04
org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;  0.11764705882352941
org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(I)I  0.04
org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex([I[BII)I  0.04
org.apache.commons.math.util.OpenIntToDoubleHashMap.put(ID)D  0.04
org.apache.commons.math.util.OpenIntToDoubleHashMap.shouldGrowTable()Z  0.04
org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(I)I  0.038461538461538464
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)I  0.11764705882352941
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$300(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[D  0.125
org.apache.commons.math.util.OpenIntToDoubleHashMap.access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B  0.11764705882352941
