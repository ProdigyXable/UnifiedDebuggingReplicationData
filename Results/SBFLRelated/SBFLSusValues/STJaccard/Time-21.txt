org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V  0.004140786749482402
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;  0.06666666666666667
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V  0.05555555555555555
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(J)Ljava/lang/String;  0.1
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I  0.010638297872340425
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J  0.010752688172043012
org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.010309278350515464
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;  0.06666666666666667
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V  0.045454545454545456
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(J)Ljava/lang/String;  0.1
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I  0.010638297872340425
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J  0.010752688172043012
org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.05555555555555555
org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;  0.05555555555555555
org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.05555555555555555
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;  0.06666666666666667
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V  0.05263157894736842
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J  0.010101010101010102
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String;  0.08333333333333333
org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I  0.0017985611510791368
org.joda.time.tz.DefaultNameProvider.getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.0625
org.joda.time.tz.DefaultNameProvider.getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;  0.08333333333333333
org.joda.time.tz.DefaultNameProvider.getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;  0.16666666666666666
org.joda.time.tz.DefaultNameProvider.createCache()Ljava/util/HashMap;  0.1
org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;  0.047619047619047616
org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V  0.047619047619047616
org.joda.time.tz.CachedDateTimeZone.getNameKey(J)Ljava/lang/String;  0.06896551724137931
org.joda.time.tz.CachedDateTimeZone.getOffset(J)I  0.0015710919088766694
org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.006802721088435374
org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;  0.007246376811594203
org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V  0.006802721088435374
org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String;  0.06896551724137931
org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I  0.006622516556291391
org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;  0.06666666666666667
org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V  0.05263157894736842
org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J  0.010869565217391304
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J  0.010101010101010102
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J  0.0018214936247723133
org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J  0.0018214936247723133
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.05
org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.05555555555555555
org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J  0.058823529411764705
org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;  0.0009624639076034649
org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I  0.000784313725490196
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I  0.0010224948875255625
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I  0.001226993865030675
org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J  0.0016233766233766235
org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J  0.001201923076923077
org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;  0.001160092807424594
org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;  0.0013568521031207597
org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;  0.0006353240152477764
org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;  0.0006257822277847309
org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;  0.0006506180871828237
org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I  0.000774593338497289
org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I  0.0008952551477170994
org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I  0.0012453300124533001
org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J  0.0008110300081103001
org.joda.time.chrono.BasicGJChronology.setYear(JI)J  0.00234192037470726
org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z  0.0006770480704129993
org.joda.time.chrono.GregorianChronology.getMinYear()I  0.0007479431563201197
org.joda.time.chrono.GregorianChronology.getMaxYear()I  0.0007473841554559044
org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J  0.0007485029940119761
org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J  0.0007485029940119761
org.joda.time.chrono.BasicYearDateTimeField.get(J)I  0.0007716049382716049
org.joda.time.chrono.BasicYearDateTimeField.add(JI)J  0.001692047377326565
org.joda.time.chrono.BasicYearDateTimeField.set(JI)J  0.001176470588235294
org.joda.time.chrono.BasicChronology.getYearMillis(I)J  0.0006662225183211193
org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J  0.0007674597083653108
org.joda.time.chrono.BasicChronology.getYear(J)I  0.0007132667617689016
org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I  0.000819672131147541
org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I  0.001201923076923077
org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I  0.00078125
org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I  0.0010626992561105207
org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I  0.001524390243902439
org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I  0.0011037527593818985
org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;  0.0006662225183211193
org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I  0.0015723270440251573
org.joda.time.field.FieldUtils.safeAdd(II)I  0.0014858841010401188
org.joda.time.field.FieldUtils.safeAdd(JJ)J  0.0010845986984815619
org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V  0.0008012820512820513
org.joda.time.field.PreciseDateTimeField.get(J)I  0.000782472613458529
org.joda.time.field.PreciseDateTimeField.set(JI)J  0.0010626992561105207
org.joda.time.field.PreciseDateTimeField.getMaximumValue()I  0.0008156606851549756
org.joda.time.field.PreciseDurationField.add(JI)J  0.0013003901170351106
org.joda.time.field.PreciseDurationDateTimeField.set(JI)J  0.001176470588235294
org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;  0.0011750881316098707
org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I  0.0008176614881439084
org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J  0.0007077140835102619
org.joda.time.field.MillisDurationField.add(JI)J  0.001488095238095238
org.joda.time.field.BaseDateTimeField.add(JI)J  0.0017006802721088435
org.joda.time.DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;  0.0006261740763932373
org.joda.time.DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V  0.0006882312456985547
org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;  0.015503875968992248
org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;  0.04878048780487805
org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V  0.025
org.joda.time.DateTimeZone.getID()Ljava/lang/String;  0.0018450184501845018
org.joda.time.DateTimeZone.getShortName(JLjava/util/Locale;)Ljava/lang/String;  0.3333333333333333
org.joda.time.DateTimeZone.getName(JLjava/util/Locale;)Ljava/lang/String;  0.2
org.joda.time.DateTimeUtils.getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;  0.07692307692307693
