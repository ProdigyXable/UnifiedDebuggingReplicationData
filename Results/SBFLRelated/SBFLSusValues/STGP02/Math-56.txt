org.apache.commons.math.util.MultidimensionalCounter.<init>([I)V  101.50897394599124
org.apache.commons.math.util.MultidimensionalCounter.iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator;  100.50897394599124
org.apache.commons.math.util.MultidimensionalCounter.getDimension()I  100.50897394599124
org.apache.commons.math.util.MultidimensionalCounter.getCounts(I)[I  100.50897394599124
org.apache.commons.math.util.MultidimensionalCounter.getCount([I)I  100.92318750836434
org.apache.commons.math.util.MultidimensionalCounter.getSize()I  99.50897394599124
org.apache.commons.math.util.MultidimensionalCounter.access$000(Lorg/apache/commons/math/util/MultidimensionalCounter;)I  100.50897394599124
org.apache.commons.math.util.MultidimensionalCounter.access$100(Lorg/apache/commons/math/util/MultidimensionalCounter;)I  100.50897394599124
org.apache.commons.math.util.MultidimensionalCounter.access$200(Lorg/apache/commons/math/util/MultidimensionalCounter;)[I  99.50897394599124
org.apache.commons.math.util.MultidimensionalCounter$Iterator.<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V  100.50897394599124
org.apache.commons.math.util.MultidimensionalCounter$Iterator.hasNext()Z  99.50897394599124
org.apache.commons.math.util.MultidimensionalCounter$Iterator.next()Ljava/lang/Integer;  99.50897394599124
org.apache.commons.math.util.MultidimensionalCounter$Iterator.getCount(I)I  100.50897394599124
org.apache.commons.math.util.FastMath.min(II)I  118.1369099561884
org.apache.commons.math.util.MathUtils.copyOf([I)[I  101.74504192349103
org.apache.commons.math.util.MathUtils.copyOf([II)[I  104.09154964094708
