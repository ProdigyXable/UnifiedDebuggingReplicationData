org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V CleanFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V CleanFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D CleanFix
org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V NoisyFix
org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I NoisyFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D NoisyFix
org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V NoneFix
org.apache.commons.math.linear.OpenMapRealVector:getDimension()I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$400(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[B NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$1;)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I NoneFix
org.apache.commons.math.util.FastMath:ceil(D)D NoneFix
org.apache.commons.math.linear.AbstractRealVector:<init>()V NoneFix
org.apache.commons.math.util.FastMath:floor(D)D NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$100(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$200(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[I NoneFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:access$300(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)[D NoneFix
org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; NegFix
org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; NegFix
org.apache.commons.math.util.FastMath:abs(D)D NegFix
