org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.5024390243902439
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.5026455026455027
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.5053191489361702
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.5053191489361702
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.5056179775280899
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.5055555555555555
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.5053191489361702
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.5055555555555555
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.5055555555555555
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.5116279069767442
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.5080645161290323
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.5055555555555555
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.5055555555555555
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.5055555555555555
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.5022727272727273
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.5022727272727273
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.5028571428571429
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.5022727272727273
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.5015479876160991
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.5008156606851549
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.5007739938080495
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.500772797527048
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.5042016806722689
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.5037593984962406
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.5116279069767442
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V  0.5069444444444444
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.5022222222222222
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.5022321428571429
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.5021459227467812
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.5006451612903225
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.5007849293563579
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.5185185185185185
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  0.5185185185185185
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;  0.5185185185185185
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;  0.5185185185185185
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.5555555555555556
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D  0.5555555555555556
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V  0.5172413793103449
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D  0.5185185185185185
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D  0.5178571428571429
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.5185185185185185
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.5166666666666667
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V  0.5178571428571429
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.5208333333333334
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.5185185185185185
org.apache.commons.math3.util.FastMath.min(II)I  0.5007451564828614
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.5004887585532747
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.5005793742757821
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  0.506578947368421
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  0.5094339622641509
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  0.5084745762711864
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  0.525
