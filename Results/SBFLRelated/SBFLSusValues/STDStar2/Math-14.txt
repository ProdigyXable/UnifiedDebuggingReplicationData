org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.004901960784313725
org.apache.commons.math3.optim.MaxEval.<init>(I)V  0.005319148936170213
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.010752688172043012
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.010752688172043012
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V  0.011363636363636364
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V  0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.010752688172043012
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;  0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V  0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V  0.023809523809523808
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V  0.01639344262295082
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V  0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V  0.011235955056179775
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;  0.011235955056179775
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V  0.0045662100456621
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.0045662100456621
org.apache.commons.math3.optim.InitialGuess.<init>([D)V  0.005747126436781609
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V  0.0045662100456621
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;  0.003105590062111801
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V  0.0016339869281045752
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0015503875968992248
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V  0.0015479876160990713
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V  0.00847457627118644
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D  0.007575757575757576
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;  0.023809523809523808
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V  0.014084507042253521
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I  0.004464285714285714
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I  0.004484304932735426
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I  0.004310344827586207
org.apache.commons.math3.linear.RealLinearOperator.<init>()V  0.0012919896640826874
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V  0.0015723270440251573
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.038461538461538464
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V  0.038461538461538464
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;  0.038461538461538464
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;  0.038461538461538464
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.125
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D  0.125
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V  0.03571428571428571
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D  0.038461538461538464
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D  0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V  0.038461538461538464
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V  0.034482758620689655
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V  0.037037037037037035
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.043478260869565216
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D  0.038461538461538464
org.apache.commons.math3.util.FastMath.min(II)I  0.0014925373134328358
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V  0.0009784735812133072
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V  0.001160092807424594
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V  0.013333333333333334
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D  0.019230769230769232
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D  0.017241379310344827
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V  0.05263157894736842
