001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.AbstractLinearOptimizer:incrementIterationsCounter()V
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.AbstractLinearOptimizer:optimize(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexSolver:doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexSolver:getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexSolver:getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexSolver:isOptimal(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexSolver:isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexSolver:solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexTableau:createTableau(Z)[[D
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexTableau:discardArtificialVariables()V
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexTableau:divideRow(ID)V
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.optimization.linear.SimplexTableau:subtractRow(IID)V
001|1000.000000|PatchCategory.NoneFix|org.apache.commons.math.util.MathUtils:compareTo(DDD)I
